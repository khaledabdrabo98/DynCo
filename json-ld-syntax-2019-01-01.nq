<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/112> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/112"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/identifier> "112"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/name> "In the middle of a paragraph of  section 3.1." .
<https://api.github.com/users/PaulJeong14> <http://schema.org/accountId> "PaulJeong14" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/22092729?v=4" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/url> "https://github.com/PaulJeong14"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/PaulJeong14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/creator> <https://api.github.com/users/PaulJeong14> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/startDate> "2018-12-27T06:44:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/endDate> "2018-12-27T19:01:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://schema.org/description> "It's a minor editorial thing.\r\n\r\nIn the middle of a paragraph of  section 3.1 The Context,\r\n\r\n> When a when a member with a term key has a dictionary value, the dictionary is called an expanded term definition. \r\n\r\nDelete 'when a'.   " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/111> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/111"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://schema.org/identifier> "111"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://schema.org/name> "Define additional profile URIs" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://schema.org/startDate> "2018-12-21T20:11:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/111> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/111"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/111> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/111> <http://schema.org/description> "... and the interpretation of an unspecified URL for specifying context or frame.\n\nFor #8.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/111.html\" title=\"Last updated on Jan 12, 2019, 8:29 PM UTC (c212913)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/111/6f92b1d...c212913.html\" title=\"Last updated on Jan 12, 2019, 8:29 PM UTC (c212913)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/110> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/110"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/identifier> "110"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/name> "Added informative reference to SPARQL11-OVERVIEW in intro" .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/startDate> "2018-12-18T10:42:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/endDate> "2018-12-18T19:29:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/110> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/110"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/110> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://schema.org/description> "@gkellogg I'd rather use a PR for the moment, to be sure I don't mess things up.\n\nYou'll have to explain to me what magic inserted the correct text for SPARQL11-OVERVIEW in the reference section -- and what would have been required to insert it in the *normative* references instead...\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/110.html\" title=\"Last updated on Dec 18, 2018, 10:43 AM UTC (7ad37e3)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/110/fa04af8...7ad37e3.html\" title=\"Last updated on Dec 18, 2018, 10:43 AM UTC (7ad37e3)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/109> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/109"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://schema.org/identifier> "109"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://schema.org/name> "Add SPARQL to the section I " .
<https://api.github.com/users/PaulJeong14> <http://schema.org/accountId> "PaulJeong14" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/22092729?v=4" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/url> "https://github.com/PaulJeong14"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/PaulJeong14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://schema.org/creator> <https://api.github.com/users/PaulJeong14> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://example.com/ns#assignee> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://schema.org/startDate> "2018-12-18T07:52:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://schema.org/description> "In the introduction section, SPARQL is referred like below. \r\n\r\n> JSON-LD is designed to be usable directly as JSON, with no knowledge of RDF [RDF11-CONCEPTS]. It is also designed to be usable as RDF, if desired, for use with other Linked Data technologies like SPARQL. \r\n\r\nBut no reference for that in section I.  \r\nI suggest putting the SPARQL(https://www.w3.org/TR/sparql11-query/) standard into the section I as an informative reference." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/108> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/identifier> "108"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/name> "Consider context by reference with metadata" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/name> "defer-future-version" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/description> "Defer this issue until a future version of JSON-LD" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> <http://schema.org/name> "privacy-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> <http://schema.org/color> "d4af37" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> <http://schema.org/description> "Group bringing to attention of Privacy, or tracked by the Privacy Group but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/name> "security-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/color> "ffff00" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/description> "Group bringing to attention of security, or tracked by the security Group but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/startDate> "2018-12-14T22:34:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/description> "\r\nOn the call of 2018-12-14, we discussed (briefly) #20, #98, and #86. One realization that came out of the discussion was that we currently have two ways to refer to contexts - either by references as a single string (the URI of the context) or by value as a JSON object (the actual context). In order to have in-document metadata about the context, such as asserting fixity such as via the SRI specification, we would need to have a URI with additional metadata about it.\r\n\r\nQuestions that arise:\r\n\r\n* How to distinguish between a context by value JSON object and a context by reference with metadata JSON object?\r\n* As the version is in the context, and this functionality is only version 1.1, how would we signal the processing requirement - some sort of transclusion within a context that has the version?\r\n* Are metadata properties extensible or fixed in the specification? If they're extensible, we would need some sort of meta-context wherein the mapping is asserted. If they're fixed, we would need to be very careful to accommodate the various use cases otherwise the tendency will be to simply add in new keys regardless and hope for the best.\r\n\r\nFor example:\r\n\r\n```\r\n{\r\n  \"@context\": [\r\n    \"https://example.com/context-by-reference\",\r\n    {\"id\": \"@id\"},\r\n    {\"@version\": 1.1, \"@context\": \"https://example.com/context-with-metadata\", \"@sri\": \"sha256-abcd\"}\r\n  ]\r\n}\r\n```\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/107> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/107"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/identifier> "107"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/name> "Clean up language in issue #56 example" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/startDate> "2018-12-09T01:52:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/endDate> "2018-12-09T19:33:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/107> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/107"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/107> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/107> <http://schema.org/description> "Hey @gkellogg thanks for addressing the issue. This hopefully helps with readability in the example.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/WileyLabs/json-ld-syntax/pull/107.html\" title=\"Last updated on Dec 9, 2018, 1:52 AM GMT (fd98fc3)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/107/28df8b5...WileyLabs:fd98fc3.html\" title=\"Last updated on Dec 9, 2018, 1:52 AM GMT (fd98fc3)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/106> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/106"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/identifier> "106"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/name> "Make requirement for entity encoding non-normative" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/startDate> "2018-12-08T19:50:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/endDate> "2018-12-09T19:34:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/106> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/106"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/106> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://schema.org/description> "and update examples to not show automatic decoding.\n\nFixes #100.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/106.html\" title=\"Last updated on Dec 8, 2018, 7:50 PM GMT (b12a965)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/106/28df8b5...b12a965.html\" title=\"Last updated on Dec 8, 2018, 7:50 PM GMT (b12a965)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/104> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/104"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/identifier> "104"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/name> "Clarify that language map values of `@none` are strings" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/startDate> "2018-12-06T22:24:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/endDate> "2018-12-08T18:52:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/104> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/104"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/104> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/104> <http://schema.org/description> "and not arbitrary data.\n\nFixes #102.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/104.html\" title=\"Last updated on Dec 6, 2018, 10:25 PM GMT (748466c)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/104/b97a16d...748466c.html\" title=\"Last updated on Dec 6, 2018, 10:25 PM GMT (748466c)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/103> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://schema.org/identifier> "103"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://schema.org/name> "what is null base URL for an embedded json-ld?" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://schema.org/startDate> "2018-12-06T08:14:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://schema.org/description> "This issue came up in the Publishing Working Group, see https://github.com/w3c/wpub/issues/374. The question is what exactly the JSON-LD processor's behavior should be if, for some reasons the `baseURI` value for the `<script>` element is null. An example for such a situation is in https://github.com/w3c/wpub/issues/374#issuecomment-444537196, brought up by @danielweck." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/102> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/102"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/identifier> "102"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/name> "@none for language maps clarification" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/startDate> "2018-12-05T18:20:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/endDate> "2018-12-08T05:54:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://schema.org/description> "In https://www.w3.org/TR/json-ld11/#language-indexing, it says:\r\n\r\n> ... the special index @none is used for indexing data which does not have a language ...\r\n\r\nIs that a string that really has no language (e.g. just a random set of characters) or can it be a string that is not known to have a language, but might in practice?" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/101> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/101"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/identifier> "101"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/name> "expansion does not associate keys to ids" .
<https://api.github.com/users/satra> <http://schema.org/accountId> "satra" .
<https://api.github.com/users/satra> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/184063?v=4" .
<https://api.github.com/users/satra> <http://schema.org/url> "https://github.com/satra"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/satra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/creator> <https://api.github.com/users/satra> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/startDate> "2018-12-02T21:16:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/endDate> "2018-12-02T21:58:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://schema.org/description> "Expanded form of this example:\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"ui_order\": {\r\n     \"@id\": \"https://schema.repronim.org/ui_order\",\r\n     \"@container\": \"@list\",\r\n     \"@type\": \"@id\"\r\n    },\r\n    \"phq9_1\": {\r\n      \"@id\": \"https://schema.repronim.org/phq9_1.jsonld\",\r\n      \"@type\": \"@id\"\r\n    },\r\n    \"phq9_2\": {\r\n      \"@id\": \"https://schema.repronim.org/phq9_2.jsonld\",\r\n      \"@type\": \"@id\"\r\n    }\r\n  },\r\n  \"ui_order\": [\r\n    \"phq9_1\",\r\n    \"phq9_2\"]\r\n}\r\n```\r\n\r\nreturns:\r\n\r\n```json\r\n[{\"https://schema.repronim.org/ui_order\": \r\n    [{\"@list\": [{\"@id\": \"https://json-ld.org/playground-dev/phq9_1\"},\r\n                {\"@id\": \"https://json-ld.org/playground-dev/phq9_2\"}\r\n]}]}]\r\n```\r\n\r\nwe were expecting that the URIs would be the ID's in the keys instead of the playground prefix. are we interpreting something incorrectly?\r\n\r\n[Playground link](https://json-ld.org/playground-dev/#startTab=tab-expanded&json-ld=%7B%22%40context%22%3A%7B%22%40version%22%3A1.1%2C%22ui_order%22%3A%7B%22%40id%22%3A%22https%3A%2F%2Fschema.repronim.org%2Fui_order%22%2C%22%40container%22%3A%22%40list%22%2C%22%40type%22%3A%22%40id%22%7D%2C%22phq9_1%22%3A%7B%22%40id%22%3A%22https%3A%2F%2Fschema.repronim.org%2Fphq9_1.jsonld%22%2C%22%40type%22%3A%22%40id%22%7D%2C%22phq9_2%22%3A%7B%22%40id%22%3A%22https%3A%2F%2Fschema.repronim.org%2Fphq9_2.jsonld%22%2C%22%40type%22%3A%22%40id%22%7D%7D%2C%22ui_order%22%3A%5B%22phq9_1%22%2C%22phq9_2%22%5D%7D&frame=%7B%22ui_order%22%3A%7B%22%40type%22%3A%22https%3A%2F%2Fraw.githubusercontent.com%2Fsanuann%2Fschema-standardization%2Fmaster%2Fschemas%2FField.jsonld%22%2C%22%40explicit%22%3Atrue%7D%7D&context=%7B%7D)\r\n\r\nwe could of course do this to make the URLs in this case explicit, but trying to figure out how keys defined in context are interpreted:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"ui_order\": {\r\n     \"@id\": \"https://schema.repronim.org/ui_order\",\r\n     \"@container\": \"@list\",\r\n     \"@type\": \"@id\"\r\n    },\r\n    \"rs\": \"https://schema.repronim.org/\"\r\n  },\r\n  \"ui_order\": [\r\n    \"rs:phq9_1.jsonld\",\r\n    \"rs:phq9_2.jsonld\"]\r\n}\r\n```\r\n\r\ncc: @sanuann" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/100> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/100"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/identifier> "100"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/name> "Handling HTML character references in embedded JSON-LD" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/startDate> "2018-12-01T22:36:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/endDate> "2018-12-09T19:34:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://schema.org/description> "PR #97 and w3c/json-ld-api#51 resolved embedding JSON-LD in provide for HTML character references (entities) to be encoded within a data block so that critical elements are not mishandled by HTML parsers. As written this requires authors to encode sequences such as `<script></script>` which may occur in JSON-LD strings, and for these to be decoded when being extracted by the API.\r\n\r\nIt seems that the structured-data testing tool does not do this, and it's not clear what provisions are made for potentially problematic content.\r\n\r\nOne way to resolve this would be to provide direction to content authors to avoid any JSON-LD content embedded in HTML which could cause such a problem, which seems to be current practice. If character references are encoded, decoding is required at some layer.\r\n\r\ncc/ @danbri @BigBlueHat " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/99> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/99"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://schema.org/identifier> "99"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://schema.org/name> "Confused about version triggering" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://schema.org/startDate> "2018-11-29T22:19:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://schema.org/description> "Current text states...\r\n> <p>The first <code>context</code> encountered when processing a document which contains <code>@version</code> determines the <code>processing mode</code>, unless it is defined explicitly through an API option.</p>\r\n\r\nHowever, the [1.1 playground](http://json-ld.org/playground-dev/) at least, seems to \"switch\" on the first context object even if it does *not* have an `@version`.\r\n\r\n[For example](https://json-ld.org/playground-dev/#startTab=tab-nquads&json-ld=%7B%22%40context%22%3A%5B%22http%3A%2F%2Fschema.org%2F%22%2C%7B%22%40version%22%3A1.1%7D%5D%2C%22%40type%22%3A%22Person%22%2C%22name%22%3A%22bar%22%7D):\r\n```json\r\n{\r\n  \"@context\": [\r\n    \"http://schema.org/\",\r\n    {\r\n      \"@version\": 1.1\r\n    }\r\n  ],\r\n  \"@type\": \"Person\",\r\n  \"name\": \"bar\"\r\n}\r\n```\r\n\r\nThrows:\r\n```\r\njsonld.ProcessingModeConflict: @version: 1.1 not compatible with json-ld-1.0\r\n```\r\n\r\nSo, my current proposal is to reword that text to:\r\n> <p>Unless it is defined explicitly through an API option, the first <code>context</code> encountered when processing a document determines the <code>processing mode</code>.</p>\r\n\r\nHowever, I'm not sure if that matches any pre-existing thoughts/plans for version triggering.\r\n\r\nDoes a `@context` *without* `@version` state that it should be processed as `json-ld-1.0`? Or since it hasn't stated an `@version` does it just fallback to the default set in the JSON-LD processor (which is currently 1.0 most places)?\r\n\r\nThe API's [4.1.2. Algorithm step 3.5](https://w3c.github.io/json-ld-api/#x4-1-2-algorithm) describes the scenario when `@version` has been set to *something* within the context, but doesn't explain what happens when one is *not* present.\r\n\r\nSo, beyond updating the text above, we may also need to address this in the API spec also." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/98> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://schema.org/identifier> "98"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://schema.org/name> "Is there a scope context mechanism for clearing context definitions?" .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://schema.org/startDate> "2018-11-29T16:31:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://schema.org/description> "Is there a way to use the scoped context mechanism to \"embed\" information in a JSON-LD document such that all term definitions are cleared? So, for example, suppose we had this:\r\n\r\n```js\r\n{\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"someTermToClear\": \"ex:someTermToClear\",\r\n    \"record\": {\"@id\": \"ex:record\", \"@container\": \"@graph\", \"@context\": null}\r\n  },\r\n  \"someTermToClear\": \"should be defined here\",\r\n  \"record\": {\r\n    \"@context\": {\r\n      \"someOtherStuff\": \"ex:someOtherStuff\"\r\n    },\r\n    \"@id\": \"ex:someId\",\r\n    \"someOtherStuff\": \"this should be defined here\",\r\n    \"someTermToClear\": \"this should NOT be defined here\"\r\n  }\r\n}\r\n```\r\n\r\nThe goal here is to avoid requiring the author of `record` value (or a user of it) to have to know to clear any terms in an \"outer container\". This may allow \"safer\" composition/embedding of JSON-LD documents." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/97> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/identifier> "97"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/name> "Remove the need for wrapping comment-open/comment-close text in data blocks" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/startDate> "2018-11-28T21:09:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/endDate> "2018-12-01T22:37:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/97> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/97> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://schema.org/description> "Addresses the concerns expressed in #96.\n\nThis PR also includes putting the `<base>` handling content in its own section, and clarifies the extraction of a single, targeted data block. I can move those to separate PRs if desired, as they do introduce requirements unrelated to the topic in #96. They do clarify/specify the use of targeting vs. not targeting specific data blocks. But my apologies for the mixed PR.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/97.html\" title=\"Last updated on Nov 30, 2018, 7:08 PM GMT (63017bd)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/97/3320d83...63017bd.html\" title=\"Last updated on Nov 30, 2018, 7:08 PM GMT (63017bd)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/96> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/96"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/identifier> "96"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/name> "JSON-LD script elements (data blocks) MUST only contain valid JSON" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/startDate> "2018-11-28T21:06:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/endDate> "2018-12-13T19:36:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://schema.org/description> "The current editor's draft suggests wrapping JSON-LD in a data block with `<!--` and `-->` to avoid some HTML parsing situations. Ultimately, that means that we're suggesting that the contents of an embedded JSON-LD data block is legally *invalid* JSON-LD...which seems bad...\r\n\r\nConsequently, I'd like to propose that we *only* specify the entity encoding of certain strings within the JSON-LD contents to avoid the potential HTML parsing mishaps described in HTML's [Restrictions on contents of script elements](https://www.w3.org/TR/html52/semantics-scripting.html#restrictions-for-contents-of-script-elements) section.\r\n\r\nDoing that avoids encouraging invalid JSON-LD and removes the additional unique parsing steps for cleaning out the wrapping `<!--` and `-->`.\r\n\r\nPR forthcoming." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/95> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/95"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/identifier> "95"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/name> "Add example and description for issue #56." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/startDate> "2018-11-28T20:07:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/endDate> "2018-11-30T18:34:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/95> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/95"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/95> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://schema.org/description> "Hopefully, this clarifies the differences between vocabulary-relative and document-relative resolution.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/95.html\" title=\"Last updated on Nov 29, 2018, 11:17 PM GMT (5fba988)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/95/44fc855...5fba988.html\" title=\"Last updated on Nov 29, 2018, 11:17 PM GMT (5fba988)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/94> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/94"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/identifier> "94"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/name> "Our Sites Are Hacked By Unauthorized Dynamic JSON-LD" .
<https://api.github.com/users/ticketron> <http://schema.org/accountId> "ticketron" .
<https://api.github.com/users/ticketron> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/45087710?v=4" .
<https://api.github.com/users/ticketron> <http://schema.org/url> "https://github.com/ticketron"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ticketron> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/creator> <https://api.github.com/users/ticketron> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/startDate> "2018-11-16T04:19:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/endDate> "2018-11-16T14:34:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://schema.org/description> "Is there a way to prevent this? Apparently a 3rd party competitor hacked our websites, Bing and Google accounts and more. Now We have SCripts From JSON-LD and Schema.org all over our site. This is totally unauthorized as our sites are Federally Trademarked. It seems the Dynamic coding is locked with a key and inaccessible to us. Any real information on how to fix this situation would be greatly appreciated. The websites are Ticketron.com and Ticketron.us. This hack has greatly damaged our brand and we are hoping to finally put it behind us and move forward. \r\n\r\nThank You" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/93> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/93"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/identifier> "93"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/name> "Html base" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/startDate> "2018-11-15T19:59:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/endDate> "2018-11-16T19:20:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/93> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/93"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/93> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://schema.org/description> "(Based on PR #68).\n\nThis adds back language and examples for using HTML base for resolving relative IRIs.\n\nFixes #23.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/93.html\" title=\"Last updated on Nov 16, 2018, 7:13 PM GMT (26e5295)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/93/155b409...26e5295.html\" title=\"Last updated on Nov 16, 2018, 7:13 PM GMT (26e5295)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/92> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/identifier> "92"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/name> "Improve keyword descriptions" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/startDate> "2018-11-15T02:00:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/endDate> "2018-11-17T19:54:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/92> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/92> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://schema.org/description> "* Improved `@type` keyword definition, and added _Uses of JSON Objects_ section.\n* Add a section on keywords to the grammar, and slight improvement to type values.\n\nAddresses #77.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/92.html\" title=\"Last updated on Nov 17, 2018, 7:27 PM GMT (a42ebb3)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/92/337f184...a42ebb3.html\" title=\"Last updated on Nov 17, 2018, 7:27 PM GMT (a42ebb3)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/91> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/91"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/identifier> "91"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/name> "Allow @type for @none in Language Maps" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/startDate> "2018-11-06T18:04:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/endDate> "2018-12-08T05:59:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://schema.org/description> "Multilingual values in JSON-LD is currently best handled by using the `rdf:HTML` datatype on a value in JSON-LD. However, that currently cannot be used alongside language maps.\r\n\r\nThe following example is cribbed from https://github.com/w3c/wpub/issues/299 + the addition of `@none`:\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"occupation\": { \"@id\": \"ex:occupation\", \"@container\": \"@language\" },\r\n    \"description\": \"ex:description\"\r\n  },\r\n  \"name\": \"Yagyū Muneyoshi\",\r\n  \"occupation\": {\r\n    \"ja\": \"忍者\",\r\n    \"en\": \"Ninja\",\r\n    \"cs\": \"Nindža\",\r\n    \"@none\": \"<span lang=en>Ninja in japanese: <span lang=jp>忍者</span>\"\r\n  }\r\n}\r\n```\r\n\r\nThe output n-quads looks like:\r\n```turtle\r\n_:b0 <ex:occupation> \"<span lang=en>Ninja in japanese: <span lang=jp>忍者</span>\" .\r\n_:b0 <ex:occupation> \"Nindža\"@cs .\r\n_:b0 <ex:occupation> \"Ninja\"@en .\r\n_:b0 <ex:occupation> \"忍者\"@ja .\r\n```\r\n\r\nIf the content is in fact multilingual, then that first triple should look like:\r\n```turtle\r\n_:b0 <ex:occupation> \"<span lang=en>Ninja in japanese: <span lang=jp>忍者</span>\" ^^rdf:HTML.\r\n```\r\n\r\nThe first alternative I tried to express this was:\r\n```json\r\n{\r\n  \"occupation\": {\r\n    \"ja\": \"忍者\",\r\n    \"en\": \"Ninja\",\r\n    \"cs\": \"Nindža\",\r\n    \"@none\": {\r\n      \"@value\": \"<span lang=en>Ninja in japanese: <span lang=jp>忍者</span>\",\r\n      \"@type\": \"rdf:HTML\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWhich currently throws:\r\n```\r\njsonld.SyntaxError: Invalid JSON-LD syntax; language map values must be strings.\r\n```\r\n\r\nGiven that `rdf:HTML` is the current recommendation for multilingual content in RDF, JSON, YAML, etc, I'd propose we find ways to express `rdf:HTML` (and perhaps future datatypes) as the type of `@none` would found in a language map--at the `@context` level and/or within the data.\r\n\r\nCheers!\r\n🎩 " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/90> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/90"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/identifier> "90"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/name> "Mark blank node property labels as obsolete" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/startDate> "2018-10-31T22:22:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/endDate> "2018-11-01T22:08:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/90> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/90"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/90> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://schema.org/description> "…and generalized RDF datasets.\r\n\r\nFixes #37." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/89> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/89"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/identifier> "89"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/name> "TAG Review Request: Base used to resolve relative URIs to absolute URIs in HTML5 data-blocks" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/startDate> "2018-10-26T14:56:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/endDate> "2018-10-28T16:02:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://schema.org/description> "This issue is to create a TAG review issue. Partially filled template is below.\r\n\r\n---\r\n\r\nSalut TAG,\r\n\r\nI'm requesting a TAG review of:\r\n\r\n  - Name: JSON-LD embedded in HTML with relative URIs\r\n  - Specification URL: https://github.com/w3c/json-ld-syntax/issues/23 \r\n  - Explainer, Requirements Doc, or Example code: [url]\r\n  - Tests: [wpt folder(s), if available]\r\n  - Primary contacts: @azaroth42 @bigbluehat @iherman @gkellogg\r\n\r\nFurther details (optional):\r\n\r\n  - Relevant time constraints or deadlines: [please provide]\r\n  - [ ] I have read and filled out the [Self-Review Questionnaire on Security and Privacy](https://www.w3.org/TR/security-privacy-questionnaire/). The [assessment is here](url).\r\n  - [X] I have reviewed the TAG's [API Design Principles](https://w3ctag.github.io/design-principles/)\r\n\r\nWe'd prefer the TAG provide feedback as (please select one):\r\n\r\n  - [ ] open issues in our Github repo for each point of feedback\r\n  - [ ] open a single issue in our Github repo for the entire review\r\n  - [X] leave review feedback as a comment in this issue and @-notify @azaroth42 @bigbluehat @iherman @gkellogg\r\n\r\nYou should also know that...\r\n\r\n[please tell us anything you think is relevant to this review]\r\n\r\n\r\n\r\n\r\n--------------------------\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/88> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/88"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/identifier> "88"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/name> "It's a little bit strange to refer to previous version in the reference section." .
<https://api.github.com/users/PaulJeong14> <http://schema.org/accountId> "PaulJeong14" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/22092729?v=4" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/url> "https://github.com/PaulJeong14"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/PaulJeong14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/creator> <https://api.github.com/users/PaulJeong14> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/startDate> "2018-10-26T05:00:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/endDate> "2018-11-01T22:24:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://schema.org/description> "This is simple editorial comment for the document.\r\nJSON_LD11(previous version of JSON_LD11 WD) is in the I.1  Normative Reference like below.\r\n\r\n>I.1 Normative Reference \r\n>[JSON-LD11]\r\n> JSON-LD 1.1. Gregg Kellogg. W3C. 11 September 2018. W3C Working Draft. URL:https://www.w3.org/TR/json-ld11/\r\n\r\nMost of W3C Document don't refer to previous version in the reference section.\r\nIt might to be better to delete it from reference section to avoid confusion and for consistency with other documents.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/87> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/87"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://schema.org/identifier> "87"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://schema.org/name> "Add ability to restrict overriding of terms with graph containers" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://schema.org/startDate> "2018-10-25T12:51:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://schema.org/description> "Related to #20 -- or at least proposed off the cuff by yours truly. 😁 " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/86> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/86"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://schema.org/identifier> "86"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://schema.org/name> "Can SRI be used in JSON-LD and for which use cases?" .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/name> "security-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/color> "ffff00" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/description> "Group bringing to attention of security, or tracked by the security Group but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://schema.org/startDate> "2018-10-25T09:59:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://schema.org/description> "[Subresource Integrity](https://www.w3.org/TR/SRI) can be used in HTML to provide integrity support for portions of HTML documents. It may be possible to reuse that pattern in JSON-LD, and it might support various use cases around integrity, but the basic question of whether it can be done in JSON-LD syntax is still open." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/85> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://schema.org/identifier> "85"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://schema.org/name> "how to set \"@version\" for a list of contexts?" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://schema.org/startDate> "2018-10-16T10:28:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://schema.org/description> "I would like to specify for a list of contexts \r\n\r\n```\r\n{ \"@context\": [\"http://domain1.org/context1.jsonld\", \"http://domain2.org/context2.jsonld\"]}\r\n...\r\n```\r\nthe version of the processor.\r\n\r\nIt seems that  \"@version\" is only defined in case an expanded context is used. And that the above reuse case is not supported.\r\n\r\nkr,\r\n\r\nBert\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/84> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/84"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/identifier> "84"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/name> "feature request: support property path generation" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/startDate> "2018-10-16T09:43:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/endDate> "2018-10-19T10:06:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://schema.org/description> "We are currently annotating our json-APIs with json-ld contexts.\r\nIn that process we encounter the following situation:\r\n\r\nInput json:\r\n\r\n```\r\n{\r\n   \"@id\" : \"http://data.domain.org/id/concept/1\",\r\n   \"structuredIdentifier\": {\r\n        \"namespace\" : \"http://data.domain.org/id/concept/\",\r\n        \"localid\": \"1\",\r\n        \"version\": \"v20\"\r\n      } \r\n}\r\n```\r\ntarget semantic model:\r\nevery item has as property  _identifier_ which is a complex structure, having e.g the property  _structuredIdentifier_.\r\n\r\nSo the target RDF structure is as follows:\r\n```\r\n<http://data.domain.org.id/concept/1> <domain:identifier> _:b1.\r\n_:b1 <domain:structuredIdentifier> _:b2.\r\n_:b2 <domain:namespace> \"http://data.domain.org/id/concept/\".\r\n...\r\n``` \r\n\r\nAs far I know there is no way json-ld mappings can express the introduction of a property path that would consist of anonymous nodes. Or am I wrong. Has this topic been discussed before?\r\n\r\nNote: I am aware that a next topic that would be connected to this request, is the one of \"unification\" among the generated property paths. i.e. that the intermediate generated blank nodes (_:b1 in the example) would be the same for similar mappings.  But for the time being, I would be happy with just the property path generation without unification. \r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/83> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/83"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/identifier> "83"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/name> "Dfn cleanup" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/startDate> "2018-10-12T17:56:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/endDate> "2018-10-12T21:23:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/83> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/83"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/83> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/83> <http://schema.org/description> "* Make definition identifiers singular, and use automatic term pluralization.\n* Update previous published version.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/83.html\" title=\"Last updated on Oct 12, 2018, 6:05 PM GMT (7f2d633)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/83/b0538c2...7f2d633.html\" title=\"Last updated on Oct 12, 2018, 6:05 PM GMT (7f2d633)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/82> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/82"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://schema.org/identifier> "82"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://schema.org/name> "Better styling on example buttons" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://example.com/ns#assignee> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://schema.org/startDate> "2018-10-12T17:49:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://schema.org/description> "Example buttons could be styled better, and the link to playground should look different from the others which serve to switch example views." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/81> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/81"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://schema.org/identifier> "81"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://schema.org/name> "Better styling of changes" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://example.com/ns#assignee> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://schema.org/startDate> "2018-10-12T17:48:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/81> <http://schema.org/description> "All documents include classes that make it easy to see what's changed from 1.0. This could be styled better." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/80> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/80"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/identifier> "80"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/name> "Set sudo and docker services on links stage only." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/startDate> "2018-10-11T18:15:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/endDate> "2018-10-11T19:36:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/80> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/80"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/80> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/80> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/79> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/79"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/identifier> "79"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/name> "fix travis config for echidna" .
<https://api.github.com/users/deniak> <http://schema.org/accountId> "deniak" .
<https://api.github.com/users/deniak> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1696128?v=4" .
<https://api.github.com/users/deniak> <http://schema.org/url> "https://github.com/deniak"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/deniak> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/creator> <https://api.github.com/users/deniak> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/startDate> "2018-10-09T08:49:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/endDate> "2018-10-09T14:06:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/79> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/79"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/79> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/79> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/78> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/identifier> "78"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/name> "JSON-LD specifications with embedded JSON-LD (and Microdata)" .
<https://api.github.com/users/kael> <http://schema.org/accountId> "kael" .
<https://api.github.com/users/kael> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2463?v=4" .
<https://api.github.com/users/kael> <http://schema.org/url> "https://github.com/kael"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kael> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/creator> <https://api.github.com/users/kael> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/startDate> "2018-10-07T17:48:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/endDate> "2018-10-09T08:31:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://schema.org/description> "Similarly to the Webmention [specification](https://www.w3.org/TR/webmention/) which includes a `<link rel=\"webmention\" href=\"https://webmention.net/endpoint.php\">` in its HTML code _**as defined in the spec itself**_, it'd be nice to have JSON-LD contexts embedded in the HTML code of the JSON-LD specifications, demonstrating a _\"proof by example\"_.\r\n\r\nPerhaps mixing with Microdata would be nice too.\r\n\r\nFor developers, it'd be a way to learn by example." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/77> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/identifier> "77"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/name> "Disambiguate uses of @type" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/startDate> "2018-10-05T17:48:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/endDate> "2018-12-08T05:53:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://schema.org/description> "Related to json-ld-api#33, we discussed on 2018-10-05 WG call the distinction between `@type` as a baked in alias for `rdf:type`, and `@type` as a function of the syntax for specifying the data type of the JSON object (resource vs literal, and type of literal), via the context.\r\n\r\nThere was general agreement that this was a common source of confusion, and could be ameliorated for expansion by introducing an alias (for example `@datatype`) but that this would add to confusion in compaction, as it would replace `@type` everywhere.  A more robust change would require a change to the specification to allow either `@type` or `@datatype` as the way to specify the data type, however that is a significant addition that should be considered in detail.\r\n\r\nFurther, one might introduce `type`: `rdf:type` in a context, rather than use the more magical `@type`. This approach would also impact the specifications, but would follow from the rejection of the `@label` syntactic sugar  in #6.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/76> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://schema.org/identifier> "76"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://schema.org/name> "Node Types in @context" .
<https://api.github.com/users/AtesComp> <http://schema.org/accountId> "AtesComp" .
<https://api.github.com/users/AtesComp> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/23365631?v=4" .
<https://api.github.com/users/AtesComp> <http://schema.org/url> "https://github.com/AtesComp"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/AtesComp> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://schema.org/creator> <https://api.github.com/users/AtesComp> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://schema.org/startDate> "2018-10-04T21:40:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://schema.org/description> "So, reading the specification, I see the the line:\r\n  \"Specifically, @type cannot be used in a context to define a node's type.\"\r\nwhere I ask, WTF? Why not?  Why so short-sighted?  Why do node types need to be red-headed stepchildren?\r\n\r\nGiven conversions from JSON to JSON-LD , it would be **extremely** useful to apply type (coercion) to IRIs and blank nodes via @context.  Example:\r\n\r\nGiven\r\n```\r\n{\r\n  \"type\": \"indicator\",\r\n  \"id\": \"indicator--e2e1a340-4415-4ba8-9671-f7343fbf0836\",\r\n  \"external_references\": [\r\n    {\r\n      \"source_name\": \"veris\",\r\n      \"external_id\": \"0001AA7F-C601-424A-B2B8-BE6C9F5164E7\",\r\n      \"url\": \"https://github.com/vz-risk/VCDB/blob/master/data/json/0001AA7F-C601-424A-B2B8-BE6C9F5164E7.json\"\r\n    }\r\n  ]\r\n}\r\n```\r\nI can header the data with a context:\r\n```\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"@base\": \"http://purl.org/cyber/stix/identifier/\",\r\n    \"@vocab\": \"http://purl.org/cyber/stix/vocab/\",\r\n\r\n    \"stix\": \"http://purl.org/cyber/stix#\",\r\n    \"id\": \"@id\",\r\n    \"type\": \"@type\",\r\n    \"indicator\": \"stix:Indicator\",\r\n    \"external_references\": {\r\n      \"@type\": \"@id\",\r\n      \"@context\": {\r\n        \"url\": { \"@type\": \"@id\" }\r\n      }\r\n    }\r\n  },\r\n```\r\nwhich converts the data somewhat nicely.  Pop it into the JSON-LD 1.1 Playground and view the table.  I've severely limited the example for clarity.\r\n\r\nGenerally the properties \"external_references\", \"url\", and others would have ontology definitions to cast the un-typed nodes.  However, this is not always the case.  As an example, let's assume \"external_references\" does not cast to a single definitive node type.  The \"external_references\" structure will produce a blank node without type.  We have applications where a property key name may be used in different contexts (thanks for scoped @context !!!) and therefore may indicate different node types.  An ontology can define multiple types for a given property, but its not definitive.  The data may specify the definitive node type by context.  Without a method to type nodes in context, the specification severely limits the usefulness of the conversion.\r\n\r\nSUGGESTION:\r\n\r\nSince \"@type\" allows for all manner of data typing, why not allow \"@type\" to also provide node typing.  It seems a simple addition to the specification, such as:\r\n```\r\n  \"@type\": { \"@id\": \"http://my.friggin.org/has/class\" }\r\n```\r\nwhere we specify the context is a node, as before, with the addition of the node type(s) [sure, more than one node type using \"@id\": { \"nt1\", \"nt2\" } or maybe multiple \"@type\" statements, why not?].  I'm not saying we NEED multiple types for the specification.  Allowing for just one node type would be monumental.  In fact, \r\n```\r\n  \"@type\": { \"http://my.friggin.org/has/class\" }\r\n```\r\nmight be enough or a short form as it might imply \"@id\".  Or maybe add a specification for value types as well (just to be thoughtful about values):\r\n```\r\n  \"@type\": { \"@value\": \"http://my.friggin.org/has/valueType\" }\r\n```\r\nAhh, uniformity!  So, here are the different context types:\r\n```\r\n  \"@type\": valuetype\r\n  \"@type\": { \"@value\": valuetype }\r\n  \"@type\": \"@id\"\r\n  \"@type\": { \"@id\": nodetype }\r\n```\r\nNOTE: There was some discussion about allowing the value to be both a node type and a data type.  There is something very wrong about that kind of data pattern.\r\n\r\nThe above context would be modified as follows:\r\n```\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"@base\": \"http://purl.org/cyber/stix/identifier/\",\r\n    \"@vocab\": \"http://purl.org/cyber/stix/vocab/\",\r\n\r\n    \"stix\": \"http://purl.org/cyber/stix#\",\r\n    \"id\": \"@id\",\r\n    \"type\": \"@type\",\r\n    \"indicator\": \"stix:Indicator\",\r\n    \"external_references\": {\r\n      \"@type\": { \"@id\": \"stix:ExternalReference\" },\r\n      \"@context\": {\r\n        \"url\": { \"@type\": {\"@id\": \"stix:URL\"} }\r\n      }\r\n    }\r\n  },\r\n```\r\nNow, I could query for all things \"stix:ExternalReference\" or \"stix:URL\" without resorting to a bastardized conversion therapy." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/75> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/identifier> "75"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/name> "Weird wording in spec of Iri Compaction" .
<https://api.github.com/users/pietervdvn> <http://schema.org/accountId> "pietervdvn" .
<https://api.github.com/users/pietervdvn> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1466478?v=4" .
<https://api.github.com/users/pietervdvn> <http://schema.org/url> "https://github.com/pietervdvn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pietervdvn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/creator> <https://api.github.com/users/pietervdvn> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/startDate> "2018-10-04T13:10:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/endDate> "2018-12-06T23:50:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://schema.org/description> "The spec of [iri compaction](https://w3c.github.io/json-ld-api/#iri-compaction) states in 2.8\r\n\r\n> 2.8.1: If value contains an `@index` member, append the values `@graph@index` and `@graph@index@set` to containers.\r\n\r\n> 2.8.4 If value does **not** contain the key `@index`, append the values `@graph@index` and `@graph@index@set` to containers.\r\n\r\nIn other words, this boils down to _always_ adding `@graph@index` and `@graph@index@set` to the `containers` array.\r\n\r\nSo either the spec can be simplified or some copy-paste error occurred. Could you please clarify?" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/74> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/74"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/identifier> "74"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/name> "Type as set" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/startDate> "2018-10-01T23:27:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/endDate> "2018-10-03T17:30:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/74> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/74"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/74> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://schema.org/description> "Allows `@type` to be defined with `@container: @set`. Most descriptions of behavior left to the API document." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/73> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/73"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/identifier> "73"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/name> "Improve language around datatype coercion." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/startDate> "2018-09-28T20:43:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/endDate> "2018-10-01T15:17:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/73> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/73"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/73> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/73> <http://schema.org/description> "Fixes #38.\r\n\r\n***\r\n(added manually)\r\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/73.html\">Preview</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/72> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/72"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://schema.org/identifier> "72"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://schema.org/name> "Allow relative IRIs for @vocab" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://schema.org/startDate> "2018-09-28T18:27:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://schema.org/description> "JSON-LD separates handling of IRI conversions for document- and vocabulary-relative IRIs. At times, it is useful to have more vocabulary items be considered in the document space. A change was made to allow the empty string (\"\") as a value for `@vocab`, but this may not be adequate.\r\n\r\nIssue #56 somewhat complains about this, as does #37.\r\n\r\nCurrently, the Syntax document describes this in [§4.1.2.1 Using the Document Base as the Default Vocabulary](https://www.w3.org/TR/json-ld11/#using-the-document-base-as-the-default-vocabulary), but the use of a term `\"#breweats\"` is not a natural JSON property. If `@vocab` could be set to `\"#\"`, this would allow a more natural expression.\r\n\r\nThe API document has a carve-out for the empty string, but otherwise require `@vocab` to resolve to an absolute IRI:\r\n\r\n> Otherwise, if value is an _absolute IRI_ or _blank node identifier_, the vocabulary mapping of result is set to value. If it is not an _absolute IRI_, or a _blank node identifier_, an `invalid vocab mapping` error has been detected and processing is aborted.\r\n\r\nThe proposal would be to treat things that are not absolute IRIs as IRIs relative to the document base as does the current empty-string carveout:\r\n\r\n> Otherwise, if value the empty string (\"\"), the effective value is the current _base IRI_.\r\n\r\nResolving vocabulary-relative IRIs is done with simply concatenation, so the proposal would be to concatenate any non-absolute IRI value of `@vocab` to _base IRI_ by concatenating the value of `@vocab` to _base IRI_; if the result is not then a valid _absolute IRI_ we would continue to generate an `invalid vocab mapping` error. Note that this sill not invalidate any 1.0 documents, but will allow things which were previously not valid." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/71> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/identifier> "71"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/name> "Test PR Preview" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/startDate> "2018-09-27T17:53:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/endDate> "2018-10-03T16:43:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/71> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/71> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://schema.org/description> "**Don't merge this.**\r\n\r\nCreates a minimal index.html without any pubsubhub integrations to see if PR Preview will wake up." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/70> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/identifier> "70"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/name> "Add playground links to most examples" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/startDate> "2018-09-24T22:53:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/endDate> "2018-09-27T21:30:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/70> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/70> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://schema.org/description> "Only does expansion, at least for now.\r\n\r\nFixes #48." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/69> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/69"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/identifier> "69"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/name> "Improve data model diagram with examples showing different encodings." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/startDate> "2018-09-24T21:20:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/endDate> "2018-09-26T19:33:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/69> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/69"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/69> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://schema.org/description> "This should fix #29." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/68> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/identifier> "68"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/name> "JSON-LD in HTML" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/startDate> "2018-09-23T23:30:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/endDate> "2018-11-16T19:03:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/68> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/68> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://schema.org/description> "Update the JSON-LD in HTML section to be normative, describe dataset extraction, how to deal with multiple script elements and script element targeting using fragments.\n\nI took some license to describe targeting specific script element using fragments and on the treatment of embedded escape sequences and comments.\n\nFixes #57.\n\n**This should not be merged before appropriate changes made to json-ld-api.**\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html\" title=\"Last updated on Nov 16, 2018, 6:46 PM GMT (e7ae46f)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/68/04fe116...e7ae46f.html\" title=\"Last updated on Nov 16, 2018, 6:46 PM GMT (e7ae46f)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/67> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/identifier> "67"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/name> "Improved examples" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/startDate> "2018-09-21T22:46:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/endDate> "2018-09-24T16:17:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/67> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/67> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://schema.org/description> "Makes most of the changes called for in #26.\r\n\r\nTabbed UI could use some styling assistance.\r\n\r\nThere remain some examples which didn't make sense to use the tabular format, and in some cases, examples are interrelated (as before), but include attributes to allow them to be checked against each other.\r\n\r\nExamples _do not_ include graphical images representing the equivalent graphs. These would add even more of a burden, and each would require it's own separate accessibility explanation, so doesn't seem worth it. That said, we may want to include more graphics on a case-by-case basis.\r\n\r\nVisually, the document is somewhat shorter, but the HTML source is inflated quite a bit. I'm not in favor of splitting the document into multiple parts, regardless." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/66> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/66"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/identifier> "66"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/name> "Fragment identifiers with ':'" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:bug> <http://schema.org/name> "spec:bug" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:bug> <http://schema.org/color> "ba39ce" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:bug> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:bug> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/startDate> "2018-09-17T20:34:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/endDate> "2018-10-04T20:05:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://schema.org/description> "A bug was noted where the following was not expanded properly:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@base\": \"https://ex.org/\",\r\n    \"u\": {\"@id\": \"urn:u:\", \"@type\": \"@id\"}\r\n  },\r\n  \"u\": [\"#Test\", \"#Test:2\"]\r\n}\r\n```\r\n\r\nThe issue is that the expand IRI algorithm splits \"#Test:2\" on the colon, where it is intended to be part of the fragment identifier, which is legal.\r\n\r\nEither the algorithm needs to be made more complex by detecting this, or we should explicitly say that fragment identifiers containing ':' are not supported.\r\n\r\ncc /@davidlehn " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/65> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/identifier> "65"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/name> "Updates for ECHIDNA:" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> <http://schema.org/name> "spec:w3c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> <http://schema.org/color> "ede989" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/startDate> "2018-09-14T18:41:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/endDate> "2018-10-06T23:27:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/65> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/65> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://schema.org/description> "# **Not ready for merge**\n\n* Requires token be generated and updated in .travis.yml.\n* Publication happens when pushed to \"publications\" branch.\n* Requires URL to WG Decision from meeting minutes.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/65.html\" title=\"Last updated on Sep 17, 2018, 8:29 PM GMT (488f215)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/65/a7faf5b...488f215.html\" title=\"Last updated on Sep 17, 2018, 8:29 PM GMT (488f215)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/64> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/64"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/identifier> "64"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/name> "Create additional assertions via contexts" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/startDate> "2018-09-04T20:49:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/endDate> "2018-09-13T17:05:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://schema.org/description> "(This is a meta-issue)\r\n\r\nMany existing JSON structures use simple \"short cut\" properties when there is only a single piece of information known about an intermediate resource.  For example, if only the name of the author of a book is known then a `creator` property with a literal value is shorthand for a longer assertion chain of that the book was created by some actor that has the given name.\r\n\r\nThus:\r\n\r\n```\r\n{\r\n  \"type\": \"Book\",\r\n  \"creator\": \"J.R.R. Tolkien\"\r\n}\r\n```\r\n\r\nCould be expanded to:\r\n\r\n```\r\n{\r\n  \"type\": \"Book\",\r\n  \"created_by\": {\r\n    \"type\": \"Actor\",\r\n    \"label\": \"J.R.R. Tolkien\"\r\n  }\r\n}\r\n```\r\n\r\nThis could be added to the context for creator:\r\n\r\n```\r\n\"creator\": {\r\n  \"@type\": \"@nest\", \r\n  \"@values\": {\"@type\": \"Actor\", \"@property\": \"label\", \"@id\": \"created_by\"}\r\n}\r\n```\r\n\r\nOr similar." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/63> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/63"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/identifier> "63"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/name> "Publication snapshot for FPWD" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> <http://schema.org/name> "spec:w3c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> <http://schema.org/color> "ede989" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:w3c> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/startDate> "2018-08-29T22:56:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/endDate> "2018-09-07T16:06:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/63> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/63"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/63> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/63> <http://schema.org/description> "Set for Sept 3rd release.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/63.html\" title=\"Last updated on Sep 3, 2018, 3:45 PM GMT (10307b4)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/63/5e66e5b...10307b4.html\" title=\"Last updated on Sep 3, 2018, 3:45 PM GMT (10307b4)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/62> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/62"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/identifier> "62"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/name> " Update change describing the use of `@none` in maps." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/startDate> "2018-08-27T23:58:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/endDate> "2018-08-29T20:32:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/62> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/62"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/62> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/62> <http://schema.org/description> "Also generally improve terminology to be more consistent throughout the document.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/62.html\" title=\"Last updated on Aug 27, 2018, 11:59 PM GMT (772d070)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/62/1d528bb...772d070.html\" title=\"Last updated on Aug 27, 2018, 11:59 PM GMT (772d070)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/61> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/61"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/identifier> "61"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/name> "Typo: Missing \"or\" ?" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/startDate> "2018-08-27T16:34:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/endDate> "2018-08-28T15:14:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://schema.org/description> "I think there should be an \"or\" between \"IRI\" and \"null\" at the end of section 1.3, immediately above:\r\nhttps://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/58.html#typographical-conventions\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/60> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/60"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/identifier> "60"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/name> "Typo: @null is not a keyword" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/startDate> "2018-08-27T16:24:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/endDate> "2018-08-28T15:15:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://schema.org/description> "\r\n> This has been updated to allow (and ignore) @null values.\r\n\r\nShould just be \"null values\".\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/58> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/58"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/identifier> "58"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/name> "Minor editorial updates" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/startDate> "2018-08-27T01:04:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/endDate> "2018-08-27T16:43:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/58> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/58"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/58> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/58> <http://schema.org/description> "Fixes #12.\nFixes #44.\nRemoves Microformats section and Fixes #54.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/58.html\" title=\"Last updated on Aug 27, 2018, 1:04 AM GMT (6109d3d)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/58/362549c...6109d3d.html\" title=\"Last updated on Aug 27, 2018, 1:04 AM GMT (6109d3d)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/57> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/identifier> "57"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/name> "Make processing of embedded HTML normative" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> <http://schema.org/name> "test:needs tests" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> <http://schema.org/color> "e587ca" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/startDate> "2018-08-23T20:35:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/endDate> "2018-11-16T19:03:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://schema.org/description> "Currently, [Embedding JSON-LD in HTML Documents](https://w3c.github.io/json-ld-syntax/#embedding-json-ld-in-html-documents) is entirely informative. We've discussed making this normative, requiring JSON-LD processors to be able to identify and extract JSON-LD from a script tag with type `application/ld+json` within the HTML document.\r\n\r\n* Given multiple such script tags, which one is used?\r\n* Should we define a parameterized content-type to allow the version to be specified (e.g., `application/ld+json;version=1.1`)\r\n* Does the current document base affect the base for JSON-LD processing?\r\n  * location of  HTML document\r\n  * `html>head>base@href`\r\n * `xml:base` of closest ancestor element\r\n* Does the document language affect the default language for JSON-LD processing?\r\n  * HTTP header- `Content-Language`\r\n  * `@lang`, `@xml:lang`\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/56> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/identifier> "56"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/name> "Expanding @vocab properties consistently" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#assignee> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/startDate> "2018-08-22T22:56:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/endDate> "2018-12-08T05:52:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://schema.org/description> "(I wasn't sure if this was a syntax or an API issue. If i got the wrong one, please let me know and i will refile)\r\n\r\nConsider the following:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@base\": \"http://example1.com/\",\r\n    \"ex1\": \"http://example1.com/\",\r\n    \"ex2\": \"http://example2.com/\",\r\n    \"id\": \"@id\",\r\n    \"fred\": {\r\n      \"@id\": \"ex1:fred\",\r\n      \"@type\": \"@vocab\"\r\n    },\r\n    \"barney\": {\r\n      \"@id\": \"ex2:barney\"\r\n    },\r\n    \"mnemonic\": \"rdf:value\"\r\n  },\r\n  \"fred\": [\r\n    {\r\n      \"id\": \"barney\",\r\n      \"mnemonic\": \"the sidekick\"\r\n    },\r\n    \"barney\"\r\n  ]\r\n}\r\n```\r\n\r\nThe counterintuitive result of expansion is:\r\n\r\n```json\r\n[\r\n  {\r\n    \"http://example1.com/fred\": [\r\n      {\r\n        \"@id\": \"http://example1.com/barney\",\r\n        \"rdf:value\": [\r\n          {\r\n            \"@value\": \"the sidekick\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"@id\": \"http://example2.com/barney\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nIn other words, one `barney` registers as a result of the top-level `@vocab` declaration, while the other registers as a result of the specific `barney` alias against the `fred` property of type `@vocab`. \r\n\r\nI understand _why_ this happens, the spec has different algorithms for strings on the right of a property vs objects, but it's a bit odd. To the lay reader (i.e. me), it seems like an inconsistent application. If the IRI expansion algorithm were able to take into account explicit aliases for `@vocab` properties, it could be made consistent, and a similar application to compaction would deliver a symmetric behavior.\r\n\r\nThe context, in terms of practical application, is that we maintain an overarching RDF model to govern our data and i would like the folks implementing our APIs to know as little about the RDF-ness of it as possible, which is where JSON-LD comes in. By using `@vocab` i was able to get implementers to omit a namespace qualifier on plain taxonomy values (the second `barney` in the original example), but as soon as they want to include anything richer they have to qualify it. Using the same context, to guarantee semantic consistency the example would have to be written as:  \r\n\r\n```json\r\n{\r\n    \"fred\": [\r\n      \"barney\",\r\n      {\r\n         \"id\": \"ex2:barney\",\r\n         \"mnemonic\": \"the sidekick\"\r\n      }\r\n    ]\r\n}\r\n```\r\ni.e. we have to qualify the second `barney` with `ex2` for it to work consistently, which means exposing API developers to the RDF-ness of our model, or breaking the connection." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/55> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/55"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/identifier> "55"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/name> "Examples need fragment identifiers" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/startDate> "2018-08-22T14:16:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/endDate> "2018-08-27T16:53:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://schema.org/description> "I'm trying to link someone to \"Example 48: Language map expressing a property in three languages\", but the closest I can get is https://w3c.github.io/json-ld-syntax/#h-note-14 (the note above it).\r\n\r\nGiven how frequently examples are cited/linked/referenced, it would be super to be able to link to them directly (and ideally in a non-numeric way).\r\n\r\n...also browser support for Web Annotations would be nice..." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/54> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/54"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/identifier> "54"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/name> "Remove relationship to Microformats section" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/startDate> "2018-08-22T01:21:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/endDate> "2018-08-27T16:43:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/54> <http://schema.org/description> "Microformats were marginally relevant when 1.0 was published, and are not now. " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/53> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/53"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/identifier> "53"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/name> "Update spec references." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/startDate> "2018-08-21T22:49:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/endDate> "2018-08-22T22:47:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/53> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/53"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/53> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://schema.org/description> "Fixes #50.\n\nSee also w3c/json-ld-api#24 and w3c/json-ld-framing#4.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/53.html\" title=\"Last updated on Aug 22, 2018, 10:42 PM GMT (11c9583)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/53/534bb48...11c9583.html\" title=\"Last updated on Aug 22, 2018, 10:42 PM GMT (11c9583)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/52> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/52"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/identifier> "52"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/name> "Update linked-data-graph …" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/startDate> "2018-08-21T19:30:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/endDate> "2018-08-22T22:37:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/52> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/52"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/52> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://schema.org/description> "using figure and svg, with longdesc referencing an external description of the diagram. The diagram is now maintained using Google Drawings.\n\nFixes #51\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/52.html\" title=\"Last updated on Aug 21, 2018, 7:30 PM GMT (360d110)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/52/cc6bad5...360d110.html\" title=\"Last updated on Aug 21, 2018, 7:30 PM GMT (360d110)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/51> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/identifier> "51"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/name> "Images should be accessible" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/startDate> "2018-08-21T15:31:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/endDate> "2018-08-22T22:37:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://schema.org/description> "The spec contains a single image describing the data model ([An illustration of the data model](https://w3c.github.io/json-ld-syntax/linked-data-graph.png)), which is not accessible. Moreover, the embedded image is not scalable, and there's no description of the toolchain to recreate the PNG.\r\n\r\n![image](https://user-images.githubusercontent.com/46296/44411506-817db780-a51b-11e8-9b99-debddfcf511e.png)\r\n\r\nIn CSVW, we used Keynote as the source of the images and a process (@iherman can comment) to turn images from Keynote into SVG and PNG. Images should be contained within a figure, with caption and reference to an [external description via `@longdesc`](http://w3c.github.io/csvw/metadata/properties.html). For example, from [CSVW Metadata](https://github.com/w3c/csvw/blob/gh-pages/metadata/index.html#L279-L281):\r\n\r\n      <figure id=\"fig-properties\" style=\"text-align:center\">\r\n        <img src=\"properties.svg\" style=\"width: 75%\" alt=\"Metadata Properties\" longdesc=\"properties.html#imageDescription\">\r\n        <figcaption>Diagram showing the properties of different metadata descriptors (see the diagram in <a href=\"properties.svg\">SVG</a> or <a href=\"properties.png\">PNG</a> formats)</figcaption>\r\n      </figure>\r\n\r\nWe should also consider other images that should be in the spec, and perhaps a simple mechanism for creating graphical representations of linked data graphs/datasets from examples." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/50> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/50"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/identifier> "50"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/name> "Update spec references" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/startDate> "2018-08-20T18:32:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/endDate> "2018-08-22T22:47:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/50> <http://schema.org/description> "## Multiple specs\r\n* RFC-CONCEPTS => RFC11-CONCEPTS\r\n* RFC2119 => RFC8174\r\n* RFC5988 => RFC8288\r\n* RFC6839 => RFC7303\r\n* RFC7159 => RFC8259\r\n\r\n## In API\r\nECMASCRIPT-6.0 => ECMASCRIPT – version is now 9.0, not in spec ref, but ECMASCRIPT links to it.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/49> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/49"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/identifier> "49"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/name> "Improve example checking and generate example files" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/startDate> "2018-08-19T00:42:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/endDate> "2018-08-21T00:55:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/49> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/49"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/49> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://schema.org/description> "This update makes use of improved features in extract-examples.rb to process all files, rather than simply doing syntactic validation, and to compare with expected results. Expected results have `@data-result-for` referencing the title of the source example. Expected results can also be in `script` elements, which don't show up in the rendered documentation.\n\nThe extract-examples script was also updated to extract JSON, as well as generate Turtle/TriG and YAML for most examples; these are updated using `rake examples`.\n\nEventually, multiple formats will be associated with each example, so the identification mechanism may change.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/49.html\" title=\"Last updated on Aug 19, 2018, 12:42 AM GMT (5771ef5)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/49/8530193...5771ef5.html\" title=\"Last updated on Aug 19, 2018, 12:42 AM GMT (5771ef5)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/48> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/48"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/identifier> "48"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/name> "JSON-LD Playground links from examples" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:help%20wanted> <http://schema.org/name> "spec:help wanted" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:help%20wanted> <http://schema.org/color> "bd1dd6" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:help%20wanted> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:help%20wanted> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/startDate> "2018-08-16T14:44:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/endDate> "2018-09-27T21:30:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://schema.org/description> "It would be super nice to have JSON-LD Playground links available alongside any example which is itself complete JSON-LD (and doesn't contain elided sections/contents).\r\n\r\nIf this is something of interest to folks, I'm happy to add them \"by hand\" or look at automating the addition of the links (though I think that the elided scenarios might break that approach).\r\n\r\nAnyhow. I think it'd be useful. 😄 " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/47> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/identifier> "47"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/name> "Reorganization syntax document" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/startDate> "2018-08-15T18:37:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/endDate> "2018-08-17T21:59:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/47> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/47> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://schema.org/description> "This is a stab at updating the syntax document to create feature-related sections. I also attempt to clarify some terms.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/47.html\" title=\"Last updated on Aug 16, 2018, 6:25 PM GMT (d3ac68f)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/47/e0ea3d2...d3ac68f.html\" title=\"Last updated on Aug 16, 2018, 6:25 PM GMT (d3ac68f)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/45> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/45"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/identifier> "45"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/name> "Clarify example using @none." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/startDate> "2018-08-12T18:40:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/endDate> "2018-08-12T21:05:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/45> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/45"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/45> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/45> <http://schema.org/description> "Fixes #28.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/45.html\" title=\"Last updated on Aug 12, 2018, 6:40 PM GMT (95652b1)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/45/40d18d5...95652b1.html\" title=\"Last updated on Aug 12, 2018, 6:40 PM GMT (95652b1)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/44> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/44"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/identifier> "44"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/name> "Should we consider a simple initial context like in RDFa?" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/startDate> "2018-08-10T05:19:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/endDate> "2018-08-27T15:55:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://schema.org/description> "(Spin-off from #42)\r\n\r\nThere may be a number of prefixes that we could 'predefine', i.e., having them part, formally, of an initial `@context`. This would simplify to encourage users to use terms from, say, DCMI, in a consistent manner for things like comments or descriptions, without requiring them to extend the context (which, for many authors, may be a challenge).\r\n\r\nRDFa has a [similar notion](https://www.w3.org/2011/rdfa-context/rdfa-1.1) but I actually do _not_ think we should replicate that; we could make it much smaller and less dynamic. Taking into account the JSON-LD user community, I would probably restrict it to rdf, rdfs, xsd, cc, dc/dcterms, and schema. Extending this list could be restricted to future revisions of JSON-LD 1.1." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/43> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/identifier> "43"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/name> "Content Negotiation for JSON-LD Context Documentation" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/startDate> "2018-08-07T21:04:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/endDate> "2018-08-13T20:08:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://schema.org/description> "This is one of the four documentation proposals discussed on August 3rd to answer questions/concerns in #32.\r\n\r\nThis approach is described in [Best Practice Recipes for Publishing RDF Namespace Vocabularies](https://www.w3.org/TR/swbp-vocab-pub/#negotiation). It is a popular approach currently in use by [Schema.org](https://schema.org/) as well as the W3C's [ActivityStream's 2.0 Vocabulary](https://www.w3.org/ns/activitystreams).\r\n\r\nThe Schema.org approach matches [Recipe 5. Extended configuration for a 'slash namespace', using multiple HTML documents](https://www.w3.org/TR/swbp-vocab-pub/#recipe5) described in the Best Practices document mentioned above. Browser requests to https://schema.org/ return the \"promo\" site for Schema.org which contains documentation for each term as well as community and process related content. Each individual term page also contains RDFa-encoded RDFS comments, labels, etc. Each of these URLs (the main site's URL and each term page's URL) may be content negotiated for a wide range of other RDF formats. See https://schema.org/docs/developers.html for more information.\r\n\r\nThe ActivityStreams 2.0 approach is a variation on [Recipe 3. Extended configuration for a 'hash namespace'](https://www.w3.org/TR/swbp-vocab-pub/#recipe3) where the returned single-page HTML file contains links with `id` attributes which match the term's name within the \"hash namespace\". So https://www.w3.org/ns/activitystreams#Activity is both the JSON-LD term's expanded IRI and also results in a link to the human-readable Activity class's documentation.\r\n\r\nThe basics of Content Negotiation are below--but better, more complete examples are contained in the Best Practices documentation above.\r\n\r\n#### Requesting Documentation\r\n```http\r\nGET /\r\nHost: schema.org\r\nAccept: text/html\r\n```\r\n(or `Accept: */*` in this case because HTML documentation is the default representation)\r\n\r\n```http\r\n200 OK\r\nContent-Type: text/html; charset=utf-8\r\n\r\n<!DOCTYPE html>...\r\n```\r\n\r\n#### Requesting the Context File\r\n\r\n```http\r\nGET /\r\nHost: schema.org\r\nAccept: application/ld+json\r\n```\r\n\r\n```http\r\n302 Found\r\nLocation: https://schema.org/docs/jsonldcontext.json\r\n```\r\n\r\n```http\r\n200 OK\r\nContent-Type: application/ld+json; charset=utf-8\r\n\r\n{\"@context\": \"...\"}\r\n```\r\n\r\n### Setup\r\n\r\nThis setup can be done via Apache ships with [mod_negotiation](https://httpd.apache.org/docs/current/mod/mod_negotiation.html) enabled--see their [Content Negotiation](https://httpd.apache.org/docs/current/content-negotiation.html) pages for more information.\r\n\r\nConfiguration is also possible for [Nginx](https://www.igvita.com/2013/05/01/deploying-webp-via-accept-content-negotiation/).\r\n\r\nAdditionally, most modern server-building frameworks for JS, Python, etc, include simple Content Negotiation enabling functions such as Express.js' [`res.format()`](https://expressjs.com/en/4x/api.html#res.format)." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/identifier> "42"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/name> "Propose `@documentation` for providing URL of resource documenting context or frame" .
<https://api.github.com/users/tcole3> <http://schema.org/accountId> "tcole3" .
<https://api.github.com/users/tcole3> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/7622978?v=4" .
<https://api.github.com/users/tcole3> <http://schema.org/url> "https://github.com/tcole3"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tcole3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/creator> <https://api.github.com/users/tcole3> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/startDate> "2018-08-07T16:31:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/endDate> "2018-08-13T20:06:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://schema.org/description> "The discussion surrounding Issue #32 (Is there a way to define additional metadata in JSON-LD `@context`?) identified possible use cases for wanting to provide comments or documentation (e.g., metadata) about JSON-LD context and framing documents. The [JSON-LD 1.0 Recommendation](https://www.w3.org/TR/json-ld/#the-context) (and the [JSON-LD 1.1 Community Report](https://json-ld.org/spec/latest/json-ld/#the-context)) anticipate the value of `@context` documentation: \r\n\r\n> External JSON-LD context documents may contain extra information located outside of the `@context` key, such as documentation about the terms declared in the document. Information contained outside of the `@context` value is ignored when the document is used as an external JSON-LD context document. \r\n\r\nHowever, this method does not support documentation of context included inline in a JSON-LD instance, does not facilitate the reuse of pre-existing vocabulary and ontology documentation already available online, and does not provide an option for human-readable documentation of terms declared in the context document (or documentation of the associated ontology as a whole), nor for machine readable documentation in a format other than JSON-LD. Additionally, this mechanism is of no help for those wanting to describe the logic and flow of a framing document.\r\n\r\nAdding `@documentation` as a key (with range URL) available only in context and framing documents would allow including documentation by reference. Taking schema.org context document as an example, any of the following might be reasonable values for `@documentation`:\r\n\r\n- https://schema.org/docs/documents.html (incomplete, human-readable list of documentation)\r\n- https://schema.org/docs/full.html (human-readable hierarchy view with links to RDFa term descriptions)\r\n- https://schema.org/docs/schema_org_rdfa.html (RDFa documentation of schema.org vocabulary)\r\n- https://schema.org/version/3.4/schema.rdf (RDF/XML documentation of schema.org vocabulary)\r\n- https://schema.org/docs/schemaorg.owl (OWL documentation of schema.org vocabulary)\r\n\r\nThe latter 3 illustrations listed are all machine-actionable and provide (for example) domain and range information for each schema.org property, as well as sub-class relationships for schema.org Classes. \r\n\r\nGiven the variety of ways that semantics are documented today, if `@documentation` were adopted for 1.1, my suggestion would be to avoid over-specifying what precisely the URL value links to - in other words I would define this new key such that any of the above 5 illustrations would be allowable values for `@documentation`. We probably also would need to agree (or not) that the value of `@documentation` is unary (no arrays of URLs) and would need to identify any other constraints on its value.  \r\n\r\nNote, credit to @azaroth42 for suggesting `@documentation` in the course of issue #32 discussion, and please note that this issue is being raised concurrently with 2 or 3 other approaches, as an outgrowth of the decision to close issue #32.  " .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/41> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/identifier> "41"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/name> "Describe lists containing lists, as motivated by GeoJSON." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/startDate> "2018-08-05T00:45:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/endDate> "2018-08-11T21:49:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/41> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/41> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://schema.org/description> "Fixes #36.\n\nThis is implemented in w3c/json-ld-api#16.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/41.html\" title=\"Last updated on Aug 11, 2018, 9:48 PM GMT (b754d86)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/41/751cd60...b754d86.html\" title=\"Last updated on Aug 11, 2018, 9:48 PM GMT (b754d86)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/40> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/40"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/identifier> "40"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/name> "Inline metadata escaping" .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/startDate> "2018-08-03T19:43:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/endDate> "2018-08-13T20:04:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://schema.org/description> "This is the first of  four options that were the result of the meeting on Aug 3, 2018.\r\n\r\n**Requirement**: A way to annotate JSON-LD Context with information about when and how it was generated, its intended purpose, why little bits of cleverness are there and what they are intended to do, who to complain to, etc.\r\n\r\n**Additional notes and observations**:\r\n1) People need to do things of this sort.  As an example, see the `\"comments\"` element in https://github.com/biolink/biolink-model/blob/master/context.jsonld and note its rather unwieldy formatting formatting.  We cannot prohibit it -- we can only decide whether the solutions people arrive with are compatible with the basic specification and each other.\r\n2) This is NOT intended to be a mechanism to add additional processing instructions.  That is what the JSON-LD specification is for.\r\n3) This is NOT intended to be yet another comment mechanism for JSON itself.  This strictly applies to the JSON-LD context section and is intended to refer solely to its content.\r\n\r\n**Proposal**: Specify an escape sequence  (suggestion: '@@') that indicates that everything from there to the end of the line is not processed.  Not only is this not processed, but formally state that JSON-LD compliant processing tools are neither required nor expected to preserve the escape sequence and whatever follows it.  The annotation property exists solely to attach metadata to a particular instance of a particular bit of JSON-LD.  JSON-LD users are warned that this information may (and will) disappear when undergoing any processing or transformation.\r\n\r\nAlso add a warning that the \"@@\" token has no special significance in JSON.  A side effect of this bit is that, were one to read the example below into a JSON parser, one would loose everything except the last entry (\"description: ...\") which would sort of guarantee that it doesn't get out of hand.\r\n\r\nExample use:\r\n```json\r\n{\r\n\"@context\": {\r\n    \"@@\": \"Auto generated from biolink-model.yaml by contextgen.py version: 0.0.2\",\r\n    \"@@\": \"Generation date: 2018-07-10 09:37\",\r\n    \"@@\": \"Schema: biolink model\",\r\n    \"@@\": \"id: https://biolink.github.io/biolink-model/ontology/biolink.ttl\",\r\n    \"@@\": \"description: Entity and association taxonomy and datamodel for life-sciences data\",\r\n    \"@@\": \"license: https://creativecommons.org/publicdomain/zero/1.0/\",\r\n    \"biolink\": \"http://bioentity.io/vocab/\",\r\n         ...\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/39> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/39"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/identifier> "39"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/name> "Inclusion of @version:1.1 in documentation examples is inconsistent" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/startDate> "2018-08-01T22:33:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/endDate> "2018-08-21T00:56:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://schema.org/description> "From json-ld/json-ld.org#652 as reported by @azaroth42 \r\n\r\nSome examples do not have `\"@context\": 1.1` that still require (I think) 1.1 processing.\r\n\r\nExample 74 (Indexing languaged-tagged strings in JSON-LD with @set representation) for example uses the 1.1 feature of @container: [@language, @set] but the context does not have the @version flag." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/38> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/38"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/identifier> "38"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/name> "Improve language around coercion of datatypes" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/startDate> "2018-07-30T20:33:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/endDate> "2018-10-01T15:17:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/38> <http://schema.org/description> "From discussion of #31, minuted [here](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-1), the agreement was to revise the wording around type coercion to make it clearer that it applies only to data types, and not to the creation or manipulation of `rdf:type` triples in the data.\r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/37> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://schema.org/identifier> "37"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://schema.org/name> "Consider obsoleting use of blank nodes for properties and \"generalized RDF\"" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/needs%20discussion> <http://schema.org/name> "needs discussion" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/needs%20discussion> <http://schema.org/color> "c5def5" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/needs%20discussion> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/needs%20discussion> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://schema.org/startDate> "2018-07-25T23:43:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://schema.org/description> "This is one of the major things that makes JSON-LD out of step with the RDF data model, and it's not clear if the feature is used or valuable. IIRC, the original issue was making it easy to support mapping ad-hoc JSON structures without creating IRIs, but the use of `@vocab`, and document-relative IRIs for properties would seem to obviate the need for this.\r\n\r\nThis would likely prohibit the direct use of blank node identifiers in the property position, as well as the mapping of terms to blank node identifiers.\r\n\r\nDownsides: another area of potential incompatibility with JSON-LD 1.0. A backwards-compatible solution would be to preserve the feature, but mark it archaic. This might cause warnings to be generated if encountered with a processor running in 1.1 mode." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/36> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/36"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/identifier> "36"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/name> "Support recursive @list usage" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/startDate> "2018-07-25T23:33:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/endDate> "2018-08-11T21:49:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://schema.org/description> "From [Should we support lists of lists?](https://github.com/json-ld/json-ld.org/issues/52)\r\n\r\nWe did not support recursive RDF lists in 1.0 due to perceived complexity and lack of a use case. Since then there are numerous use cases that can make use of recursive lists in JSON-LD, and it goes further towards full idiomatic support of RDF 1.1 in JSON-LD.\r\n\r\nChanges to the syntax document are minimal, there are substantial API implications." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/35> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/35"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/identifier> "35"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/name> "Use IRIs instead of semantically-named blank node identifiers" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/startDate> "2018-07-10T22:02:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/endDate> "2018-08-05T19:50:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/35> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/35"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/35> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/35> <http://schema.org/description> "in named graph examples.\n\nFixes #27.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/35.html\" title=\"Last updated on Aug 5, 2018, 7:42 PM GMT (3470dfe)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/35/751cd60...3470dfe.html\" title=\"Last updated on Aug 5, 2018, 7:42 PM GMT (3470dfe)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/34> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/34"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/identifier> "34"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/name> "@type as @container:@set?" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> <http://schema.org/name> "test:needs tests" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> <http://schema.org/color> "e587ca" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/test:needs%20tests> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/startDate> "2018-07-08T21:36:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/endDate> "2018-10-03T17:30:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://schema.org/description> "The purpose of the `@container:@set` functionality (AFAIU) is to ensure that the output is consistent in shape. Thus if there can ever be multiple values, the structure is always an array.\r\n\r\nThere are two situations in which this functionality could be desirable but is currently not possible:\r\n\r\n1.  `@type` As it's a keyword, we can only alias it (e.g. as `type`) but not define it to have `@container:@set` functionality. Meaning that there's a gotcha waiting to happen for ontologies that require or use multiple classes for a single resource instance. See [playground](https://json-ld.org/playground/#startTab=tab-compacted&json-ld=%7B%22%40context%22%3A%7B%22cls%22%3A%7B%22%40id%22%3A%22http%3A%2F%2Fexample.org%2Fclass%22%7D%2C%22type%22%3A%7B%22%40id%22%3A%22%40type%22%2C%22%40container%22%3A%22%40set%22%7D%7D%2C%22%40id%22%3A%22foo%22%2C%22type%22%3A%22cls%22%7D&context=%7B%22%40context%22%3A%7B%22cls%22%3A%7B%22%40id%22%3A%22http%3A%2F%2Fexample.org%2Fclass%22%7D%2C%22type%22%3A%7B%22%40id%22%3A%22%40type%22%2C%22%40container%22%3A%22%40set%22%7D%7D%7D)\r\n2.  `@context` Less useful, but `@context` will also compact to a single string/object when there might be multiple contexts.  See [playground](https://json-ld.org/playground/#startTab=tab-compacted&copyContext=true&json-ld=%7B%22%40context%22%3A%5B%7B%22cls%22%3A%7B%22%40id%22%3A%22http%3A%2F%2Fexample.org%2Fclass%22%7D%2C%22type%22%3A%7B%22%40id%22%3A%22%40type%22%2C%22%40container%22%3A%22%40set%22%7D%7D%5D%2C%22%40id%22%3A%22foo%22%2C%22type%22%3A%22cls%22%7D)\r\n\r\n`@context` modifying itself seems particularly strange, but the inconsistency for `@type` seems solvable if the restrictions in its definition were loosened?\r\n\r\nOriginal issue [@type as @container:@set? #512](https://github.com/json-ld/json-ld.org/issues/512).\r\n\r\n(Edit: Note that the playground links demonstrate that these do not work as one might expect, due to the keyword definitions of @type and @context)" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/33> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://schema.org/identifier> "33"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://schema.org/name> "Feature Detection in JSON-LD Processors" .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://schema.org/startDate> "2018-07-06T14:15:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://schema.org/description> "If you look at the latest syntax specification, I count roughly 32 features slated to be included in JSON-LD 1.1:\r\n\r\nhttps://json-ld.org/spec/latest/json-ld/#advanced-concepts\r\n\r\nJSON-LD was always intended to be simple to understand and use. In fact, the appearance of simplicity (even though the processors are not simple) was a driving design goal. It's why the specification is written the way it is... we wanted everyday developers to be able to read it as the primary documentation. I think we started losing that a bit toward the end, but we have received multiple compliments from Web developers that knew nothing about RDF (and still don't know anything about RDF) on how simple it was to understand and use JSON-LD by just reading the specification.\r\n\r\nI think we're going to lose that if we keep adding features. I don't think the argument is to *not* add new features, but rather to do so in a way that keeps the core JSON-LD 1.1 spec readable by regular Web developers.\r\n\r\nI also think that there is a way to enable experimental features to be specified in CGs and then later pulled into \"official W3C specifications\" without getting into a brawl over whether the feature is useful or not prematurely.\r\n\r\nSo, here's a proposal:\r\n\r\n1. Give each JSON-LD feature a name. For example: aliasing, reverseProperties, typeCoercion, etc.\r\n2. Each JSON-LD version will officially support a set of these features. For example, JSON-LD 1.0 supports roughly ~20, JSON-LD 1.1 supports roughly ~30, and so on.\r\n3. Move some of these less-used features (based on real world data/usage) into a \"Advanced JSON-LD Features\" specification to keep the base specification simpler and more easily readable.\r\n4. Extend the `@version` keyword to take an array, where you can specify experimental extensions. For example: `\"@version\": [1.1, \"amazingExtensionFoo\", \"nicheExtensionBar\"] - processors throw if they don't understand every extension listed.\r\n\r\nBenefits of this proposal:\r\n* We simplify the prose and length of the JSON-LD Core Syntax specification.\r\n* We enable people to suggest and spec out new features without having to go through the JSON-LD WG gauntlet, which will inevitably kill innovation before it has a chance in the wild.\r\n\r\nDrawbacks of this proposal:\r\n* Not thoroughly thought through idea - may not be possible at this stage... wish we had built this into JSON-LD 1.0.\r\n* Added technical complexity for implementers.\r\n* Potential explosion in extensions resulting in reduced interop." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/32> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/identifier> "32"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/name> "Is there a way to define additional metadata in JSON-LD @context?" .
<https://api.github.com/users/jechterhoff> <http://schema.org/accountId> "jechterhoff" .
<https://api.github.com/users/jechterhoff> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/4831647?v=4" .
<https://api.github.com/users/jechterhoff> <http://schema.org/url> "https://github.com/jechterhoff"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/jechterhoff> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/creator> <https://api.github.com/users/jechterhoff> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> <http://schema.org/name> "spec:duplicate" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> <http://schema.org/color> "e0082c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/startDate> "2018-07-05T13:54:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/endDate> "2018-08-04T17:20:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://schema.org/description> "Hello,\r\nI'm currently analysing JSON-LD 1.1 (reviewed the [Final Community Group Report](https://www.w3.org/2018/jsonld-cg-reports/json-ld)) with the goal of semantically enabling JSON data. Is there a way to define additional metadata in a JSON-LD context?\r\n\r\n(I hope it is ok to ask this question here. If I should ask somewhere else, for example the mailing list, let me know, please.)\r\n\r\nLet me explain what I mean with an example:\r\n```json\r\n{\r\n \"@context\": {\r\n  \"@base\": \"http://example.org/baumregister/\",\r\n  \"@version\": 1.1,\r\n  \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\r\n  \"geosparql\": \"http://www.opengis.net/ont/geosparql#\",\r\n  \"ex\": \"http://example.org/ontology/flora/\",\r\n  \"ort\": \"geosparql:hasGeometry\",\r\n  \"wkt\": {\r\n   \"@id\": \"geosparql:asWKT\",\r\n   \"@type\": \"geosparql:wktLiteral\"\r\n  },\r\n  \"eid\": \"@id\",\r\n  \"art\": \"@type\",\r\n  \"Eiche\": \"ex:oak\",\r\n  \"Walnuss\": \"ex:walnut\",\r\n  \"hoehe\": {   \r\n   \"@id\": \"ex:height\",\r\n   \"@type\": \"xsd:double\",\r\n   \"@derivedBy\": \"A specific description ...\",\r\n   \"uom\": \"m\"\r\n  },\r\n  \"alter\": {\r\n   \"@id\": \"ex:age\",\r\n   \"@type\": \"xsd:integer\"\r\n  }\r\n },\r\n \"art\": \"Eiche\",\r\n \"hoehe\": \"16\",\r\n \"eid\": \"08218adf-7947-4f28-bcaf-e069ef43e012\",\r\n \"alter\": 242,\r\n \"ort\": {\"wkt\": \"POINT(8.191035,51.899666)\"}\r\n}\r\n```\r\n\r\nIn this example, the key \"hoehe\" expands to the IRI http://example.org/ontology/flora/height. In addition, the value type is defined as http://www.w3.org/2001/XMLSchema#double. \r\n\r\nIn the example, I've added two keys as metadata to the definition of term \"hoehe\": \r\n\r\n* \"@derivedBy\" - The value is supposed to contain a textual description. I used the leading \"@\" on purpose for testing. \r\n* \"uom\" - An indication of the unit of measure for \"hoehe\".\r\n\r\nWhen I test this on the [JSON-LD dev playground](https://json-ld.org/playground-dev/) (a great tool, by the way - so helpful!), I get the following syntax errors:\r\n\r\n* For \"@derivedBy\": Invalid JSON-LD syntax; a term definition must not contain @derivedBy\r\n* For \"uom\": Invalid JSON-LD syntax; a term definition must not contain uom\r\n\r\nWhen the two keys are removed, the example \"works\".\r\nIn the JSON-LD 1.1 specification I find the following: \r\n\r\n> An expanded term definition MUST be a JSON object composed of zero or more keys from @id, @reverse, @type, @language, @context, @prefix, or @container. An expanded term definition SHOULD NOT contain any other keys.\r\n\r\nApparently I should not use the two additional keys, but they do not appear to be explicitly forbidden either. Now I am wondering if the dev playground is too strict or not. Can someone please enlighten me as to where in a JSON-LD context I can add custom keys - if at all - and what restrictions, if any, I need to be aware of? Any additional insight would be highly appreciated.\r\n\r\nI did come across the following two issues, which may be related to my question:\r\n\r\n* [Warn or error if non-keyword strings having \"@\" are encountered](https://github.com/w3c/json-ld-syntax/issues/16)\r\n* [Reserved keywords](https://github.com/json-ld/json-ld.org/issues/88)" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/31> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/identifier> "31"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/name> "type coercion: coerce node types" .
<https://api.github.com/users/lukasheinrich> <http://schema.org/accountId> "lukasheinrich" .
<https://api.github.com/users/lukasheinrich> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2318083?v=4" .
<https://api.github.com/users/lukasheinrich> <http://schema.org/url> "https://github.com/lukasheinrich"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lukasheinrich> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/creator> <https://api.github.com/users/lukasheinrich> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/startDate> "2018-07-03T11:13:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/endDate> "2018-07-30T20:27:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://schema.org/description> "I think it would be interesting to add type coercion also to node objects in JSON-LD. Consider a document like\r\n\r\n```\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"ex\": \"http://example.org/\",\r\n        \"things\": {\"@id\":\"ex:thing\"}\r\n    },\r\n    \"things\": [\r\n      {\"@type\": \"ex:typeofthing\",\"ex:attribute\":\"value1\"},\r\n      {\"@type\": \"ex:typeofthing\",\"ex:attribute\":\"value2\"},\r\n      {\"@type\": \"ex:typeofthing\",\"ex:attribute\":\"value3\"}\r\n    ]\r\n}\r\n```\r\n\r\nit would be nice it I could specify in the context what the \"@type\" of each node referred to by the predicate \"ex:thing\" is in order to reduce repetitiveness. Similar how I can do it for terms pointing to literals.\r\n\r\n```\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"ex\": \"http://example.org/\",\r\n        \"things\": {\"@id\":\"ex:thing\", \"@type\": \"ex:typeofthing\"}\r\n    },\r\n    \"things\": [\r\n      {\"ex:attribute\":\"value1\"},\r\n      {\"ex:attribute\":\"value2\"},\r\n      {\"ex:attribute\":\"value3\"}\r\n    ]\r\n}\r\n```\r\n\r\nRight now, `@type` seems to just be ignored when the object in the triple is not a literal -- so perhaps it is straight forward to add?\r\n\r\n```\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"ex\": \"http://example.org/\",\r\n        \"ex:term\": {\"@type\":\"ex:literaltype\"}\r\n    },\r\n	\"ex:term\": \"literalvalue\"\r\n}\r\n```\r\nexpands to \r\n\r\n```\r\n[\r\n  {\r\n    \"http://example.org/term\": [\r\n      {\r\n        \"@type\": \"http://example.org/literaltype\",\r\n        \"@value\": \"literalvalue\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nwhile \r\n```\r\n{\r\n    \"@context\": {\r\n        \"@version\": 1.1,\r\n        \"ex\": \"http://example.org/\",\r\n        \"ex:term\": {\"@type\":\"ex:nodetype\"}\r\n    },\r\n    \"ex:term\": {\"@id\":\"ex:anode\"}\r\n}\r\n```\r\n\r\nexpands to:\r\n```\r\n[\r\n  {\r\n    \"http://example.org/term\": [\r\n      {\r\n        \"@id\": \"http://example.org/anode\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/30> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://schema.org/identifier> "30"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://schema.org/name> "Rethinking datasets and graphs?" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://schema.org/startDate> "2018-07-02T15:06:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://schema.org/description> "I decided to start with some controversy:-)\r\n\r\nIn short, I have always been confused by the ways Datasets are treated in JSON-LD, and I propose to re-open that can of worms. I have jotted down my idea in a [separate wiki page](https://github.com/w3c/json-ld-syntax/wiki/Rethinking-datasets-and-graphs%3F)  (it would have been too long for an issue).\r\n\r\nTL;DR: My proposal is to start from scratch, ie, deprecating `@graph` and replacing the functionalities with something cleaner. See the wiki page...\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/29> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/29"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/identifier> "29"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/name> "Illustration of the data model: a more complex graph?" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/startDate> "2018-07-01T10:17:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/endDate> "2018-09-26T19:33:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://schema.org/description> "One of the difficulties in JSON-LD (imho) is that it is difficult to express a more complex graph, namely one that have several \"roots\" (I know this is not the precise term.). Almost all the examples in the document and elsewhere show the examples where there is one top-level object with an ID and things hang from there (not really a tree, but a bit \"tree-like\").\r\n\r\nWe should make it clearer that JSON-LD is capable to do more, in particular in the formal sections, ie, when defining the data model. In practice, Figure 1 should not suggest that the data model is only \"tree-like\". Alternatively, there should be a Figure 2 showing a different case where it is not the case." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/28> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/28"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/identifier> "28"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/name> "Add an id in example 68" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/startDate> "2018-07-01T10:14:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/endDate> "2018-08-12T21:05:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://schema.org/description> "It would be worth adding an id in the last branch of the example. As it is now it gives the impression that the usage of `@none` creates a fundamentally different type of a \"body\"...\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/27> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/27"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/identifier> "27"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/name> "Graph id-s in the examples" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/startDate> "2018-07-01T10:13:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/endDate> "2018-08-05T19:50:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://schema.org/description> "In all examples in section 4.15 on Named Graphs, the id-s of named graphs are blank nodes. This is not at all the way named graphs are used in practice and may be misleading for the user. We should use real URL-s whenever possible.\r\n\r\nAs a misleading example consider 4.15.1, where the blank node ID `_:claim` is used. For a reader who is not fully versed in RDF this _may_ give the impression that the blank node's ID has some semantic meaning, just like URL-s may have. A similar misleading example is the usage of `_:manu` and `_:gregg` in example 79." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/26> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/identifier> "26"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/name> "Explanation of examples" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/startDate> "2018-07-01T10:11:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/endDate> "2018-09-24T16:17:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://schema.org/description> "The various examples are shown in other syntaxes in a somewhat inconsistent manner: most of them use the result of the expansion but some of them use a table figuring, essentially, the triples.\r\n\r\nAlso, the usage of the expansion algorithm to illustrate the example is not really helpful, mainly at first reading. Most of the examples are in sections 3 and 4, whereas the expansion algorithm is defined at the very end of section 4 (in 4.25). Also, the result of the expansion algorithm, while o.k. for machine processing, is not always intuitive: e.g., everything is put into arrays, even in cases when this is fairly unexpected for a JSON reader.\r\n\r\nI would propose two editorial changes in this respect.\r\n\r\n1. Move sections 4.25-4.27 into a separate top level sections. These are important for the handling of JSON-LD files, but not necessary important for the understanding of JSON-LD.\r\n2. For _every_ examples, there should be an equivalent of the example in the expanded form, in a table with the triples, in turtle (as close to the JSON-LD structure as possible) and, possibly, as graphs. Not all of them would appear on the screen at the same time but, rather, the reader could choose what to see with some tabs.  \r\n\r\n(A good example for such an approach is in the [OWL Primer](https://www.w3.org/TR/owl2-primer/), where there is tab at the top that governs what syntax the reader would like to see.)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/25> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://schema.org/identifier> "25"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://schema.org/name> "IRI-s vs. URL-s" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://schema.org/startDate> "2018-07-01T10:08:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://schema.org/description> "Wonder whether we should not adopt URL-s in the terminology, with the remark that the term encompasses IRI-s like done, eg, in the [HTML document reference](https://www.w3.org/TR/html5/references.html#normative). This is where developers have gone, and it may be silly to ignore it and continue using the IRI term...\r\n\r\n(The same comment applies to the other two documents, too, obviously.)" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/24> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/24"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/identifier> "24"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/name> "who's -> whose" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/startDate> "2018-07-01T10:04:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/endDate> "2018-07-02T21:37:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/24> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/24"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/24> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/24> <http://schema.org/description> "@gkellogg I was not sure who you handle the common files, so I preferred to make a separate PR, instead of a direct commit. Tell me what you prefer in future.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/24.html\" title=\"Last updated on Jul 1, 2018, 10:05 AM GMT (b9f7e79)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/24/fd7b35a...b9f7e79.html\" title=\"Last updated on Jul 1, 2018, 10:05 AM GMT (b9f7e79)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/23> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/identifier> "23"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/name> "What is 'base' for an embedded json-ld?" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/startDate> "2018-07-01T04:50:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/endDate> "2018-11-16T19:03:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://schema.org/description> "The definition of the [embedded JSON-LD](https://w3c.github.io/json-ld-syntax/#embedding-json-ld-in-html-documents) does not specify what the 'base' for that JSON-LD must be. It should specify it.\r\n\r\n(cf #22)" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/22> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/22"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/identifier> "22"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/name> "Normativeness of the embedded form of JSON-LD" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> <http://schema.org/name> "spec:duplicate" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> <http://schema.org/color> "e0082c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:duplicate> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/startDate> "2018-07-01T04:47:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/endDate> "2018-08-27T16:03:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://schema.org/description> "Section [4.28](https://w3c.github.io/json-ld-syntax/#embedding-json-ld-in-html-documents) of the draft defines JSON-LD embedded in HTML via the `script` tag. However, the section is marked as 'non-normative'.\r\n\r\nIn view of the importance of that format (e.g., this is the main format accepted by schema.org processors these days) we should consider giving it a normative status." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/identifier> "21"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/name> "Travis" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/startDate> "2018-06-30T19:29:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/endDate> "2018-07-02T21:36:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/21> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/21> <http://schema.org/description> "Travis rules for checking common and examples." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/20> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://schema.org/identifier> "20"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://schema.org/name> "Introduce concept of \"sealed” contexts" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://schema.org/startDate> "2018-06-30T16:31:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://schema.org/description> "A number of standards track specifications use JSON-LD for extensibility but intentionally place limitations on overriding the terms defined in a core context. For example:\r\n\r\n> Implementations may augment the provided @context with additional @context definitions but must not override or change the normative context.\r\n\r\nhttps://www.w3.org/TR/activitystreams-core/#jsonld\r\n\r\n> Implementations MUST produce an error when an extension JSON-LD Context overrides the expanded URL for a term specified in the base JSON-LD Context (https://w3id.org/credentials/v1). To avoid the possibility of accidentally overriding terms, developers are urged to scope their extensions.\r\n\r\nhttps://w3c.github.io/vc-data-model/#extensibility\r\n\r\nIt seems like it would be a nice feature to allow enforcement of this desire by JSON-LD processors. Then authors could be assured that the interpretation of a context would be proper and properly implemented JSON-LD processors would throw errors if rules were violated.\r\n\r\nIn short, I propose we add a keyword with boolean value such as `\"@sealed\": true` (that could appear in contexts) to JSON-LD 1.1 that enables processors to enforce a desire to prevent defined terms from being redefined in subsequent contexts, but allows for new terms (aka extensions) to be defined.\r\n\r\nOriginal issue: [Introduce concept of \"sealed\" contexts #656](https://github.com/json-ld/json-ld.org/issues/656)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/19> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://schema.org/identifier> "19"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://schema.org/name> "Indexing without a predicate" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/workergnome> <http://schema.org/accountId> "workergnome" .
<https://api.github.com/users/workergnome> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/34536?v=4" .
<https://api.github.com/users/workergnome> <http://schema.org/url> "https://github.com/workergnome"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/workergnome> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#assignee> <https://api.github.com/users/workergnome> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#assignee> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://schema.org/startDate> "2018-06-30T16:31:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://schema.org/description> "For consideration by the JSON-LD 1.1 WG...\r\n\r\nAssuming a nested set of resources where leaf nodes are frequently repeated, it is difficult to find the definition of the node after compaction.  Imagine a classification that is used on the second item in a list, and again on the 26th.  It would be nice to have a place to look up the label for the classification, instead of repeating it on both 2 and 26.  Similarly, information about repeated people, services, or anything else could benefit from this pattern.\r\n\r\nAs prior art, and use case for inclusion, [JSON API](http://jsonapi.org/format/#document-top-level) has the notion of \"included\" -- a slot where you can put resources that are included in others, such that developers can always know where to find them.  In my work, this has come up with repeated services in IIIF, and classifications, people and places when describing the cultural heritage objects they relate to.\r\n\r\nThe identifier map pattern is already in this space, but insufficient as it requires a predicate to map to, and the relationship is to a resource somewhere nested in the data structure, not the top level resource. There would also need to be framing support as an extension to `@embed:@never` such that the inclusions were not embedded in the object data, but with a pointer to where they should go.\r\n\r\nExample data:\r\n\r\n```\r\n{\r\n  \"id\": \"1\",\r\n  \"type\": \"eg:Thing-with-Items\",\r\n  \"eg:items\": [\r\n    {\r\n      \"id\":\"2\",\r\n      \"classification\": \"enum:c6\",\r\n      \"service\": \"enum:s2\",\r\n    },\r\n    { \"id\": \"3...26 go here\", \"type\": \"eg:X\"}, \r\n    {\r\n      \"id\": \"27\",\r\n      \"classification\": \"enum:c6\"\r\n    }    \r\n  ],\r\n  \"included\": {\r\n    \"enum:c6\": {\"type\": \"eg:Type\", \"label\": \"Classification 6\"},\r\n    \"enum:p1\": {\"type\": \"eg:Person\", \"label\": \"Person 1\"},\r\n    \"enum:s2\": {\"type\": \"eg:Service\", \"label\": \"Login Service\"}\r\n  }  \r\n}\r\n```\r\n\r\nPlayground example with identifier map:  http://tinyurl.com/yd5z87xg\r\n\r\nThe inclusion term could either be a new keyword like `@id` (`@included` or `@inclusions`) that was then re-aliased in the context (to, e.g. `included`), or it could be a new keyword value for `@container` (`included: {@container: @included}`).  I think the former is the (slightly) better design, as it makes it more obviously a field rather than a data structure. It would only be usable in a resource that is not nested within other resources (e.g. the top level JSON object ... which might be in an array or @graph). Framing could then use the same keyword: `@embed: @included`.\r\n\r\nOriginal issue: [Indexing without a predicate #650](https://github.com/json-ld/json-ld.org/issues/650)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/18> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/18"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/identifier> "18"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/name> "The absence of being" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/startDate> "2018-06-30T16:30:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/endDate> "2018-10-18T22:10:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://schema.org/description> "### A standard model of emptiness\r\n\r\nIn summary, it would be useful if JSON-LD recognized the quantum duality of the empty list, in that it can be both value (`rdf:nil`) and list (`[]`). I would propose:\r\n\r\n* Expansion standardizes what it does with empty lists whatever the form of the input. For consistency, `rdf:nil` might be best.\r\n* Framing adapts to the needs of the frame. My current half-baked thought would be if i say `\"hasValue\": {}` in my frame, and the input is `\"hasValue\": \"rdf:nil\"`, output would be a contextualized `rdf:nil`, unless `\"hasValue\": {\"@container\": \"@list\"}`, in which case output would be `[]`. I realize this likely brings up other issues.\r\n\r\nFinally, it would be good if the working group, once established, were to re-examine the definition of `@null` in the spec, or at least clarifies its relationship to RDF, and `rdf:nil` in particular. Currently, `rdf:nil` is not the same as `@null`, and framing treats `@null` as `null` in the output JSON, which is swallowed by at least Java deserializers, so just takes up space, and emptiness should never take up space. I touched on the this in [issue 641](https://github.com/json-ld/json-ld.org/issues/641): it would be better if a property were only set to `@null` if it actually meant something.\r\n\r\nOriginal issue [The absence of being #648](https://github.com/json-ld/json-ld.org/issues/648)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/17> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/17"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/identifier> "17"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/name> "Consider the inverse of @container:@set? " .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/startDate> "2018-06-30T16:29:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/endDate> "2018-09-17T19:44:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://schema.org/description> "We should consider whether or not the opposite of `@container:@set` is sufficiently valuable to include. This would be when there is exactly one entry in an `@list`, instead of compacting to an array, compact to a single item. \r\n\r\nIt is valid as input already (http://tinyurl.com/yccbfl9j) but compaction will always create the JSON array.\r\n\r\nThe context might say:\r\n\r\n```\r\n{\r\n  \"listy\": {\"@id\": \"eg:steps\", \"@container\": [\"@list\", \"@single-item-is-value\"]}\r\n}\r\n```\r\n\r\nFor example, the schema.org `recipeInstructions` for a single step could just be a string, not an array containing a string.  Such as this very simple guacamole https://www.allrecipes.com/recipe/14231/guacamole/ could be compacted to:\r\n\r\n```\r\n\"recipeInstructions\": \"In a medium bowl, mash together the avocados, lime juice, ...\"\r\n```\r\neven if `recipeInstructions` was an `@list`.\r\n\r\n(/ht @danbri)\r\n\r\nOriginal issue: [Consider the inverse of @container:@set? #646](https://github.com/json-ld/json-ld.org/issues/646)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/16> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://schema.org/identifier> "16"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://schema.org/name> "Warn or error if non-keyword strings having \"@\" are encountered" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://schema.org/startDate> "2018-06-30T16:28:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://schema.org/description> "Looking at a [schema.org example for ItemList](http://schema.org/ItemList#ItemList-gen-306), there is a JSON-LD example which includes the fictitious `@url` keyword, where they likely meant `@id`.\r\n\r\n```jsonld\r\n{\r\n  \"@context\": \"http://schema.org\",\r\n  \"@type\": \"ItemList\",\r\n  \"@url\": \"http://en.wikipedia.org/wiki/Billboard_200\",\r\n  \"name\": \"Top music artists\",\r\n  \"description\": \"The artists with the most cumulative weeks at number one according to Billboard 200\",\r\n  \"itemListElement\": [\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 1,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Beatles\"\r\n      }\r\n    },\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 2,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Elvis Presley\"\r\n      }\r\n    },\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 3,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Michael Jackson\"\r\n      }\r\n    },\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 3,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Garth Brooks\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThere's nothing to signal an issue, and a JSON-LD processor will happily resolve this relative to `@vocab` as `http://schema.org/@url`. This creates a potential forward-compatibility issue if new keywords are introduced, as they are in 1.1. We might want to describe normative or suggested behavior if a processor encounters a string which could hold a keyword, but holds something else starting with `@`.\r\n\r\ncc/ @danbri\r\n\r\nOriginal issue: [Warn or error if non-keyword strings having \"@\" are encountered #598](https://github.com/json-ld/json-ld.org/issues/598)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/15> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/identifier> "15"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/name> "Alternative support for list-like structures such as schema:ListItem" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/startDate> "2018-06-30T16:27:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/endDate> "2018-09-13T17:02:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://schema.org/description> "Per a suggestion by @danbri, we may want to add a container type, similar to `@list` for encoding things like [`schema:ItemList`](http://schema.org/ItemList) serializations, when the values are [`schema:ListItem`](http://schema.org/ListItem) and order is set through `schema:position`. `ItemList` can be used with text values as well, but this is already reasonably supported natively.\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.org/\",\r\n    \"itemListElement\": {\r\n      \"@container\": {\r\n        \"@type\": \"@itemList\",\r\n        \"@itemType\": \"http://schema.org/ListItem\",\r\n        \"@itemProperty\": \"http://schema.org/itemListElement\",\r\n        \"@itemPosition\": \"http://schema.org/position\"\r\n      }\r\n    }\r\n  },\r\n  \"@type\": \"ItemList\",\r\n  \"@url\": \"http://en.wikipedia.org/wiki/Billboard_200\",\r\n  \"name\": \"Top music artists\",\r\n  \"description\": \"The artists with the most cumulative weeks at number one according to Billboard 200\",\r\n  \"itemListElement\": [\r\n    {\"@type\": \"MusicGroup\", \"name\": \"Beatles\"},\r\n    {\"@type\": \"MusicGroup\", \"name\": \"Elvis Presley\"},\r\n    {\"@type\": \"MusicGroup\", \"name\": \"Michael Jackson\"},\r\n    {\"@type\": \"MusicGroup\", \"name\": \"Garth Brooks\" }\r\n  ]\r\n}\r\n```\r\n\r\nOriginal issue [Native support for schema:ListItem #595](https://github.com/json-ld/json-ld.org/issues/595)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/14> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/14"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/identifier> "14"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/name> "\"Lax” IRIs" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/startDate> "2018-06-30T16:26:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/endDate> "2018-07-30T20:28:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://schema.org/description> "Allows arbitrary strings to be used as IRIs\r\n\r\nOriginal issue: [\"Lax\" IRIs #590](https://github.com/json-ld/json-ld.org/issues/590)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/13> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/13"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/identifier> "13"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/name> "Allow @value, @language and @type simultaneously" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/startDate> "2018-06-30T16:26:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/endDate> "2018-08-04T17:14:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://schema.org/description> "It is currently not possible to have all three of `@value`, `@language` and `@type`.  Meaning that for text with embedded mark up, it is impossible to have both language and format (the datatype given in `@type`) ... neither of which can be reliably introspected from the value.\r\n\r\nAny time there is markdown, html, xml, json, yaml, latex, or any other formatting instructions beyond simply print the string to the user, this becomes extremely valuable. Given the usage of those formats on the web, it would enable appropriate management of internationalized texts.\r\n\r\nExample:\r\n```\r\n{\r\n  \"description\": {\r\n    \"@value\":\"<p>Some <b>description</b></p>\",\r\n    \"@type\": \"rdf:XMLLiteral\",\r\n    \"@language\" : \"en-latn\"\r\n  }\r\n}\r\n```\r\n\r\nReference: https://lists.w3.org/Archives/Public/public-linked-json/2014Aug/0031.html\r\nDoor-Opened-By: https://github.com/json-ld/json-ld.org/issues/583\r\n\r\nOriginal issue: [Allow @value, @language and @type simultaneously #585](https://github.com/json-ld/json-ld.org/issues/585)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/12> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/identifier> "12"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/name> "Revisit empty string as term" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/startDate> "2018-06-30T16:24:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/endDate> "2018-08-27T15:53:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://schema.org/description> "JSON-LD has a restriction that terms must not be the empty string\r\n\r\nFrom [JSON-LD Syntax 6.1](https://json-ld.org/spec/latest/json-ld/#terms-0):\r\n\r\n> Furthermore, the term MUST NOT be an empty string (\"\") as not all programming languages are able to handle empty JSON keys.\r\n\r\nIIRC, this was added due to an issue in an earlier version of PHP, and I suspect it is no longer an issue. Furthermore, the use of empty prefixes is common in other RDF syntaxes, so allowing it here for 1.1 documents would be reasonable, if tooling supports it.\r\n\r\nAs evidence, consider [this stackoverflow question](https://stackoverflow.com/questions/48573967/compact-iri-with-an-empty-string-prefix-can-it-be-done).\r\n\r\nAlso, note that while the syntax document makes such a normative statement, the API algorithms don't call this out as an error condition.\r\n\r\nOriginal issue [Revisit empty string as term #584](https://github.com/json-ld/json-ld.org/issues/584)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/11> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/11"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://schema.org/identifier> "11"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://schema.org/name> "Introducing @dir" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/i18n-tracker> <http://schema.org/name> "i18n-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/i18n-tracker> <http://schema.org/color> "F9C9FF" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/i18n-tracker> <http://schema.org/description> "Group bringing to attention of Internationalization, or tracked by i18n but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/i18n-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://schema.org/startDate> "2018-06-30T16:23:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://schema.org/description> "In some situations it is important/necessary to include the base direction of a text, alongside its language; see the [“Requirements for Language and Direction Metadata in Data Formats”](https://w3c.github.io/string-meta/) for further details. In practice, in a vanilla JSON, it would require something like:\r\n\r\n\r\n  ```\r\n  \"title\": [ { \"value\": \"Moby Dick\", \"lang\": \"en\" },\r\n	         { \"value\": \"موبي ديك\", \"lang\": \"ar\"  \"dir\": \"rtl\"}\r\n	       ]  \r\n  ```\r\n\r\n  (the example comes from that document).\r\n\r\n  At this moment, I believe the only way you can reasonably express that in JSON-LD is via cheating a bit:\r\n\r\n  ```\r\n  \"title\": [ { \"@value\": \"Moby Dick\", \"@language\": \"en\" },\r\n	         { \"@value\": \"موبي ديك\",  \"@language\": \"ar\"  \"dir\": \"rtl\"}\r\n	       ]  \r\n  ```\r\n\r\n  and making sure that the `dir` term is _not_ defined in the relevant `@context` so that, when generating the RDF output, that term is simply ignored. But that also means that there is no round-tripping, that term will disappear after expansion.\r\n\r\n  The difficulty lies in the RDF layer, in fact; RDF does not have any means (alas!) to express text direction. On the other hand, this missing feature is a general I18N problem whenever JSON-LD is used (there were issues when developing the Web Annotation Model, these issues are popping up in the Web Publication work, etc.).\r\n\r\n  Here is what I would propose as a non-complete solution\r\n\r\n  1. Let us introduce a `@dir` term, alongside `@language`. This means this term can be used in place of `dir` above, ie, it is a bona-fide part of a string representation, and would therefore be kept in the compaction/expansion steps, can also be used for framing.\r\n  2. In JSON-LD 1.1, `@dir` is _ignored_ when transforming into RDF. I.e., only the language tag would be used.\r\n  3. We _may_ initiate some work in the RDF community to solve this issue. There may be several ways, each of them require the RDF community to chime in\r\n  	3.1. Define a mechanism of \"parametrized\" standard datatypes that represent a (language,direction) pair. One would then get something like`[] ex:title \"موبي ديك\"^^rdf:internationalText(ar,rtl) ;`\r\n  	3.2. Go for a \"generalized\" RDF where strings can also appear as subjects (that has been a matter of dispute for a long time...). That would give the possibility to add such attribute to texts like directions\r\n  	3.3. Some other mechanisms that I cannot think about\r\n  4. In a future JSON-LD 1.* the `@dir` value can be properly mapped onto an RDF representing the right choices (if such choices are worked out)\r\n\r\nOriginal issue [Introducing @dir ? #583](https://github.com/json-ld/json-ld.org/issues/583)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/10> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/10"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/identifier> "10"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/name> "Use version 2.0 instead of 1.1 " .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/startDate> "2018-06-30T16:21:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/endDate> "2018-07-30T20:29:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://schema.org/description> "[Comments at TPAC](https://json-ld.org/minutes/2017-11-08/) suggested that as our work is a breaking change (causing 1.0 processors that are not 1.1 compatible to intentionally break when they see `\"@version\": 1.1`), [semantic versioning](http://semver.org) would suggest that we use a major release number, rather than a minor number.\r\n\r\nOriginal issue is [Use version 2.0 instead of 1.1 #548](https://github.com/json-ld/json-ld.org/issues/548)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/9> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://schema.org/identifier> "9"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://schema.org/name> "Content addressable contexts" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://schema.org/startDate> "2018-06-30T16:20:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://schema.org/description> "Provide a means for refering to a remote context without without requiring it to be downloaded\r\n* HTML scribe integrity?\r\n* IPFS\r\n* `duri` or `tdb` schemes\r\n* “frozen” contexts\r\n\r\nOriginal issue [Content addressable contexts #547](https://github.com/json-ld/json-ld.org/issues/547)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/8> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://schema.org/identifier> "8"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://schema.org/name> "HTTP parameters for specifying context or frame" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/name> "security-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/color> "ffff00" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/description> "Group bringing to attention of security, or tracked by the security Group but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://schema.org/startDate> "2018-06-30T16:19:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://schema.org/description> "  When requesting JSON-LD from an HTTP endpoint, it would be useful to provide a reference to a context or frame which should be used by the server to put the results into the proper format.\r\n  * Note that this could be an attack vector on the server, so some provision for white-listing may be in order.\r\n\r\n  Original issue is [JSON-LD 1.1 Feature Request : define how to specify the json-ld profile in a request to a server and include framing as an option #491](https://github.com/json-ld/json-ld.org/issues/491)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/7> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/identifier> "7"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/name> "support @values for describing multidimensional containers" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/name> "out of scope: transformation" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/out%20of%20scope:%20transformation> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/startDate> "2018-06-30T16:18:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/endDate> "2018-09-13T16:56:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://schema.org/description> "Allows a term definition to include an `@values` block to describe structured values, such as for GeoJSON\r\n\r\n  ### Example\r\n\r\n  ``` json\r\n  {\r\n    \"@context\": {\r\n       \"coordinates\": {\r\n          \"@id\": \"geojson:coordinates\",\r\n          \"@container\" : \"@list\",\r\n          \"@values\" : { \r\n             \"@type\" : \"geojson:Coordinate\",\r\n             \"@container\" : \"@set\",\r\n             \"@values\" : [\r\n                 {\"@type\" : \"xsd:double\", \"@id\":\"geo:longitude\"},\r\n                 {\"@type\" : \"xsd:double\", \"@id\":\"geo:latitude\"}\r\n             ]\r\n          }\r\n       }\r\n    },\r\n    \"@graph\" : [{\r\n     \"@id\" : \"ex:LineString1\",\r\n      \"coordinates\" : [\r\n            [\r\n              3.1057405471801753,\r\n              51.064216229943476\r\n            ],\r\n            [\r\n              3.1056976318359375,\r\n              51.063434090307574\r\n            ]\r\n      ]\r\n    }]\r\n  }\r\n  ```\r\n\r\n  Would transform to (and vice versa):\r\n\r\n  ``` turtle\r\n  ex:LineString1 geojson:coordinates _:b0 .\r\n  _:b0 rdf:first _:b1 .\r\n  _:b1 a geojson:Coordinate ;\r\n        geo:longitude \"3.105740547180175E0\"^^xsd:double ;\r\n        geo:latitude \"5.106421622994348E1\"^^xsd:double .\r\n  _:b0 rdf:rest _:b2 .\r\n  _:b2 rdf:first a geojson:Coordinate ;\r\n        geo:longitude \"3.1056976318359375\"^^xsd:double ;\r\n        geo:latitude \"51.063434090307574\"^^xsd:double .\r\n  _:b2 rdf:rest rdf:nil .\r\n  ```\r\n\r\nOriginal issue is [JSON-LD 1.1 Feature Request: support @values for describing multidimensional containers (list of lists) #397](https://github.com/json-ld/json-ld.org/issues/397)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/6> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/6"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/identifier> "6"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/name> "New @label keyword" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/startDate> "2018-06-30T16:16:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/endDate> "2018-07-30T20:29:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://schema.org/description> "Syntactic sugar for `schema:label` (which doesn’t exist).\r\n\r\nOriginal issue is [JSON-LD 1.1 Feature Request: New @label keyword #371](https://github.com/json-ld/json-ld.org/issues/371)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/5> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/5"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/identifier> "5"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/name> "Object-level @language" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/name> "spec:wontfix" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/color> "2bafa2" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:wontfix> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/startDate> "2018-06-30T16:15:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/endDate> "2018-07-30T20:30:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://schema.org/description> "Support the use of `”@language”: “foo”` as a shorthand for `{“@context”: {“@language”: “foo”}}`.\r\n\r\nOriginal issue is [JSON-LD 1.1 Feature Request: Object-level @language #368](https://github.com/json-ld/json-ld.org/issues/368)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/4> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://schema.org/identifier> "4"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://schema.org/name> "Support JSON values that aren’t mapped" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/name> "spec:enhancement" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/color> "c11537" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:enhancement> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/name> "spec:substantive" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/color> "cff9a4" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:substantive> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://schema.org/startDate> "2018-06-30T16:14:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://schema.org/description> "* Consider using `”@type”: “@json” to describe native values in the compact form.\r\n* Native values should include all JSON types: strings, booleans, numbers, and _null_ as well as objects and arrays.\r\n* Expanded form can record these as values of `@value`.\r\n  * Does interfere with some use of `[]` and `{}` in framing\r\n\r\nOriginal issue is [Support JSON values that aren't mapped #333](https://github.com/json-ld/json-ld.org/issues/333)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/3> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/3"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/identifier> "3"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/name> "Pick a better keyword for @nest" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/name> "satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/color> "4be23b" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> <http://schema.org/description> "Requirement Satisfied" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/satisfied> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/startDate> "2018-06-30T16:12:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/endDate> "2018-07-30T20:31:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://schema.org/description> "People haven’t been satisfied with the @nest term for describing nested properties, although nothing better has come along.\r\n\r\nOriginal issue was [Ignoring semantically meaningless nesting #246](https://github.com/json-ld/json-ld.org/issues/246).\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/2> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/2"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/identifier> "2"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/name> "CG import ivan" .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/startDate> "2018-06-13T09:31:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/endDate> "2018-06-29T17:53:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/2> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/2"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/2> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://schema.org/description> "This is, originally, the PR of @gkellogg (#1), but modified to get the PR preview working (`common` should be local).\n\nSome minor changes in the respec header:\n\n- The patent policy address was incorrect\n- added a reference to the 2018 process\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/2.html\" title=\"Last updated on Jun 29, 2018, 5:49 PM GMT (d718fa3)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/2/cf19f43...d718fa3.html\" title=\"Last updated on Jun 29, 2018, 5:49 PM GMT (d718fa3)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/1> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/identifier> "1"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/name> "Initial spec import" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/startDate> "2018-06-08T22:57:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/endDate> "2018-06-13T16:21:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/1> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/1> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://schema.org/description> "Spec updated from CG for WG." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/395992462> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-395992462"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/395992462> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/395992462> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/395992462> <http://schema.org/startDate> "2018-06-09T19:20:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/395992462> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/395992462> <http://schema.org/description> "@iherman what needs to be done to get the formatted preview to work for this, and the other repos?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396030661> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396030661"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396030661> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396030661> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396030661> <http://schema.org/startDate> "2018-06-10T08:21:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396030661> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396030661> <http://schema.org/description> "Hm. This should work, because the tool to preview is automatically installed for all W3C repos, including this one (and I have added the necessary config files). I _suspect_ that it has problems with respec; afaik, if the respec process does not complete for whatever reasons, then there is no result appearing here.\r\n\r\nCan you check it separately? A way to do that is to run something like below, with the obvious changes of the parameters:\r\n\r\n```\r\nhttps://labs.w3.org/spec-generator/?type=respec&url=https://w3c.github.io/wpub/?specStatus=FPWD;publishDate=2018-01-02;includePermalinks=false\r\n```\r\n\r\nCc: @tobie " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396057524> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396057524"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396057524> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396057524> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396057524> <http://schema.org/startDate> "2018-06-10T15:22:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396057524> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396057524> <http://schema.org/description> "The problem may be that the specs access files in json-ld-wg which are stuck in a PR. We should probably pull that so that they exist for the specs." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396059510> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396059510"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396059510> .
<https://api.github.com/users/tobie> <http://schema.org/accountId> "tobie" .
<https://api.github.com/users/tobie> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/3392?v=4" .
<https://api.github.com/users/tobie> <http://schema.org/url> "https://github.com/tobie"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tobie> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396059510> <http://schema.org/creator> <https://api.github.com/users/tobie> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396059510> <http://schema.org/startDate> "2018-06-10T15:49:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396059510> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396059510> <http://schema.org/description> "Hey folks, unfortunately, I don't have the time to do any support for pr-preview these days. I am considering offering support as a paid service however, so let me know if this is something you might be interested in." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396722163> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396722163"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396722163> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396722163> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396722163> <http://schema.org/startDate> "2018-06-12T20:27:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396722163> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396722163> <http://schema.org/description> "@iherman no luck; I tried `https://labs.w3.org/spec-generator/?type=respec&url=https://raw.githubusercontent.com/w3c/json-ld-syntax/cg-import/index.html` which results in a failed promise error, do you have any insight as to what's going on? It runs fine in my environment, of course." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396863642> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396863642"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396863642> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396863642> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396863642> <http://schema.org/startDate> "2018-06-13T08:49:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396863642> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396863642> <http://schema.org/description> "@gkellogg,\r\n\r\nI believe the issues is with\r\n\r\n```\r\n<script type=\"text/javascript\" src=\"../json-ld-wg/common/common.js\" class=\"remove\"></script>\r\n```\r\n\r\nI am afraid the 'common' subdirectory will have to be duplicated for each document, and it cannot be kept at one place. B.t.w., the lab generator cannot go to that directory and, actually, this would also create, at some point, a problem with Echidna.\r\n\r\n:-(\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396876500> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396876500"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396876500> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396876500> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396876500> <http://schema.org/startDate> "2018-06-13T09:34:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396876500> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396876500> <http://schema.org/description> "@gkellogg I have made a version and a separate PR #2 where:\r\n\r\n- I have copied the content of the 'common' directory to the repository\r\n- Changed the references in `index.html` (including the two html import statements)\r\n- While I was at it, I also updated the Patent Policy reference in the respec header, as well as added a reference to the 2018 process.\r\n\r\nThe PR preview works now in #2. I propose to close this one, and merge #2." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396994443> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396994443"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396994443> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396994443> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396994443> <http://schema.org/startDate> "2018-06-13T16:06:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396994443> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396994443> <http://schema.org/description> "Do other specs have similar issues and have a good solution to keep common files in sync? Maybe just a README file in each spec common dir noting that people should edit the main wg common files and sync changes to each spec? Or maybe it's just not a big deal to do by hand?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396996628> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/1#issuecomment-396996628"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/1> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396996628> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396996628> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396996628> <http://schema.org/startDate> "2018-06-13T16:12:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396996628> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/396996628> <http://schema.org/description> "It sort of misses the point of having common files, if they need to be duplicated, which is unfortunate. Certainly, we'll need to add a README that changes to any file in /common must be replicated to other repositories; as Ivan noted, they don't change too often. We should probably keep the main ones in json-ld-wg. Perhaps we can figure out a Travis CI check to make sure they haven't diverged.\r\n\r\nI'll close PR #1 and replicate these changes to json-ld-api and json-ld framing PRs." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401423203> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/2#issuecomment-401423203"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/2> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401423203> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401423203> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401423203> <http://schema.org/startDate> "2018-06-29T17:35:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401423203> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401423203> <http://schema.org/description> "Approval to merge: https://www.w3.org/2018/06/29-json-ld-minutes.html#resolution03 \r\n\r\n@iherman - Can you fix the typo that @davidlehn noticed before we merge?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550387> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/3#issuecomment-401550387"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550387> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550387> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550387> <http://schema.org/startDate> "2018-06-30T16:12:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550387> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550387> <http://schema.org/description> "I think that ship has sailed." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550606> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/5#issuecomment-401550606"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550606> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550606> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550606> <http://schema.org/startDate> "2018-06-30T16:15:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550606> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550606> <http://schema.org/description> "syntactic sugar which doesn’t help, IMHO" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550999> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/10#issuecomment-401550999"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550999> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550999> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550999> <http://schema.org/startDate> "2018-06-30T16:21:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550999> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401550999> <http://schema.org/description> "I think this is a no-go zone" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401551317> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/14#issuecomment-401551317"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401551317> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401551317> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401551317> <http://schema.org/startDate> "2018-06-30T16:27:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401551317> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401551317> <http://schema.org/description> "originally added to appease a potential adopter, but a bad idea IMHO" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401562878> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-401562878"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401562878> .
<https://api.github.com/users/RubenVerborgh> <http://schema.org/accountId> "RubenVerborgh" .
<https://api.github.com/users/RubenVerborgh> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/675313?v=4" .
<https://api.github.com/users/RubenVerborgh> <http://schema.org/url> "https://github.com/RubenVerborgh"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/RubenVerborgh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401562878> <http://schema.org/creator> <https://api.github.com/users/RubenVerborgh> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401562878> <http://schema.org/startDate> "2018-06-30T19:57:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401562878> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401562878> <http://schema.org/description> "We should align this with the work in the W3C DXWG (e.g., https://github.com/w3c/dxwg/issues/261)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401582901> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-401582901"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401582901> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401582901> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401582901> <http://schema.org/startDate> "2018-07-01T04:52:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401582901> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401582901> <http://schema.org/description> "My view is that, unless base is explicitly set in the JSON-LD content, the base URL of the HTML containing the `script` element must be used as a base for the JSON-LD snippet." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401596662> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-401596662"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401596662> .
<https://api.github.com/users/pietercolpaert> <http://schema.org/accountId> "pietercolpaert" .
<https://api.github.com/users/pietercolpaert> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/347073?v=4" .
<https://api.github.com/users/pietercolpaert> <http://schema.org/url> "https://github.com/pietercolpaert"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pietercolpaert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401596662> <http://schema.org/creator> <https://api.github.com/users/pietercolpaert> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401596662> <http://schema.org/startDate> "2018-07-01T10:01:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401596662> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401596662> <http://schema.org/description> "Appologies -- Wrongly assumed opening this issue meant it was going to be adopted in JSON-LD 1.1 - https://twitter.com/pietercolpaert/status/1013100062879178754\r\n\r\nWould love this proposal to be taken into account for the 1.1 spec though!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401609527> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-401609527"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401609527> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401609527> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401609527> <http://schema.org/startDate> "2018-07-01T14:12:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401609527> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401609527> <http://schema.org/description> "It seems to be the way things are going, although I personally miss the distinction between “Identifier” and “Locator”, which implies dereferencability." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637048> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-401637048"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637048> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637048> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637048> <http://schema.org/startDate> "2018-07-01T22:14:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637048> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637048> <http://schema.org/description> "There are a couple of possibilities:\r\n* [Document Base URL](https://www.w3.org/TR/html51/infrastructure.html#document-base-url)\r\n* The [Node Documents's BaseURI](https://dom.spec.whatwg.org/#dom-node-baseuri), which I believe can be affected by `xml:base`.\r\n\r\nI find the HTML and DOM descriptions somewhat confusing, but basically it's a matter of if it uses the base URL in the scope of the script element, or that of the document itself, either from it's location, or from `html>head>base@href`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637113> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-401637113"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637113> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637113> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637113> <http://schema.org/startDate> "2018-07-01T22:16:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637113> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637113> <http://schema.org/description> "Interesting that DOM continues to use URI, at least for [baseURI](https://dom.spec.whatwg.org/#dom-node-baseuri). RDF 1.1 uses IRI, so it may make sense to continue that usage." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637673> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26#issuecomment-401637673"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637673> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637673> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637673> <http://schema.org/startDate> "2018-07-01T22:27:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637673> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637673> <http://schema.org/description> "There are a couple of things going on:\r\n\r\n* examples with no transformation\r\n* examples of document expansion, which may take a document with optional context and show the expanded form or quads, in the form of a table\r\n* examples of compaction or framing\r\n* examples of flattening.\r\n\r\nTypically, when a transformation is shown, it's the tabular form which is shown, quite often, the transformation is not shown inline. Where we do show the tabular form, it could make sense to allow this to be either expanded, flattened, TriG, tabular and perhaps even graphical. I'd favor a control on the example result, rather than a document-wide setting personally. Note that there is a Travis-CI setup which does some basic syntax checking, which could be enhanced to validate all transformations (although, tabular isn't quite normalized enough to do this easily, right now).\r\n\r\nDo we want to add more transformations for other examples? That could certainly blow up the size of the document, but might be useful. Alternatively, a link to the playground that loads the source could allow this kind of interaction without blowing up the document size." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637937> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/27#issuecomment-401637937"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637937> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637937> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637937> <http://schema.org/startDate> "2018-07-01T22:32:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637937> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401637937> <http://schema.org/description> "Well, named graphs are used this way pretty exclusively in Verifiable Credentials, so I'd be careful of such a blanket statement, and certain settings are designed for anonymous named graphs (e.g. `\"@container\": \"@graph\"`). While, [Named Graph Indexing](https://w3c.github.io/json-ld-syntax/#named-graph-indexing) favors graphs that are named with IRIs.\r\n\r\nBut, in [4.15 Named Graphs](https://w3c.github.io/json-ld-syntax/#named-graphs), the examples using `@graph` and `_:graph` could certainly use an IRI instead." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638021> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/28#issuecomment-401638021"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/28> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638021> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638021> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638021> <http://schema.org/startDate> "2018-07-01T22:34:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638021> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638021> <http://schema.org/description> "👍, these could probably also use an expanded result." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638230> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/29#issuecomment-401638230"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/29> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638230> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638230> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638230> <http://schema.org/startDate> "2018-07-01T22:38:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638230> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401638230> <http://schema.org/description> "I've used \"Bush\" to describe a graph with multiple start nodes.\r\n\r\nAnd, yes, I think we could add something to [4. Advanced Concepts](https://w3c.github.io/json-ld-syntax/#advanced-concepts) that elaborates on this use. We do have an example in [4.15 Named Graphs](https://w3c.github.io/json-ld-syntax/#named-graphs) (Example 60) of multiple nodes in the default graph, but it's not explicitly called out and is an odd place to look for it." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673095> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-401673095"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673095> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673095> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673095> <http://schema.org/startDate> "2018-07-02T05:01:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673095> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673095> <http://schema.org/description> "I see end users the main targets of this document, which intends to be very didactic (which is good!). Application developers (who would use the DOM) is not really our concern in this respect (besides, baseURI is probably kept for backward compatibility reasons).\r\n\r\nYes, RDF uses IRI, we cannot change that. And it is probably the precise way of saying things. But I do not consider this as a decisive factor..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673727> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/27#issuecomment-401673727"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673727> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673727> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673727> <http://schema.org/startDate> "2018-07-02T05:07:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673727> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401673727> <http://schema.org/description> "At this moment, VC-s are indeed a major usage. But named graphs are used in many different situtions in major data stores, where the blank node usage may be almost irrelevant. I think, in general, we should use URI-s (oops, URL-s 😄) when we can. Having _some_ examples is fine and probably necessary, of course.\r\n\r\nHowever, I would be particularly careful about the usage of “semantically named” blank node id-s. I would very much try to avoid them, to avoid giving a wrong impression to non-RDF-aware readers..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674310> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26#issuecomment-401674310"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674310> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674310> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674310> <http://schema.org/startDate> "2018-07-02T05:12:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674310> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674310> <http://schema.org/description> "Explicit examples for framing or flattening are of course a separate issue.\r\n\r\nI think that consistency is important: _all_ examples (excep for the flattening/expansion ones, of course) _must_ have the same series of examples, whether it makes a lot of sense or not. And relying on playground is not an option for me: I may not always be on-line (I reviewed the document, and gathered these comments, on a plane) and playground may be down...\r\n\r\nIf we can have a control over each example easily, I would also be in favour of that. And if the document is large: let us be it. We will sill be smaller than the HTML doc, and infinitely more readable:-)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674419> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26#issuecomment-401674419"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674419> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674419> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674419> <http://schema.org/startDate> "2018-07-02T05:13:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674419> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401674419> <http://schema.org/description> "B .t.w., on my last remark: if the document is too large as one HTML file, we can consider cutting the text into several files (within on recommendation) like HTML or SVG does it..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401687057> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-401687057"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401687057> .
<https://api.github.com/users/p1d1d1> <http://schema.org/accountId> "p1d1d1" .
<https://api.github.com/users/p1d1d1> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/1533649?v=4" .
<https://api.github.com/users/p1d1d1> <http://schema.org/url> "https://github.com/p1d1d1"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/p1d1d1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401687057> <http://schema.org/creator> <https://api.github.com/users/p1d1d1> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401687057> <http://schema.org/startDate> "2018-07-02T06:42:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401687057> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401687057> <http://schema.org/description> "Any thoughts how this could map to GeoSPARQL?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401691981> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-401691981"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401691981> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401691981> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401691981> <http://schema.org/startDate> "2018-07-02T07:08:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401691981> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401691981> <http://schema.org/description> "The (WhatWG) [DOM document says](https://dom.spec.whatwg.org/#dom-node-baseuri):\r\n\r\n> The `baseURI` attribute’s getter must return node document’s document base URL, serialized\r\n\r\nThe [HTML standard says](https://www.w3.org/TR/html52/infrastructure.html#document-base-url):\r\n\r\n> The document base URL of a Document object is the absolute URL obtained by running these substeps:\r\n>\r\n> 1. If there is no base element that has an href attribute in the Document, then the document base URL is the Document's fallback base URL; abort these steps.\r\n>\r\n> 2. Otherwise, the document base URL is the frozen base URL of the first base element in the Document that has an href attribute, in tree order.\r\n\r\nI do not find this particularly confusing... Whether `xml:base` affects the document base URL in the HTML sense: probably if the XHTML serialization is used. But this is not of our concern if we simply refer to the HTML spec's base URL.\r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401796653> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/27#issuecomment-401796653"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/27> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401796653> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401796653> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401796653> <http://schema.org/startDate> "2018-07-02T13:01:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401796653> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401796653> <http://schema.org/description> "Note, b.t.w., that Datasets in SPARQL do _not_ allow blank nodes as graph identifiers. If the goal of an encoding of a graph in JSON-LD is to, at some point, feed this into a, say, SPARQL CONSTRUCT, then blank nodes are not allowed. One more reasons to be very careful about them..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401837325> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-401837325"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401837325> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401837325> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401837325> <http://schema.org/startDate> "2018-07-02T15:09:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401837325> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401837325> <http://schema.org/description> "I realize we have an issue with backward compatibility. I would therefore propose that we declare`@graph` as _deprecated_, but not removed. Ie, the old features remain valid, and we use a new keyword instead (`@dataset`). This means that, alas!, 1.1 implementations should implement `@graph`, too, though we should not include, imho, the graph container feature (we will have to see what to replace it with if necessary)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401841030> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/14#issuecomment-401841030"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401841030> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401841030> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401841030> <http://schema.org/startDate> "2018-07-02T15:21:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401841030> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401841030> <http://schema.org/description> "Also, it's also essentially already covered (conceptually) by the options for minting one's own IRI's. The content proposed in the original issue would simply become an ad-hoc URN of some kind. So, I don't believe there's anything here that's actually \"fixable\" because it isn't actually broken. 😃 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401842685> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/14#issuecomment-401842685"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401842685> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401842685> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401842685> <http://schema.org/startDate> "2018-07-02T15:26:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401842685> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401842685> <http://schema.org/description> "Agree closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401941284> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-401941284"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401941284> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401941284> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401941284> <http://schema.org/startDate> "2018-07-02T21:25:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401941284> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401941284> <http://schema.org/description> "I updated the wiki with my thoughts. I think we should continue to use `@graph`, and we can adapt for some of the issues you mention.\r\n\r\nThe graph container feature is required for Verifiable Credentials, and I suspect that @msporny and @dlongley would object to it's being removed.\r\n\r\nCreating a top-level dataset using a map structure could be accomplished by leveraging the existing container semantics as reproduced below:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    ...\r\n    \"dataset\": {\"@id\": \"@graph\", \"@container\": [\"@graph\", \"@id\"]}\r\n  },\r\n  \"dataset\" : {\r\n    \"URL1\" : {\r\n        Some RDF statements here\r\n    },\r\n    \"URL2\" : [\r\n        {\r\n            We could also define a bush just like above\r\n        },\r\n        {\r\n\r\n        }\r\n    ],\r\n    \"@none\" : [{\r\n        Default graph statements here\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\nThis just says that the use of the \"dataset\" term treats it like `@graph`, except to use the `\"@container\": [\"@graph\", \"@id\"]` mechanism to define a graph map. This avoids needing to introduce values in the default graph that reference the named graph identifiers.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401942970> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-401942970"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401942970> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401942970> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401942970> <http://schema.org/startDate> "2018-07-02T21:30:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401942970> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401942970> <http://schema.org/description> "What I found confusing was how `xml:base` is handled on intermediate nodes, which would create a different base IRI for that element and it's descendants; it's as if DOM and HTML consider that to create a new document, but I'm unclear on their logic.\r\n\r\nIn any case, it would be fine for us to ignore this usage and rely only on the original document base URI>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401945857> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-401945857"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401945857> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401945857> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401945857> <http://schema.org/startDate> "2018-07-02T21:38:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401945857> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401945857> <http://schema.org/description> "> TL;DR: My proposal is to start from scratch, ie, deprecating @graph and replacing the functionalities with something cleaner. \r\n\r\nWhat is the problem or documented author issue we are attempting to solve here? (You will see that I will repeat this question for every new feature/deprecation proposed for JSON-LD 1.1). :)\r\n\r\n@graph is something that was designed to be used in @contexts... now, some may be using it in JSON-LD markup, which is okay... but I hesitate to say that it's a best practice. We had originally designed @graph to hold data that is digitally signed and needed to exist in a separate graph from the signature. So, @graph was primarily designed so we can digitally sign information (and the most natural way to do that is to use datasets). @graph wasn't something that most developers/authors would be exposed to.\r\n\r\nI get the conceptual purity argument, but I haven't seen folks complaining about @graph. I fully admit that we may not have been exposed to those authors/developers... but again, I'd like to see them writing about this issue rather than deprecating a JSON-LD feature before seeing that data.\r\n\r\nalso,\r\n\r\n> I decided to start with some controversy:-)\r\n\r\n:laughing: -- nice to see that your sense of humor hasn't changed, @iherman." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401947581> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-401947581"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401947581> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401947581> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401947581> <http://schema.org/startDate> "2018-07-02T21:44:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401947581> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/401947581> <http://schema.org/description> "> in a format [JSON-LD] that is, at the end of the day, the serialization of RDF\r\n\r\nI know I'm sounding like a broken record at this point, but JSON-LD is not primarily a serialization of RDF. It's a graph-based syntax that just so happens to losslessly convert to and from RDF. I think people think I'm kidding when I say this, I'm only half-kidding... JSON-LD started off by attempting to create a new graph model syntax that Web developers would use... RDF compatibility was not as important to our organization as it was to the existing RDF community and it continues to not be a primary goal." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402012734> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402012734"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402012734> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402012734> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402012734> <http://schema.org/startDate> "2018-07-03T04:53:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402012734> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402012734> <http://schema.org/description> "@gkellogg not 100%...\r\n\r\nI tested in the dev. version of playground:\r\n\r\n```\r\n{\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"dataset\": {\"@id\": \"@graph\", \"@container\": [\"@graph\", \"@id\"]}\r\n  },\r\n  \"dataset\" : {\r\n    \"http://www.ex.org/1\" : {\r\n        \"@id\" : \"http://www.ivan-herman.net\",\r\n        \"http://a.b.c/1\" : \"Ivan Herman\"\r\n    },\r\n    \"http://www.ex.org/2\" : [\r\n        {\r\n         \"@id\" : \"http://p.q.r\",\r\n         \"http://a.b.c/2\" : \"Somebody else\"\r\n        },\r\n        {\r\n         \"@id\" : \"http://x.w.z\",\r\n         \"http://a.b.c/3\" : \"And somebody else again\"\r\n        }\r\n    ],\r\n    \"@none\" : [{\r\n        \"@id\" : \"http://www.w3.org\",\r\n        \"http://a.b.c/4\" : \"Nobody\"\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\nand what I got was:\r\n\r\n```\r\n<http://p.q.r> <http://a.b.c/2> \"Somebody else\" <http://www.ex.org/2> .\r\n<http://www.ivan-herman.net> <http://a.b.c/1> \"Ivan Herman\" <http://www.ex.org/1> .\r\n<http://x.w.z> <http://a.b.c/3> \"And somebody else again\" <http://www.ex.org/2> .\r\n<http://www.w3.org> <http://a.b.c/4> \"Nobody\" _:b0 .\r\n```\r\n\r\nNote the last line: I did not get statements in the default graph, but in yet another graph with a blank node as an id...\r\n\r\nBut yes, it is pretty close." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014316> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402014316"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014316> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014316> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014316> <http://schema.org/startDate> "2018-07-03T05:06:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014316> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014316> <http://schema.org/description> "@msporny\r\n\r\n> What is the problem or documented author issue we are attempting to solve here?\r\n\r\nIf I am the only one who is constantly confused on how to use the `@graph` term then I will of course shut up, and assign it to my own deficiencies. I would have no problem accepting that. But I do believe that the usage of `@graph` is confusing. As I tried to show that it confuses terms, imposes restrictions (like the usage of blank nodes in graph containers which generate RDF that would be unusable in SPARQL). Its current usage of representing bushes in JSON-LD is confusing, and it is not obvious (only via a conceptually complex trick) to represent elementary datasets. If the reader cannot gain a clear mental model of what is happening, then the only way of encoding data would be to make copy-paste from the examples without really understanding them, which is a problem (in my view).\r\n\r\nAbout the role of JSON-LD: history is what it is, but that is now bygone. JSON-LD has been \"marketed\", and I daresay extremely successfully so, as an RDF serialization format, too. This is what it has become today and used by various communities. We have to take this connection seriously and try to improve the purity of the relationship. Ie, if our syntax leads to a confusion of RDF Graphs and RDF Datasets I do see that as a problem." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014424> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402014424"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014424> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014424> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014424> <http://schema.org/startDate> "2018-07-03T05:06:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014424> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014424> <http://schema.org/description> "No, it’s not implemented in the spec just now, but would be a logical thing to do. Similar to adding ‘@container` on `@type` which is also considered elsewhere." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014541> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402014541"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014541> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014541> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014541> <http://schema.org/startDate> "2018-07-03T05:07:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014541> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014541> <http://schema.org/description> "@gkellogg \r\n\r\n> The graph container feature is required for Verifiable Credentials, and I suspect that @msporny and @dlongley would object to it's being removed.\r\n\r\nAs I said, I did not thought through how to include graph container feature, I was not saying that the _feature_ itself should be removed. Just its current syntax." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014704> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402014704"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014704> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014704> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014704> <http://schema.org/startDate> "2018-07-03T05:09:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014704> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402014704> <http://schema.org/description> "@gkellogg \r\n\r\nwhat about the separate proposal of represent bushes via a simple cross reference to contexts?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402052256> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402052256"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402052256> .
<https://api.github.com/users/ericprud> <http://schema.org/accountId> "ericprud" .
<https://api.github.com/users/ericprud> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/573478?v=4" .
<https://api.github.com/users/ericprud> <http://schema.org/url> "https://github.com/ericprud"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ericprud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402052256> <http://schema.org/creator> <https://api.github.com/users/ericprud> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402052256> <http://schema.org/startDate> "2018-07-03T08:14:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402052256> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402052256> <http://schema.org/description> "I understand Manu's (provocative) point about about JSON-LD being a graph language first and RDF-compatible second. I believe that the `@container: @graph` construct doesn't behave as one would expect in a graph language, i.e. that a property points at an non-rooted graph. For instance:\r\n```JSON\r\n{ \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"p1\": {\r\n      \"@id\": \"http://vocab.ex/p1\",\r\n      \"@container\": \"@graph\"\r\n    },\r\n    \"p2\": { \"@id\": \"http://vocab.ex/p2\" },\r\n    \"p3\": { \"@id\": \"http://vocab.ex/p3\" },\r\n    \"p4\": { \"@id\": \"http://vocab.ex/p4\" }\r\n  },\r\n  \"p1\": {\r\n    \"p2\": {\r\n      \"p3\": \"v3\",\r\n      \"p4\": \"v4\"\r\n    }\r\n  } }\r\n```\r\nemits the dataset:\r\n```Ruby\r\n_:b0 ex:p1 _:b1 .\r\nGRAPH _:b1 {\r\n  _:b2 ex:p2 _:b3  .\r\n  _:b3 ex:p3 \"v3\"  .\r\n  _:b3 ex:p4 \"v4\"  .\r\n}\r\n```\r\nNavigating in JSON-land, `<p1>` is strongly-connected to the object with a `<p2>` property (`_:b2`, in RDF land). If I'm navigating this as a graph (RDF graph, property graph, Spark's variant of Cypher, etc), `<p1>` connects to a bag of triples. The application has to be working with a known schema and valid data to discover `_:b2`.\r\n\r\nA solution that will be irksome to some and blindingly obvious to others is to give the subjects of the nested properties (i.e. `<p2>`) the same identity as that of the graph. In such a schema,\r\n```JSON\r\n  \"p1\": {\r\n    \"p2\": {\r\n      \"p3\": \"v3\"\r\n    },\r\n    \"p5\": \"v5\"\r\n```\r\nwould look like:\r\n```Ruby\r\n_:b0 ex:p1 _:b1 .\r\nGRAPH _:b1 {\r\n  _:b1 ex:p2 _:b2  .\r\n  _:b2 ex:p3 \"v3\"  .\r\n  _:b1 ex:p5 \"v5\"  .\r\n}\r\n```\r\nThis would eliminate a lot of fuzzy heuristics from query/update/validation." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402184630> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402184630"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402184630> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402184630> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402184630> <http://schema.org/startDate> "2018-07-03T14:50:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402184630> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402184630> <http://schema.org/description> "@ericprud looks like some wee typos in your last examples (i.e. what happened to `p5` and `v5`? and where did `p4` come from?). Could you fix those? Thanks!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402185914> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402185914"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402185914> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402185914> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402185914> <http://schema.org/startDate> "2018-07-03T14:54:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402185914> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402185914> <http://schema.org/description> "> We have to take this connection seriously and try to improve the purity of the relationship.\r\n\r\nWhile I do agree with @iherman about the importance of JSON-LD as a serialization of RDF, I'll also 👍 @msporny's statements that (even regardless of history), JSON-LD's appeal reaches farther than just \"RDF-land.\"\r\n\r\nIt may be a tricky balance to when addressing situations like this, but it's clear that \"confusion\" is subjective.\r\n\r\nI've no clear technical suggestions at this point, other than that we at least have more to clarify and exemplify (i.e. improve our examples) and would prefer we start there...and see what's still missing." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402192196> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402192196"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402192196> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402192196> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402192196> <http://schema.org/startDate> "2018-07-03T15:12:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402192196> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402192196> <http://schema.org/description> "@iherman while adding referencable contexts is feasible, I think it’s a big step, and I don’t think it’s necessary.\r\n\r\n@ericprud your thought about preserving the graph name as the implicit subject of triples in the referenced graph has merit, and does solve the nasty rooting problem.\r\n\r\n@msporny we settled on using the RDF model as the basis for JSON-LD not just to appease the RDF 1.1 WG, but because it didn’t make sense to introduce yet another model. I think it’s important that the JSON-LD surface syntax remain usable by developers that don’t care, but we need to make sure the underpinnings have a good basis in theory. Perhaps we can use JSON-LD to push forward on some emerging areas of interest, such as property graph alignment via RDF*." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402193414> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402193414"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402193414> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402193414> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402193414> <http://schema.org/startDate> "2018-07-03T15:15:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402193414> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402193414> <http://schema.org/description> "> @iherman while adding referencable contexts is feasible, I think it’s a big step, and I don’t think it’s necessary.\r\n\r\nBecause? I believe a proper and clean representation of bushes is very important and we do not have that (I do not consider the usage of `@graph` as \"clean\"...)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402205301> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402205301"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402205301> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402205301> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402205301> <http://schema.org/startDate> "2018-07-03T15:52:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402205301> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402205301> <http://schema.org/description> "> @msporny we settled on using the RDF model as the basis for JSON-LD not just to appease the RDF 1.1 WG, but because it didn’t make sense to introduce yet another model. \r\n\r\nWe *did* introduce another model:\r\n\r\nhttps://json-ld.org/spec/latest/json-ld/#data-model\r\n\r\nYes, it is compatible but the JSON-LD data model is a superset of the RDF data model. You can express things in JSON-LD that you cannot in RDF, that was a very intentional strategy. I suggest that we keep it that way to continue to push RDF 1.1 into the modern world. Native support for RDF lists, anyone? :)\r\n\r\nThat strategy pushed the RDF 1.1 WG to add a few important features (named graphs, some would argue dataset support). I'll note that the JSON-LD data model is an extension of the RDF data model because RDF 1.1 didn't adopt all of the JSON-LD data model features.\r\n\r\n> I think it’s important that the JSON-LD surface syntax remain usable by developers that don’t care, but we need to make sure the underpinnings have a good basis in theory. \r\n\r\n+1, as long as the realignment to theory doesn't deprecate features that are working just fine for the rest of us. It feels like this discussion is trying to fix a non-issue for JSON-LD authors. Yes, I readily admit that maybe the theoretical underpinnings aren't clean, but if you want something that's clean -- use TRiG. There are other languages that will give that to you. \r\n\r\nJSON-LD is meant to be an everyday developer/author tool... we don't need to expose every thing in RDF to those folks (and I'd argue that if we do, JSON-LD will eventually fail).\r\n\r\nThe primary design criteria for JSON-LD is to help developers build better systems... being theoretically clean is very far down the list of priorities... and I'm very concerned that if we focus too much on that, we will turn JSON-LD into something that has so many bells and whistles attached to it that it loses its value and we'll be forced to do a JSON-LD Lite just like we were forced to do that for RDFa.\r\n\r\n> Perhaps we can use JSON-LD to push forward on some emerging areas of interest, such as property graph alignment via RDF*.\r\n\r\nDo we have a list of features for JSON-LD 1.1 with priority based on group interest? Can we do some ranked choice voting on that so we don't spend a lot of time discussing changes to JSON-LD that are low priority?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402206590> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402206590"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402206590> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402206590> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402206590> <http://schema.org/startDate> "2018-07-03T15:56:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402206590> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402206590> <http://schema.org/description> "> Because? I believe a proper and clean representation of bushes is very important and we do not have that (I do not consider the usage of @graph as \"clean\"...)\r\n\r\nWhat use case is not possible because of this missing feature?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402208210> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402208210"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402208210> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402208210> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402208210> <http://schema.org/startDate> "2018-07-03T16:01:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402208210> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402208210> <http://schema.org/description> "Wow, this discussion goes a little bit out of hand. It was not my intention to start an RDF vs. non-RDF controversy. Can we avoid getting into this discussion? \r\n\r\n@msporny \r\n> What use case is not possible because of this missing feature?\r\n\r\nThe question is not whether something is not possible. Yes, it is possible to express a bush with `@graph`, and I did not say otherwise.  My claim is that it is complicated, way more complicated and counter-intuitive than necessary. The whole document is geared towards a special subset of graphs that are all rooted, but that is not the only use case out there.\r\n\r\nMy goal is to make JSON-LD easy to understand and use. In my experience, in the area of datasets and bushes, it is not. Obviously, you do not feel there is a problem with this. Let us try to pause here a bit, because whether it is easy or not is obviously a subjective statement; I would like to see the reactions of others in the group, that would begin to give a good sample.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402222123> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402222123"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402222123> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402222123> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402222123> <http://schema.org/startDate> "2018-07-03T16:48:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402222123> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402222123> <http://schema.org/description> "> Wow, this discussion goes a little bit out of hand. It was not my intention to start an RDF vs. non-RDF controversy. \r\n\r\nHey man, you're the one that wanted to be controversial. :stuck_out_tongue_winking_eye: " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402284680> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402284680"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402284680> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402284680> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402284680> <http://schema.org/startDate> "2018-07-03T20:35:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402284680> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402284680> <http://schema.org/description> "@iherman if you just want a bush, isn't this sufficient:\r\n```json\r\n[\r\n  {\"@context\": \"http://schema.org/\", \"name\": \"Ivan\"},\r\n  {\"@context\": \"http://example.com/schema\", \"name\": \"Pluto\"}\r\n]\r\n```\r\n...or if you want a default `@context` value, you'd reshape it this way (as I'm sure you know):\r\n```json\r\n{\r\n  \"@context\": \"http://schema.org/\",\r\n  \"@graph\": [\r\n    {\"@context\": \"http://schema.org/\", \"name\": \"Ivan\"},\r\n    {\"@context\": \"http://example.com/schema\", \"name\": \"Pluto\"}\r\n  ]\r\n}\r\n```\r\n\r\nI've not been tripped up by that, conceptually. And even giving that last example an `@id` and/or other top-level properties has all made sense to me (for what little that's worth). I do, however, get a bit tangled up by the new `\"@container\": \"@graph\"` + `@none` (for statements about the \"named graph\" itself). That's likely a separate issue?\r\n\r\nOverall, maybe there's a way we can narrow in on the exact concerns? The wiki page was great for an overview, but I guess I didn't find the solution(s) any clearer than the present approach." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402313444> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402313444"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402313444> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402313444> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402313444> <http://schema.org/startDate> "2018-07-03T22:47:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402313444> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402313444> <http://schema.org/description> "@iherman Looking at your \"addressable context\" mechanism from the wiki:\r\n\r\n```json\r\n[\r\n   {\r\n       \"@context\" : {\r\n           \"@id\" : \"_:a\"\r\n           ...\r\n       }\r\n   },\r\n   {\r\n     \"@context\" : \"_:a\",\r\n     \"@id\" : \"http://www.example.org/1\",\r\n     \"http://a.b.c\" : \"something\"\r\n   },{\r\n     \"@context\" : \"_:a\",\r\n     \"@id\" : \"http://www.example.org/2\",\r\n     \"http://d.e.f\" : \"something\"\r\n   }\r\n]\r\n```\r\n\r\nMy concern here is that this implies that a context with `\"@id\": \"http://example/ctx\"` would be the same as a context loaded from \"http://example/ctx\". This may be the case, but nowhere else in JSON-LD is the assumption that loading a document from a location implies that the document has an `@id` that's the same as that location, unless it has `\"@id\": \"\"`. This would seem to be creating a precedent for contexts.\r\n\r\nMoreover, what if you had a remote context at \"http://example.org/foo\", which looked like the following:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@id\": \"http://example.org/bar\",\r\n     ...\r\n  }\r\n}\r\n```\r\n\r\nWhat is the address of this context, \"http://example.org/foo\", or \"http://example.org/bar\"? Right now, if I use \"@context\": \"http://schema.org\", I either load it, or use the version already loaded from that address.\r\n\r\nIn short, I think that this raises some issues that may muddy the waters, all to \"clean up\" the use of `@graph` for describing a bush, which is well established practice by now." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402365662> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402365662"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402365662> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402365662> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402365662> <http://schema.org/startDate> "2018-07-04T05:16:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402365662> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402365662> <http://schema.org/description> "@gkellogg yes, I find your argument compelling indeed. It may require a specific addressing mechanism, orthogonal to `@id` which, I admit, is not nice either." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366280> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402366280"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366280> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366280> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366280> <http://schema.org/startDate> "2018-07-04T05:21:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366280> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366280> <http://schema.org/description> "@BigBlueHat and others: it seems that I am getting to the minority with my uneasiness. The fact that the same keyword (`@graph`) is used both for a bush _and_ for datasets extremely confusing and \"dirty\", but I obviously won't lie down the road if I am the only one." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366620> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402366620"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366620> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366620> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366620> <http://schema.org/startDate> "2018-07-04T05:24:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366620> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402366620> <http://schema.org/description> "One positive thing that may have come out of this discussion: https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-401941284 shows a way to produce very cleanly a _dataset_, _provided that `@none` works_. Personally, I would prefer to have `@dataset` as a standard, but it may be considered as a standard idiom by users..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402420886> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-402420886"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402420886> .
<https://api.github.com/users/ericprud> <http://schema.org/accountId> "ericprud" .
<https://api.github.com/users/ericprud> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/573478?v=4" .
<https://api.github.com/users/ericprud> <http://schema.org/url> "https://github.com/ericprud"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ericprud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402420886> <http://schema.org/creator> <https://api.github.com/users/ericprud> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402420886> <http://schema.org/startDate> "2018-07-04T09:25:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402420886> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/402420886> <http://schema.org/description> "I believe that @iherman's proposal to distinguish datasets with `@dataset` has low cost and good value: \r\n1. The most compelling JSON-LD use cases demand **dual access** (JSON tree and RDF graph navigation). I'd estimate this at 90% of JSON-LD's value, though in my experience it's been closer to 100%.\r\n2. Some folks exchange non-framed JSON-LD but their use of it is as a commodity serialization. The group most affected is a smallish set of engineers writing serializers and parsers.\r\n\r\nFor the most part, non-expert human eyes rarely fall on non-framed JSON-LD with keywords like `@graph` and `@dataset`. For those folks (let's call them experts-to-be), a clear model which distinguishes graphs from datasets is of greater value than the adoption of the legacy keyword `@graph` to mean a dataset." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403038599> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-403038599"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403038599> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403038599> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403038599> <http://schema.org/startDate> "2018-07-06T13:44:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403038599> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403038599> <http://schema.org/description> "I'm not sure the introduction of another keyword makes any of this any clearer...and doing so would certainly raise the \"expert\" bar a bit by requiring an understanding of the differences between a Named Graph and a Dataset--which seems to be unclear to (or at least debated by) the people defining the terminology--see https://www.w3.org/TR/rdf11-datasets/ linked earlier.\r\n\r\nFrom that Note:\r\n> Defining the semantics of RDF datasets requires an understanding of the two following issues:\r\n>   *  what the graph names (IRI or blank node) denote, or what are the constraints on what the names can possibly denote;\r\n>   *    how the triples in the named graph influence the meaning of the dataset.\r\n>\r\n> ...\r\n> Depending on the assumptions taken with respect to these two issues, the formalization of the semantics of RDF datasets can vary very much.\r\n\r\nPerhaps it would be helpful if someone (who cares deeply about this issue) were to go through the list of interpretations represented in that Note and present the various JSON-LD expressions for each +/- any confusion they think is represented by the current expression options and/or proposals to fix them.\r\n\r\nThat would help me at least, and perhaps at least narrow the discussions here a bit more." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403063804> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-403063804"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403063804> .
<https://api.github.com/users/akuckartz> <http://schema.org/accountId> "akuckartz" .
<https://api.github.com/users/akuckartz> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/327651?v=4" .
<https://api.github.com/users/akuckartz> <http://schema.org/url> "https://github.com/akuckartz"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/akuckartz> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403063804> <http://schema.org/creator> <https://api.github.com/users/akuckartz> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403063804> <http://schema.org/startDate> "2018-07-06T15:15:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403063804> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403063804> <http://schema.org/description> "Maybe something like the https://modernizr.com feature detection can be used to \"detect\" JSON-LD features?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403074904> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-403074904"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403074904> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403074904> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403074904> <http://schema.org/startDate> "2018-07-06T15:57:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403074904> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403074904> <http://schema.org/description> "IMHO, creating separate features, in most cases, is a reduces interoperability. There may be some narrow cases where the producer and consumer can agree on certain outside the norm features, but that's not how JSON-LD is typically used these days.\r\n\r\nI think the 30-some \"features\" can be grouped into categories that make it look less complex. For example, several features have to do with using objects to map data (language-maps, data-maps, graph-maps, id-maps, type-maps). In reality, there is a single feature to allow data to be mapped, which is supported orthogonally across different types of things. The spec needs an update to put things into such groupings to create a more uniform flow to the document.\r\n\r\nOne thing we could consider would be to create a separate Dataset spec, and allow the main spec to focus on creating data in a single graph. That would reduce complexity for most users, and allow some of the newer features to be moved into that spec." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403075367> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-403075367"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403075367> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403075367> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403075367> <http://schema.org/startDate> "2018-07-06T15:59:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403075367> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403075367> <http://schema.org/description> "I like your last proposal, ie, separate dataset spec:-)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403210291> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-403210291"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403210291> .
<https://api.github.com/users/ericprud> <http://schema.org/accountId> "ericprud" .
<https://api.github.com/users/ericprud> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/573478?v=4" .
<https://api.github.com/users/ericprud> <http://schema.org/url> "https://github.com/ericprud"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ericprud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403210291> <http://schema.org/creator> <https://api.github.com/users/ericprud> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403210291> <http://schema.org/startDate> "2018-07-07T11:50:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403210291> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403210291> <http://schema.org/description> "+1 to @gkellogg. Frequently, new standards have to low-ball the barrier to entry. If it seems like a lot of effort, folks won't bother, even if they will, in the long run, expend more effort reinventing the functionality. Once established, the rules change; potential users are already convinced that it's worth investing some tutorial time and you already have a committed implementer base. At that point, the cost of spotty implementation of features exceeds the cost of comprehensive implementation burden. I take as evidence, SOAP, WSDL, HTTP 1.1, every successive version of HTML. XML editions didn't add features but no one wanted them.\r\n\r\nSOAP, 1.0 is a bit of a counter  example in that SOAP encoding didn't have uptake and didn't make it into 1.1. On the other hand, there aren't a lot of proposed JSON-LD 1.1 features that could be implemented as a separate pre- or post-processing step.\r\n\r\nI'd leave it to the editors to decide if Dataset could/should be a separate spec. It's kind of nice for readers to have a topic-oriented document or section, but not if it has to poke its fingers into much of the base  spec." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403296655> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-403296655"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403296655> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403296655> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403296655> <http://schema.org/startDate> "2018-07-08T15:47:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403296655> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403296655> <http://schema.org/description> "> IMHO, creating separate features, in most cases, reduces interoperability.\r\n\r\nI agree that creating separate features with no plan on how they get integrated into the main language reduces interop.\r\n\r\nHowever, having a plan on how you fold new experimental features into the core of a language mitigates that issue in the long-term. We should be thinking long-term.\r\n\r\nFor example, @akuckartz's example of Modernizr is exactly what I'm talking about. Can we get to a place where we enable folks to polyfill JSON-LD without breaking existing deployed JSON-LD with experimental features until it becomes clear that many people are using those features? Can we relegate those features to /outside/ of the core specification?\r\n\r\nIf we don't do that, I have a feeling that we're going to spend a non-trivial amount of time doing what most WGs do during a 2nd iteration of a spec - arguing over whether or not to add features to the core language and making a few bad calls on BLINK-tag like features.\r\n\r\nWe need a strategy to polyfill JSON-LD until the usefulness of features are backed by data instead of a very small group of intelligent and opinionated individuals deciding a features future usefulness based on a very small sample size. It's not how science should be done. :)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403467722> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-403467722"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403467722> .
<https://api.github.com/users/Fak3> <http://schema.org/accountId> "Fak3" .
<https://api.github.com/users/Fak3> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/991641?v=4" .
<https://api.github.com/users/Fak3> <http://schema.org/url> "https://github.com/Fak3"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Fak3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403467722> <http://schema.org/creator> <https://api.github.com/users/Fak3> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403467722> <http://schema.org/startDate> "2018-07-09T12:51:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403467722> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403467722> <http://schema.org/description> "refs https://github.com/json-ld/json-ld.org/issues/52" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403874626> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-403874626"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403874626> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403874626> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403874626> <http://schema.org/startDate> "2018-07-10T15:56:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403874626> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403874626> <http://schema.org/description> "You are basically proposing a means of inserting data from the context into the JSON-LD document. This was considered in json-ld/json-ld.org#426 using an `@content` to a term definition; as this is pretty far outside the scope of what the context is intended for, it was ultimately dropped.\r\n\r\nThe problem with re-interpreting `@type` in a content definition is that it is also used for matching value objects having that datatype, and there is really no way to know how it is intended to be used differently for a node object." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403875383> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-403875383"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403875383> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403875383> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403875383> <http://schema.org/startDate> "2018-07-10T15:58:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403875383> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403875383> <http://schema.org/description> "We have become more prescriptive about what can be in a context, but could consider issuing warnings for non-keyword-like keys (e.g., \"uom\" in your example) and issue a warning. It might be better to tackle this with a new keyword, such as `@comment`, which would be explicitly allowed and content ignored." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403926917> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/3#issuecomment-403926917"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403926917> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403926917> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403926917> <http://schema.org/startDate> "2018-07-10T18:45:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403926917> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403926917> <http://schema.org/description> "+1 to closing. At best it's a bikeshed issue, at worst it's an unnecessary incompatibility for systems that implement the draft spec. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927121> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/5#issuecomment-403927121"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927121> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927121> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927121> <http://schema.org/startDate> "2018-07-10T18:46:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927121> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927121> <http://schema.org/description> "+1 to closing. Agree with @gkellogg that the sugar is unnecessary." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927363> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/6#issuecomment-403927363"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927363> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927363> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927363> <http://schema.org/startDate> "2018-07-10T18:47:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927363> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927363> <http://schema.org/description> "+1 to closing. The rdf:type / @type issue is bad enough, no need to propagate @ symbols unnecessarily." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927912> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-403927912"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927912> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927912> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927912> <http://schema.org/startDate> "2018-07-10T18:49:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927912> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403927912> <http://schema.org/description> "+1 to the issue, we should discuss the proposed solution." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403929940> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-403929940"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403929940> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403929940> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403929940> <http://schema.org/startDate> "2018-07-10T18:56:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403929940> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403929940> <http://schema.org/description> "\r\nI think the question to be answered for this issue is what features are needed, and what affordances in the *syntax* are then required to make those features possible.  All of the suggested patterns in the original issue work out of the box, as the context IRI is not required to be HTTP/S. \r\n\r\n> If the node object contains the @context key, its value must be null, an absolute IRI, a relative IRI, a context definition, or an array composed of any of these.\r\n\r\nSub-resource integrity is an interesting proposition, as would metadata for the context to declare it \"frozen\", which seems related to #20.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403930269> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/10#issuecomment-403930269"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403930269> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403930269> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403930269> <http://schema.org/startDate> "2018-07-10T18:57:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403930269> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403930269> <http://schema.org/description> "Yup, agree with closing. Charter is pretty clear on backwards compatibility." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949698> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-403949698"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949698> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949698> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949698> <http://schema.org/startDate> "2018-07-10T20:08:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949698> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949698> <http://schema.org/description> "Do we have a use case for this? The language case was solved with `@none`, is there any other situation when this would add value?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949984> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/13#issuecomment-403949984"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949984> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949984> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949984> <http://schema.org/startDate> "2018-07-10T20:09:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949984> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403949984> <http://schema.org/description> "This is now Door-Opened-By #11, and they should be discussed together, after the general principle of whether RDF is the data model or not." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403950111> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/14#issuecomment-403950111"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403950111> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403950111> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403950111> <http://schema.org/startDate> "2018-07-10T20:10:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403950111> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403950111> <http://schema.org/description> "+1 to closing." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403954579> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-403954579"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403954579> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403954579> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403954579> <http://schema.org/startDate> "2018-07-10T20:26:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403954579> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403954579> <http://schema.org/description> "There is a technical difference between IRIs and URIs. In particular, consider this comment: https://github.com/w3c/web-annotation/issues/183#issuecomment-198304922\r\n\r\nThe processing model changes to some degree, so we should be careful not to invalidate 1.0 documents unintentionally.\r\n " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956182> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-403956182"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956182> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956182> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956182> <http://schema.org/startDate> "2018-07-10T20:32:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956182> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956182> <http://schema.org/description> "There is an editorial note here that \"type coercion\" language in the spec is not actually what people consider as type coercion in programming. We might forestall some of these issues by changing the description of the feature.\r\n\r\nAnd otherwise, +1 to close wontfix." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956765> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-403956765"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956765> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956765> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956765> <http://schema.org/startDate> "2018-07-10T20:34:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956765> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403956765> <http://schema.org/description> "`@comment` only in contexts? Otherwise we should add it to the round tripping discussion." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962141> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-403962141"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962141> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962141> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962141> <http://schema.org/startDate> "2018-07-10T20:53:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962141> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962141> <http://schema.org/description> "The `uom` (Unit of Measure) thing is interesting, but I'm not sure the context is the best place for that--as it seems data related--i.e. you'd want this in the output graph somewhere.\r\n\r\nPerhaps something like https://schema.org/QuantitativeValue (or similar) would be useful here?\r\n```json\r\n{\r\n  \"hoehe\": {\r\n    \"@type\": \"schema:QualitativeValue\",\r\n    \"value\": 6,\r\n    \"unitText\": \"m\"\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962908> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-403962908"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962908> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962908> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962908> <http://schema.org/startDate> "2018-07-10T20:55:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962908> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/403962908> <http://schema.org/description> "Related to #31 in terms of context adding actual data, which is currently out of scope (and I feel should remain out of scope)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404507019> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-404507019"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404507019> .
<https://api.github.com/users/jechterhoff> <http://schema.org/accountId> "jechterhoff" .
<https://api.github.com/users/jechterhoff> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/4831647?v=4" .
<https://api.github.com/users/jechterhoff> <http://schema.org/url> "https://github.com/jechterhoff"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/jechterhoff> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404507019> <http://schema.org/creator> <https://api.github.com/users/jechterhoff> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404507019> <http://schema.org/startDate> "2018-07-12T13:11:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404507019> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404507019> <http://schema.org/description> "Thank you all for your responses and comments so far.\r\n\r\nHaving @comment as new keyword would be very useful, I think. In my example, it could replace @derivedBy. In my opinion, it would be useful to allow @comment on any level of nesting within a JSON-LD context.\r\n\r\nRegarding the \"uom\" from the example: My use case is to semantically enable JSON data, by adding an external JSON-LD context document as described in [section \"JSON data as JSON-LD\" from the JSON-LD final community group report](https://www.w3.org/2018/jsonld-cg-reports/json-ld/#interpreting-json-as-json-ld). I do not intend to add any actual data to the JSON data through the JSON-LD context. That might cause issues with digital signatures of the data. \r\n\r\nThe idea of having the \"uom\" within the definition of term \"hoehe\" in the example was to allow any applications that process the context to use the information of this application specific metadata to correctly interpret the height value - without requiring the actual data to contain the unit of measure. However, \"uom\" is just an example. I was thinking that a term definition could contain any non-keyword-like keys which might be useful for a specific application or community. An application that parses the context should simply ignore such keys when they are encountered in a term definition and are unknown to the application. The JSON-LD playground could issue a warning when it finds such keys, to emphasize what is currently defined by the standard: that an expanded term definition should not contain any keys other than the keywords defined by the standard. However, when application specific extensions of term definitions are not explicitly forbidden, then the note in the standard could actually be changed to:\r\n\r\n> An expanded term definition MUST be a JSON object composed of zero or more keys from @id, @reverse, @type, @language, @context, @Prefix, or @container. The object MAY contain non-keyword-like keys. Each non-keyword-like key that is unknown to an application that processes the term definition MUST be ignored. The application MAY issue a warning if such a key is encountered." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404676388> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-404676388"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404676388> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404676388> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404676388> <http://schema.org/startDate> "2018-07-12T22:58:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404676388> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/404676388> <http://schema.org/description> "> There is an editorial note here that \"type coercion\" language in the spec is not actually what people consider as type coercion in programming. We might forestall some of these issues by changing the description of the feature.\r\n\r\nIMO, \"type coercion\" is correct, as it allows an integer `1` to be coerced to a float using `\"@type\": \"xsd:float\"`. What it does not do is allow node objects to be \"coerced\" to some specific rdf:type, which seems to catch people up. In what sense is this not what type coercion in programming relates to? Without the ability to assign to typed variables, I'm not sure how else you might affect coercion. Do you have alternate wording in mind?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406179436> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-406179436"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406179436> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406179436> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406179436> <http://schema.org/startDate> "2018-07-19T07:19:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406179436> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406179436> <http://schema.org/description> "There is also a slippery slope here, insofar as this simply duplicates an RDFS feature; after all, this type of deduction is _exactly_ what `rdfs:range` is for: deducing the type of an object based on the property. Do we really want to open this can of worms? (Why would we stop here, why not going all the way and introduce things for domains, for example...) This would certainly not be a 1.1 change...\r\n\r\nI propose to close with wontfix." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406181962> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-406181962"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406181962> .
<https://api.github.com/users/lukasheinrich> <http://schema.org/accountId> "lukasheinrich" .
<https://api.github.com/users/lukasheinrich> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2318083?v=4" .
<https://api.github.com/users/lukasheinrich> <http://schema.org/url> "https://github.com/lukasheinrich"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lukasheinrich> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406181962> <http://schema.org/creator> <https://api.github.com/users/lukasheinrich> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406181962> <http://schema.org/startDate> "2018-07-19T07:29:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406181962> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406181962> <http://schema.org/description> "so what is the proposed way to process a object without type information? I guess the RDF way would be to use either RDFS or OWL to reason about the graph and infer the new triple `<node-uri> <type> <type-uri>` but that seems a bit heavy-handed (and somewhat far removed from general users, who JSON-LD tries to reach). I agree adding the possibility of adding generic triples `@content` might be tricky, but for things like indices JSON-LD already inserts data into the expanded object (i.e. `@index`)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406340249> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-406340249"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406340249> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406340249> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406340249> <http://schema.org/startDate> "2018-07-19T16:39:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406340249> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406340249> <http://schema.org/description> "@iherman this is simply a 1.0 feature that allows would would have been something like `^^xsd:dateTime` in Turtle, to be placed in the term definition in a JSON-LD context. This allows a term such as `date` to take a string value, which would expand to a value object containing an appropriate `@type`.\r\n\r\nThe \"fix\" which is asked for is to simply ensure that other places that make use of this feature reference the appropriate definition.\r\n\r\nIf you find the \"type coercion\" terminology from 1.0 confusing, we could propose renaming it." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406542930> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-406542930"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406542930> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406542930> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406542930> <http://schema.org/startDate> "2018-07-20T09:24:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406542930> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406542930> <http://schema.org/description> "@gkellogg \r\n\r\n> @iherman this is simply a 1.0 feature that allows would would have been something like ^^xsd:dateTime in Turtle, to be placed in the term definition in a JSON-LD context. \r\n\r\nYeah. I now realize (I forgot) that JSON-LD, sort of, mashes up two notions: an RDF _datatype_ and the type in the sense of belonging to an RDF Class. I may not like this, but that is water under the bridge now, I guess... However, I do accept that, in this sense, the original proposal is just a logical extension of a possibility that is already there.\r\n\r\nI indeed find the \"type coercion\" terminology confusing indeed. Whilst it makes some sense for a datatype, it is really not appropriate when I think of it as an object belonging to a class. I am not sure what to replace it; something around a neutral terminology like \"setting the type\" is probably better if it fits, editorially, to the context." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406646748> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-406646748"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406646748> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406646748> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406646748> <http://schema.org/startDate> "2018-07-20T16:05:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406646748> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406646748> <http://schema.org/description> "Six kinds of +1. In the field this issue comes up for me at least every three months or so! :grin: The potential for DOS is real, but the need is pressing." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406653818> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-406653818"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406653818> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406653818> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406653818> <http://schema.org/startDate> "2018-07-20T16:30:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406653818> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406653818> <http://schema.org/description> "@gkellogg This seems reasonable and useful to me. \r\n\r\nWould sealing be a context-level-only feature? IOW, do you propose allowing some terms in a context to be sealed but not others?\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406695401> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-406695401"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406695401> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406695401> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406695401> <http://schema.org/startDate> "2018-07-20T18:52:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406695401> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406695401> <http://schema.org/description> "I like this idea of incremental feature support and transitioning features from \"polyfills\" to specs. I'm not sure on the specific details for how we should do this, but the proposed concept is essentially the same as what the major Web browsers do and it works for them." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406849188> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-406849188"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406849188> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406849188> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406849188> <http://schema.org/startDate> "2018-07-22T08:14:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406849188> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/406849188> <http://schema.org/description> "@gkellogg,\r\n\r\nin some sense, this is not our problem:-) If what we say is that the `base` as valid for the `<script>` element, is the default base for the JSON-LD, we are fine. Whatever confusion exists (like the usage of `xml:base` is not really our problem.  In most of the cases that will be the document base, so I do not see that as a problem in practice.\r\n\r\nThere is a similar question, b.t.w., which did come up lately at the Publication WG: what about the possible `lang` setting in the document node hierarchy down to the `script` element itself? Should we consider that as the default language of the JSON-LD textual data?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/407929484> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/36#issuecomment-407929484"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/407929484> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/407929484> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/407929484> <http://schema.org/startDate> "2018-07-25T23:36:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/407929484> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/407929484> <http://schema.org/description> "I'm actively working on tests and algorithms to support this now; compaction and expansion are reasonably easy. A review of Flattening shows some errors in that algorithm, and potentially missing tests. Biggest changes will be to the FromRDF algorithm, as the list support there is complicated already." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408478120> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/11#issuecomment-408478120"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408478120> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408478120> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408478120> <http://schema.org/startDate> "2018-07-27T16:56:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408478120> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408478120> <http://schema.org/description> "As the one who raised this: I am in favour of closing this." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408998761> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/31#issuecomment-408998761"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/31> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408998761> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408998761> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408998761> <http://schema.org/startDate> "2018-07-30T20:27:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408998761> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408998761> <http://schema.org/description> "Closing, won't fix. \r\nRationale: Contexts must not add additional triples to the data.\r\n\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-1" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999053> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/14#issuecomment-408999053"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/14> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999053> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999053> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999053> <http://schema.org/startDate> "2018-07-30T20:28:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999053> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999053> <http://schema.org/description> "Closing wontfix. Rationale: Isn't part of the RDF data model, and does not add value.\r\n\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-2 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999306> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/10#issuecomment-408999306"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/10> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999306> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999306> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999306> <http://schema.org/startDate> "2018-07-30T20:29:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999306> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999306> <http://schema.org/description> "Closing, won't fix. Rationale: We're not chartered to make breaking changes.\r\n\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-3" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999475> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/6#issuecomment-408999475"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/6> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999475> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999475> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999475> <http://schema.org/startDate> "2018-07-30T20:29:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999475> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999475> <http://schema.org/description> "Closing, won't fix.  Rationale: Unnecessary syntactic sugar.\r\n\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-4" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999682> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/5#issuecomment-408999682"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/5> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999682> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999682> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999682> <http://schema.org/startDate> "2018-07-30T20:30:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999682> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999682> <http://schema.org/description> "Closing, won't fix. Rationale: Unnecessary syntactic sugar.\r\n\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-5" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999935> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/3#issuecomment-408999935"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/3> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999935> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999935> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999935> <http://schema.org/startDate> "2018-07-30T20:31:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999935> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/408999935> <http://schema.org/description> "Closing, won't fix, but without prejudice if someone comes up with a significantly better name.\r\nRationale: Unnecessary bikeshedding.\r\n\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#section2-6\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409001762> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409001762"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409001762> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409001762> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409001762> <http://schema.org/startDate> "2018-07-30T20:37:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409001762> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409001762> <http://schema.org/description> "Part of the way towards consensus about this issue, is the [resolution](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#resolution8) not to add comment type data into graph instance data.\r\n\r\nThe remaining discussion is whether or not to allow comments in contexts and frames.  Allowing comments in context data would allow embedded micro-contexts within instance data that contained only a comment (c.f. `@language` rationale in #5).\r\n\r\nWG members with opinions are to add their proposal and rationales to the issue before the call on 2018-08-03." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409007771> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409007771"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409007771> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409007771> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409007771> <http://schema.org/startDate> "2018-07-30T20:57:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409007771> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409007771> <http://schema.org/description> "-1 to adding @comment. \r\n\r\nI get the use case, but adding a new JSON-LD keyword such as  this, while easy from an implementer perspective creates added cognitive burden for authors and potentially problematic outcomes (your comment moves to a place you didn't intend it to move to). There is yet another keyword that they have to know. \r\n\r\nComments should be in Vocabulary documents and other human-readable documents. JSON-LD Context files and documents are not intended to be human-readable... especially since we can't place @comment by the item that was originally intended due to not being able to control where it ends up when the JSON object is reserialized." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409014209> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409014209"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409014209> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409014209> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409014209> <http://schema.org/startDate> "2018-07-30T21:19:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409014209> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409014209> <http://schema.org/description> "\r\nI am +1 to adding `@comment` as a reserved keyword, valid in the scope of contexts only. The value of `@comment` could be any valid JSON construction, and JSON-LD processors MUST ignore the value.\r\n\r\nRationale:\r\n * All (?) other RDF serializations have syntax level commenting. JSON does not have syntax level commenting, requiring any data not intended for machine processing to be embedded within the same representation in \"magic\" fields such as `@comment`. We control the schema for contexts and frames, and thus we are the correct authority to determine where such commentary could be included. This would be bringing JSON-LD up to parity with the functionality of other syntaxes.\r\n* It gives a consistent place to put comments intended for humans looking at the data, such that they are better able to understand the intent or usage.  \r\n* It gives a consistent place to put metadata about the document, such as creator and date of last modification.\r\n* It gives a consistent place to put out of band information that is guaranteed not to cause an error or collide with other context-defined mappings. For example, when exporting data from a system, it is useful to include internal metadata not intended for JSON-LD processors  but instead for other components in that pipeline. In a generic pipeline, there would be no guarantee that the key chosen did not collide with context-defined mappings. That pipeline might span across systems.\r\n\r\nI disagree with @msporny that this adds a significant burden for developers:\r\n * It is intended to make it easier for developers to understand the data\r\n * It is (I think) self-evident as to its intent ... more so than some existing keyword usage (e.g. the confusion caused by overloading of `@type` for both datatype and class experienced by many members of the WG, per the previous call)\r\n * It would be optional. If the audience of a particular context is solely machines, and no human ever needs to develop using the serialization, then don't put in comments. This is not true for many communities, however, and it would be better to have consistency than all of them using different hacks to work around the syntax level lack of functionality.\r\n * Unless the comment is intended to be associated with a literal, it can always be within the JSON object, and thus be serialized with it. \r\n\r\nI also try to address some arguments against:\r\n * It doesn't survive round-tripping through other RDF syntaxes, when put into the @context of a node within an instance -- Yes, that's intentional not a bug :) If you need something like that, then put it in the data. \r\n * JSON shouldn't have comments -- Yet everyone asks for them, and uses them in other machine readable syntaxes. \r\n * Just put it in the body of the context document -- this works for context documents, but there is the convention of putting the ontology within the body, meaning that the data might collide. Also, it would mean mapping into RDF in order to put arbitrary structure into the data, and defining those terms in the context.\r\n* Just put it in external documentation -- this is a good computer science solution, but not a good practical one. In this case there is no link to the next level of abstraction from the context document found on the web to the documentation for that context.  That problem could be solved separately, but would not meet all of the use cases described above. \r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409019886> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409019886"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409019886> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409019886> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409019886> <http://schema.org/startDate> "2018-07-30T21:36:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409019886> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409019886> <http://schema.org/description> "Is there any serious effort currently afoot of which anyone knows to introduce a comment facility for JSON?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021073> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409021073"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021073> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021073> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021073> <http://schema.org/startDate> "2018-07-30T21:41:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021073> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021073> <http://schema.org/description> "> All (?) other RDF serializations have syntax level commenting. JSON does not have syntax level commenting, requiring any data not intended for machine processing to be embedded within the same representation in \"magic\" fields such as @comment. We control the schema for contexts and frames, and thus we are the correct authority to determine where such commentary could be included. This would be bringing JSON-LD up to parity with the functionality of other syntaxes.\r\n\r\nThe point is that the base syntax doesn't have comments. I'll note that JSON still doesn't have comments and developers that use it are just fine without them.\r\n\r\n> It gives a consistent place to put comments intended for humans looking at the data, such that they are better able to understand the intent or usage.\r\n\r\nNo, it's not consistent... @comment can find itself anywhere in the object it's included in and can only be used once per object. It doesn't work like a comment that most developers are familiar with (that is, something that sticks next to the code for which it was intended). This @comment can move around depending on the implementation that's reading it. So, calling it @comment is bad because it doesn't actually act like a comment that most developers are used to.\r\n\r\n> It gives a consistent place to put metadata about the document, such as creator and date of last modification.\r\n\r\nHow do you know it's metadata about the document instead of metadata about the field it is next to? Won't this just force people to create microsyntaxes for the comment like \"Author: J. Doe, Date: 2018-10-19\"?\r\n\r\n> It gives a consistent place to put out of band information that is guaranteed not to cause an error or collide with other context-defined mappings. For example, when exporting data from a system, it is useful to include internal metadata not intended for JSON-LD processors but instead for other components in that pipeline. In a generic pipeline, there would be no guarantee that the key chosen did not collide with context-defined mappings. That pipeline might span across systems.\r\n\r\nIf the metadata and pipeline spans across systems, it is no longer internal. JSON-LD *is* the mechanism that can be used for annotating system data. That said, if this is a use case, we should write it up and then see if this new mechanism is the best way to solve it.\r\n\r\nComments are supposed to be metadata that is out of band of the data structure. This suggests that we put something in band of the data structure that is metadata about the data structure. Feels like the wrong level of abstraction." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021851> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409021851"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021851> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021851> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021851> <http://schema.org/startDate> "2018-07-30T21:44:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021851> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409021851> <http://schema.org/description> "I think a better feature here would be explicit drop support for JSON-LD Processors... as in, you see these terms, drop them... This may be useful when we go to making JSON-LD Signatures throw errors for any unknown value... in some cases, people may not want to map the value, but rather drop the value.\r\n\r\nThat said, I hesitate to suggest that as a feature at this point in time. The only reason I'm doing it is that it would prevent the addition of \"@comment\" with a more useful feature that can be used for things that are more than just comments." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409025349> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409025349"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409025349> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409025349> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409025349> <http://schema.org/startDate> "2018-07-30T21:58:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409025349> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409025349> <http://schema.org/description> "\r\nI agree that developers get by without comments in JSON ... clearly. However that the stackoverflow question was asked 10 years ago, and continues to be active sends the signal to me that it's still of keen interest:  https://stackoverflow.com/questions/244777/can-comments-be-used-in-json \r\nViewed 1.5 million times, with thousands of up votes, suggests that it's desirable.\r\nThe top ranked workaround is, of course, to create `_comment` ... which is what we would be standardizing for JSON-LD contexts.\r\n\r\nBy consistent, I meant (consistently) that it would be the same across contexts. If we don't define it, then thousands of implementers will pick something different to use. I agree it's not consistent with other syntaxes commenting functionality, and that unordered keys makes the comment node unreliable in position.  Happy to call it `@ignored` or `@outofband` or anything else.\r\n\r\nThe pipeline use case came up [here](https://github.com/archesproject/arches/issues/3485#issuecomment-400806776) where the system needs additional information when processing the JSON-LD input to correctly manage it, due to internal-to-the-implementation limitations. I agree that it generates micro-syntaxes, but I would rather these meta- level microsyntaxes live somewhere that is trivial to ignore rather than having to determine if they're real syntax or serialization level annotations.\r\n\r\nI could also see the functionality being implemented with `@documentation` that takes a URI as value. Then humans can go and read the docs, and machines can do conneg to get something useful to them." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409033860> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409033860"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409033860> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409033860> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409033860> <http://schema.org/startDate> "2018-07-30T22:34:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409033860> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409033860> <http://schema.org/description> "Comments can also serve as extension points -- either explicit such as `appinfo` in XML Schema or by agreed-upon inner syntax, as exemplified by decorators in Java or quoted strings in python.  I wonder whether we couldn't kill both birds (keeping the namespace clean versions and allowing extensibility) by allowing any key starting with '@@'?\r\n\r\nOne might also note that YAML supports comments.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409034802> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409034802"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409034802> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409034802> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409034802> <http://schema.org/startDate> "2018-07-30T22:38:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409034802> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409034802> <http://schema.org/description> "+1 on azaroth42's suggestion on attaching a URI to documentation -- it would prevent micro-context collision." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091218> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409091218"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091218> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091218> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091218> <http://schema.org/startDate> "2018-07-31T04:31:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091218> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091218> <http://schema.org/description> "I continue to have negative feelings about comments in JSON-LD.\r\n\r\nComments in probably all other languages, including the RDF serialization syntaxes, are syntactically very different from the rest to avoid humans mixing them up with genuine language constructions. Hence the usage of characters like `#`, `/*`, etc. The proposal coming up here is to stay _within_ the framework of the JSON syntax, introduce a language construction for something that, for all goods and purposes, should _not_ be part of the language. I think that may become the source of lots of confusions and misunderstandings. \r\n\r\nThis issue is not \"ours\". It is up to the JSON community to solve. After all, we did not invent our own syntax for JSON-LD; we piggybacked it instead on top of an existing syntax. We have to live with the consequences of that; after all, missing comments are not the only nuisances of JSON (anyone else every forgot to remove a trailing `,` in an array?).\r\n\r\nI am also a bit averse to have such a difference in the syntax used for `@context` and for the rest of the data. That may become an extra source of confusion. We do have a resolution (that I agree with) not to introduce a specific comment syntax for data; I do not see a reason to allow this for contexts.\r\n\r\nBottom line: -1 for me on this issue." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091242> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409091242"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091242> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091242> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091242> <http://schema.org/startDate> "2018-07-31T04:31:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091242> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409091242> <http://schema.org/description> "\r\n > One might also note that YAML supports comments.\r\n\r\n... and JSON-LD, per our charter, should be automatically available for YAML as well. Maybe we should consider whether JSON-LD processors would accept YAML surface syntax as well, so that people could write context files using YAML... (no, I am not really serious with that idea).\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409111427> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409111427"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409111427> .
<https://api.github.com/users/goofballLogic> <http://schema.org/accountId> "goofballLogic" .
<https://api.github.com/users/goofballLogic> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/910448?v=4" .
<https://api.github.com/users/goofballLogic> <http://schema.org/url> "https://github.com/goofballLogic"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/goofballLogic> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409111427> <http://schema.org/creator> <https://api.github.com/users/goofballLogic> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409111427> <http://schema.org/startDate> "2018-07-31T06:36:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409111427> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409111427> <http://schema.org/description> "-1\r\n\r\nWe need comments, but this is a JSON problem which we shouldn't attempt to solve with a JSON-LD hack.\r\n\r\nI'd be happier with some other keyword indicating a description because developers may wrongly assume (or may wish) that @comment has no meaning to plain-JSON processors" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409214180> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409214180"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409214180> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409214180> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409214180> <http://schema.org/startDate> "2018-07-31T13:07:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409214180> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409214180> <http://schema.org/description> "> If we don't define it, then thousands of implementers will pick something different to use.\r\n\r\nWe've had many years of JSON-LD so far... how many developers are dumping comments into their JSON-LD? \r\n\r\nIf this is a problem, we should see many attempts at a workaround by this point. We should have some data to back up the need for this feature. It's too easy to add features because a very tiny group of people (the JSON-LD WG members) think it might be useful." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409424783> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409424783"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409424783> .
<https://api.github.com/users/mixterj> <http://schema.org/accountId> "mixterj" .
<https://api.github.com/users/mixterj> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/6155034?v=4" .
<https://api.github.com/users/mixterj> <http://schema.org/url> "https://github.com/mixterj"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/mixterj> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409424783> <http://schema.org/creator> <https://api.github.com/users/mixterj> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409424783> <http://schema.org/startDate> "2018-08-01T02:04:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409424783> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409424783> <http://schema.org/description> "-1 until there is a more strict scoping of this issue. The initial example seems to suggest that the unit of measure was intended for someone or something to be able to process the JSON and derive context for the measurement - that it was in Meters. That is very different than simple adding a comment for comments sake like \"I have no idea why there are so many curly braces here\". To @azaroth42 point about other RDF Syntaxes allowing for comments - this is true but they are only ever intended for human reading. JSON is not typically a human consumed data format so I do not see what comments would be necessary - unlike in Turtle where you might be reading through it like a document. The issue for me comes down to -  is this important for JSON processing or RDF processing (from JSON-ld). If it is the former than I think it is out of scope due to the points made by @iherman and @msporny. But if it is the latter than I am more willing to consider it but would still have strong reservations based on the popular tendency to process JSON-ld strictly as JSON and not as RDF.\r\n\r\n@azaroth42 if there is a use case for something like 'authorship' or 'last updated' that too could be modeled in RDF. It is a bit funky but we do it in Library Land all the time with Authorities. See this FAST example - http://experimental.worldcat.org/fast/958235/rdf.xml. There is a document that can have a creator and creation data that points to the Intangible thing that it focuses on. Again, I am not advocating for this approach but I think it is cleaner modeling if 'creator' or 'date modified' information is important." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409462197> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409462197"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409462197> .
<https://api.github.com/users/jechterhoff> <http://schema.org/accountId> "jechterhoff" .
<https://api.github.com/users/jechterhoff> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/4831647?v=4" .
<https://api.github.com/users/jechterhoff> <http://schema.org/url> "https://github.com/jechterhoff"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/jechterhoff> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409462197> <http://schema.org/creator> <https://api.github.com/users/jechterhoff> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409462197> <http://schema.org/startDate> "2018-08-01T06:19:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409462197> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409462197> <http://schema.org/description> "Some clarification: the uom in my example was really just to see what is allowed. I am happy to exclude this from the current discussion of introducing a new keyword in context documents only, for human readable consumption.\r\n\r\nThe early discussion of this issue quickly led to the proposal of having a JSON-LD keyword in a JSON-LD context that is only meant to provide human readable information (in the example I used @derivedBy, then the suggestion of @comment came up, which would be just as fine). The keyword is only intended to be read and used by human developers that need to understand a context document - especially if the developer was not the one who created that document. We have a case where it is not obvious why a specific term is defined in the context as it is. The additional keyword would be used to provide clarification. \r\nIt is a pity that JSON itself does not support comments. I am not sure if comments will ever be introduced in the JSON standard. A new JSON-LD keyword, used only in @context documents, would help us. If the name \"comment\" is difficult, then any other name is fine." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409539187> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409539187"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409539187> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409539187> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409539187> <http://schema.org/startDate> "2018-08-01T11:10:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409539187> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409539187> <http://schema.org/description> "> To @azaroth42 point about other RDF Syntaxes allowing for comments - this is true but they are only ever intended for human reading.\r\n\r\nI'm not sure this is so at all. NTriples are about the most machine-centric and least human-readable RDF format you can find and they have [have perfectly usable comments](https://www.w3.org/TR/n-triples/#h2_n-triples-grammar)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409567805> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409567805"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409567805> .
<https://api.github.com/users/mixterj> <http://schema.org/accountId> "mixterj" .
<https://api.github.com/users/mixterj> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/6155034?v=4" .
<https://api.github.com/users/mixterj> <http://schema.org/url> "https://github.com/mixterj"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/mixterj> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409567805> <http://schema.org/creator> <https://api.github.com/users/mixterj> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409567805> <http://schema.org/startDate> "2018-08-01T13:06:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409567805> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409567805> <http://schema.org/description> "@ajs6f yes, I take that point. I would argue that N-triples are more human readable than JSON-ld simply because it is just a giant document of, in essence, statements (rudimentary sentences) where as JSON-ld is a mess of curly braces and brackets that boggle the mind - but that would just be for the sake of arguing ;)\r\n\r\nMy main points were that: \r\n\r\n- decisions on comments should be carried/driven by the syntax (JSON) not the specific application of the syntax (JSON-ld).\r\n\r\n- I have concerns that comments in JSON-ld might be used for processing of the data, which would not be appropriate. This is particularly true if the comments were processable by a JSON parser regardless of whether a JSON-ld parser ignored them. Though this does NOT sound like it is a valid concern based on @jechterhoff clarification.\r\n\r\nSo, I am fine with human readable only comments but I do not think it should be the charge of this group to make that decision.\r\n\r\nSo I am still a -1 right now" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409617589> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409617589"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409617589> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409617589> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409617589> <http://schema.org/startDate> "2018-08-01T15:33:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409617589> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409617589> <http://schema.org/description> "I think the proposal of a `@comment` property **only for use in `@context` objects** is not unwarranted. However, I would be concerned that developers would expect it to have meaning and value within a JSON-LD document's \"data\" space.\r\n\r\nIn a `@context` object, my presumption would be that it would relate to the object in which it was used (assuming that an object was used and not just a property/URI pair). Since the `@context` object is not endlessly hierarchical, then `@comment` would seem sensible as a property of `@context` and of any immediate child object of any property.\r\n\r\nHowever, just writing this gives me fears that `@comment` would begin to be peppered throughout the JSON-LD document space with a wide range of uses for both machines and humans, but in a way that would essentially be para-structural and certainly colloquial.\r\n\r\nSadly, it also doesn't seem to ultimately solve JSON's own lack of commenting constructs because (for all the same reasons), doing that right (and without polluting the data/graph) simply can't be done within a document which only defines a data structure sans comments--i.e. JSON.\r\n\r\n**tl;dr** We should *not* add comments to JSON-LD for the same reason they were *taken out* of JSON:\r\n> I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability. I know that the lack of comments makes some people sad, but it shouldn't.\r\n> https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr\r\n> \\+ Hacker News commentary at https://news.ycombinator.com/item?id=3912149" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409708720> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-409708720"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409708720> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409708720> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409708720> <http://schema.org/startDate> "2018-08-01T20:20:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409708720> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409708720> <http://schema.org/description> "> decisions on comments should be carried/driven by the syntax (JSON) not the specific application of the syntax (JSON-ld).\r\n\r\nPerhaps +1 folks are thinking of the `@context` as JSON-LD syntax (with JSON-LD semantics) that, like all JSON-LD syntax, is intentionally entirely within JSON syntax, and -1 folks are thinking of the `@context` as JSON syntax with JSON-LD semantics?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409994489> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-409994489"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/30> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409994489> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409994489> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409994489> <http://schema.org/startDate> "2018-08-02T16:51:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409994489> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/409994489> <http://schema.org/description> "So as not to loose @ericprud's comment about making a change to `\"@container\": \"@graph\"` to align the blank node table used to identify the graph with the implicit subject of the node contained within the graph, please create another issue for this to be considered (**action on @ericprud**).\r\n\r\nI believe this directly relates to the ability to validate Verifiable Claim named graphs from a data-model perspective, rather than just a JSON Schema perspective. Potentially, the contents of such a named graph could have a very large number of statements, which makes it computationally impractical to find the \"root\" of the graph by searching for statements with a subject (`@id`) which is not the value of some other node (object of a statement). We might go so far as to describe a subset of named graphs where the graph name is the same as the primary subject of the graph." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410039455> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/13#issuecomment-410039455"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410039455> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410039455> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410039455> <http://schema.org/startDate> "2018-08-02T19:23:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410039455> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410039455> <http://schema.org/description> "Propose closing, following proposal to close #11 and WG design considerations discussion." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410296278> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410296278"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410296278> .
<https://api.github.com/users/tcole3> <http://schema.org/accountId> "tcole3" .
<https://api.github.com/users/tcole3> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/7622978?v=4" .
<https://api.github.com/users/tcole3> <http://schema.org/url> "https://github.com/tcole3"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tcole3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410296278> <http://schema.org/creator> <https://api.github.com/users/tcole3> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410296278> <http://schema.org/startDate> "2018-08-03T15:52:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410296278> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410296278> <http://schema.org/description> "I see ample use cases for wanting to provide information (i.e., context, pardon the semantic collision) about json-ld context and framing documents. This said, @comment is misleading since  for developers (as mentioned) it implies an ability to make multiple comment(s), each about specific lines of code, and to anchor such comments next to these lines of code, none of which is doable json. So, I am -1 to @comment, but I would be open some other key more narrowly defined to provide information at document level about a context or framing document of potential value to humans. \r\n\r\nIn particular, I am +1 for @documentation (as suggested by @azaroth42) assuming @documentation has a range of URL and is scoped only to context and framing documents. This would help humans understand more about the source / rationale of the particular context of framing document version being used, something I think would be useful as contexts and framing documents multiply.\r\n\r\nA possible limitation of this approach, of course, is that if an instance references multiple context documents, the last @documentation encountered would likely be given priority, which may or may not be the result intended." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410302457> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410302457"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410302457> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410302457> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410302457> <http://schema.org/startDate> "2018-08-03T16:13:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410302457> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410302457> <http://schema.org/description> "> the last @documentation encountered would likely be given priority, which may or may not be the result intended.\r\n\r\nI think this problem might best be solved on the other end of the proposed `@documentation` link; whatever human- (and hopefully machine-) readable content is on the other end could aggregate other content as appropriate and in some content type -specific way.." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410345947> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/36#issuecomment-410345947"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410345947> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410345947> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410345947> <http://schema.org/startDate> "2018-08-03T18:57:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410345947> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410345947> <http://schema.org/description> "There are numerous tests in the API PR w3c/json-ld-api#16 that show how this looks.\r\n\r\nCompacted list containing embedded lists, simply continues to expand embedded arrays:\r\n\r\n```json\r\n{\r\n  \"@context\": {\"foo\": {\"@id\": \"http://example.com/foo\", \"@container\": \"@list\"}},\r\n  \"foo\": [[\"baz\"]]\r\n}\r\n```\r\n\r\nexpands to\r\n\r\n```json\r\n[{\r\n  \"http://example.com/foo\": [{\"@list\": [{\"@list\": [{\"@value\": \"baz\"}]}]}]\r\n}]\r\n```\r\n\r\nwhich is equivalent to the following Turtle\r\n\r\n```turtle\r\n[<http://example.com/foo> ((\"baz\"))] .\r\n```\r\n\r\nAlgorithms support arbitrary depth and mixed elements." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356274> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-410356274"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356274> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356274> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356274> <http://schema.org/startDate> "2018-08-03T19:40:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356274> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356274> <http://schema.org/description> "The underlying question seems to be about whether the surrounding HTML effects the contained JSON-LD (i.e. `<base>`, `<srcipt lang>`, etc).\r\n\r\nRight now, it's my assumption that the markup does *not* need to be consulted when extracting or using the JSON-LD, but that the request URL and response headers used to convey the HTML (with the embedded JSON-LD) would *retain* their meaning to the JSON-LD.\r\n\r\nFor example (riffing off [this example in the spec](https://w3c.github.io/json-ld-syntax/#interpreting-json-as-json-ld)):\r\n```http\r\nGET /markus\r\nHost: http://example.com/\r\nAccept: text/html\r\n```\r\n\r\n```http\r\nHTTP/1.1 200 OK\r\nContent-Type: text/html\r\nLink: <https://json-ld.org/contexts/person.jsonld>;\r\n        rel=\"http://www.w3.org/ns/json-ld#context\";\r\n        type=\"application/ld+json\"\r\n```\r\n```html\r\n<html>\r\n<head>\r\n  <script type=\"application/ld+json\">\r\n{\r\n  \"@id\": \"\",\r\n  \"name\": \"Markus Lanthaler\",\r\n  \"homepage\": \"http://www.markus-lanthaler.com/\",\r\n  \"image\": \"http://twitter.com/account/profile_image/markuslanthaler\"\r\n}\r\n  </script>\r\n</head>\r\n<body>\r\n  <img src=\"http://twitter.com/account/profile_image/markuslanthaler\" />\r\n  <a href=\"http://www.markus-lanthaler.com/\">Markus Lanthaler</a>\r\n</body>\r\n</html>\r\n```\r\n\r\nGiven that the document was requested from `http://example.com/markus` then the triples I'd expect would be:\r\n```turtle\r\n<http://example.com/markus> <http://xmlns.com/foaf/0.1/homepage> <http://www.markus-lanthaler.com/> .\r\n<http://example.com/markus> <http://xmlns.com/foaf/0.1/img> <http://twitter.com/account/profile_image/markuslanthaler> .\r\n<http://example.com/markus> <http://xmlns.com/foaf/0.1/name> \"Markus Lanthaler\" .\r\n```\r\n\r\nEssentially...\r\n - the request URL becomes the [Base URI](https://w3c.github.io/json-ld-syntax/#base-iri) (as described in that section)\r\n - the context is set (in this case) just as it would be for a \"plain JSON\" document (as current described in [Interpreting JSON as JSON-LD](https://w3c.github.io/json-ld-syntax/#interpreting-json-as-json-ld)).\r\n\r\nThis would avoid the complication(s) of consulting the surrounding formats many similar value expressions (lang, base, etc), while still benefiting from the HTTP message headers we're already leaning on for the \"plain JSON\" use case.\r\n\r\nIf this is on the right track, I'm happy to contribute text to make the [Embedding JSON-LD in HTML Documents](https://w3c.github.io/json-ld-syntax/#embedding-json-ld-in-html-documents) normative (following the pattern set in the [\"plain JSON\"](https://w3c.github.io/json-ld-syntax/#interpreting-json-as-json-ld) section).\r\n\r\nJust let me know. 😃 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356595> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-410356595"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356595> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356595> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356595> <http://schema.org/startDate> "2018-08-03T19:42:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356595> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410356595> <http://schema.org/description> "FWIW, this is how the [JSON-LD Playground](https://json-ld.org/playground/) experience feels now (at least as regards the Base URI). Any `\"@id\": \"\"` will get `<https://json-ld.org/playground/>` as it's URI in the output triples." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410357607> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/40#issuecomment-410357607"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410357607> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410357607> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410357607> <http://schema.org/startDate> "2018-08-03T19:46:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410357607> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410357607> <http://schema.org/description> "Addendum:\r\n\r\nThe only burden that this approach places on JSON-LD processing tools is that they need to ignore the \"@@\" token." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410388078> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-410388078"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410388078> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410388078> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410388078> <http://schema.org/startDate> "2018-08-03T22:03:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410388078> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410388078> <http://schema.org/description> "That's always been my interpretation, other things to consider are the following:\r\n\r\n```html\r\n<html>\r\n<head xml:base=\"http://example.org/alt-base/\" lang=\"EN-alt\">\r\n  <script type=\"application/ld+json\">\r\n{\r\n  \"@id\": \"\",\r\n  \"name\": \"Markus Lanthaler\",\r\n  \"homepage\": \"http://www.markus-lanthaler.com/\",\r\n  \"image\": \"http://twitter.com/account/profile_image/markuslanthaler\"\r\n}\r\n  </script>\r\n</head>\r\n<body>\r\n  <img src=\"http://twitter.com/account/profile_image/markuslanthaler\" />\r\n  <a href=\"http://www.markus-lanthaler.com/\">Markus Lanthaler</a>\r\n</body>\r\n</html>\r\n```\r\n\r\n* Does `xml:base`, or `head>base@href` affect the processing (mine doesn't).\r\n* Does the in-scope language setting affect the default language values (mine doesn't)\r\n\r\nWe need to be careful about putting too many restrictions on implementations; by making HTML processing normative, all compliant processors will need to include an HTML parser, whereas now they only need to process JSON. My library depends on the RDFa processor to look for other embedded encodings in an HTML document, including Microdata, RDF/XML, and anything in a `script` tag for which it can find a reasonable reader. We may want to keep these requirements in a different spec." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410389333> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/40#issuecomment-410389333"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410389333> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410389333> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410389333> <http://schema.org/startDate> "2018-08-03T22:10:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410389333> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410389333> <http://schema.org/description> "In your example `comments` is actually _not_ in the `@context`, it's in the body of the JSON-LD which includes `@context`. This could be handled by having a term definition for `comments`, to be something like `rdfs:comment`. Processors retrieving the document for retrieving a context will discard everything else.\r\n\r\nRegarding `@@`:\r\n\r\n> everything from there to the end of the line is not processed.\r\n\r\nThis gets into the JSON processing model, so end-of-line is a problem. It would rather be that any value associated with the key `@@` is discarded. In any case, the choice of `@@` is somewhat arbitrary and rather non-intuitive, IMHO.\r\n\r\nThe more I see on this, the more I dislike the notion of trying to add a comment mechanism to the JSON-LD processing model. If necessary, it can be expressed in the body of the document, where it is either discarded, if associated with an unmapped term, or transformed, which might be appropriate for `rdfs:comment`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410428065> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/36#issuecomment-410428065"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410428065> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410428065> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410428065> <http://schema.org/startDate> "2018-08-04T06:36:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410428065> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410428065> <http://schema.org/description> "I do not have any problem having this but I think the syntax document should include some explicit statements and examples for the case of lists of lists. It is not clear from the text in the syntax document whether the syntax above is permitted or not..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410430258> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-410430258"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410430258> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410430258> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410430258> <http://schema.org/startDate> "2018-08-04T07:20:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410430258> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410430258> <http://schema.org/description> "The problem I have with the strict HTTP response based approach is my usual one: for most of the users/authors out there (think of all the schema.org users!) setting the HTTP response headers is not an option: they have neither the knowledge nor the access to do that. I believe any setting must rely on what they can really control, namely the HTML content itself.\r\n\r\nI also believe we should not shy away from relying on the usage of an HTML parser. After all, if a JSON-LD processor does implement the embedded JSON-LD extraction, then the most natural way of doing so is to parse the HTML file with a parser (and they are available everywhere for all types of languages) and perform something like:\r\n\r\n```\r\nconst script = dom.window.document.querySelector(`script[[type=\"application/ld+json\"]`);\r\nconst jsonld = script.text\r\n```\r\n\r\nWe should encourage using this pattern rather than using some sort of a text processing trick imho.\r\n\r\n---\r\n\r\nThat being said: I think we have three generic behaviors that we need to specify.\r\n\r\n_Base:_ To use the code snippet above we should say that the base for the embedded content is the value of `script.baseURI`. We have the HTML5 and DOM specs that define exactly what that means, we do not have to get into the details. In the usual case this falls back to what the HTTP return value gives, but also accounts to possible base setting in the HTML using whatever means that HTML authorizes. \r\n\r\n_Default language:_ I think _if_ the language is set explicitly in the HTML source, this should be honored. A question that is not 100% clear to me is whether any _inherited_ language should be considered or only an explicit setting. \r\n\r\nIe, I believe that the following case:\r\n\r\n```\r\n<script type=\"application/ld+json\" lang=\"fr\">\r\n...\r\n</script>\r\n```\r\n\r\nmust be equivalent to a `\"@language\":\"fr\"` in the context (of course, any explicit setting within the JSON-LD content would overwrite this). If, as an author, I go out of my way to set the language via a perfectly legal HTML attribute, then I would expect that to mean something.\r\n\r\nThe slightly more unclear case is whether\r\n\r\n```\r\n<head lang=\"fr\">\r\n<script type=\"application/ld+json\">\r\n...\r\n</script>\r\n```\r\nhas the same effect. I think the answer should be 'yes', too. One reason is that if I use that mechanism for any other HTML element, like a `<p>`, then the two approaches have exactly the same effect on the content of `<p>`, so not doing for this script may be considered as unnecessary exception. (Note that the user may switch the language off by setting `lang=''`.)\r\n\r\n_Default text direction:_ (Ie, the `dir=ltr` attribute). The issue here is that we do not address the problem of direction in JSON-LD at all, so we may want to ignore this. Specific applications may take that value into account if they do something with the literal values of the JSON-LD, but we would not specify this. We may want to mention that in a note, though, to avoid ambiguities or questions.\r\n\r\nI do not see any attributes for the script element that would/could affect the JSON-LD processing. I other words, I believe all other attributes can be ignored as far as JSON-LD is concerned. Which means that spec-ing all this does not look like an overcomplicated issue...\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410455099> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/36#issuecomment-410455099"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410455099> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410455099> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410455099> <http://schema.org/startDate> "2018-08-04T14:55:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410455099> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410455099> <http://schema.org/description> "I started with the API, to make sure I had a solution that worked. I still need to update the syntax document for grammar, explanation and examples, which I’ll do presently." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464057> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/11#issuecomment-410464057"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/11> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464057> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464057> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464057> <http://schema.org/startDate> "2018-08-04T17:14:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464057> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464057> <http://schema.org/description> "Closing, wontfix, as new features should be compatible with the RDF data model.\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-03-json-ld#section2-2 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464100> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/13#issuecomment-410464100"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/13> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464100> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464100> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464100> <http://schema.org/startDate> "2018-08-04T17:14:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464100> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464100> <http://schema.org/description> "Closing, wontfix, as new features should be compatible with the RDF data model.\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-03-json-ld#section2-3 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464422> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410464422"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464422> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464422> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464422> <http://schema.org/startDate> "2018-08-04T17:19:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464422> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464422> <http://schema.org/description> "WG Resolutions:\r\n * We won't add an `@comment` or similar field to contexts that takes arbitrary constructs intended for comments.\r\n * We will discuss other proposals for how to reference or embed documentation for the context\r\n\r\nActions before 2018-08-10:\r\n  * @tcole3, @azaroth42:  Write up a proposal for a keyword that links to an external resource\r\n  * @BigBlueHat: Write up a proposal to recommend content negotiation on the context document\r\n  * @BigBlueHat, @gkellogg:   Write up a proposal to process JSON-LD embedded in HTML as a context document\r\n  * @hsolbrig: Write up a proposal for additional syntax for inline fields\r\n  * Everyone: Comment on the proposals\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464475> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410464475"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464475> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464475> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464475> <http://schema.org/startDate> "2018-08-04T17:20:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464475> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410464475> <http://schema.org/description> "Closing this issue in favor of the further proposals.\r\nWG Resolution: https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-03-json-ld#resolution6 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410466014> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410466014"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410466014> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410466014> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410466014> <http://schema.org/startDate> "2018-08-04T17:43:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410466014> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410466014> <http://schema.org/description> "> We won't add an @comment or similar field to contexts that takes arbitrary constructs intended for comments.\r\n\r\n+1\r\n\r\n> We will discuss other proposals for how to reference or embed documentation for the context\r\n\r\n+0.5 -- suggest the pointer is to a specification of vocabulary document. We could skip this by ensuring that the construction of the JSON-LD Context URl should provide the vocabulary document one level up as a design pattern. For example:\r\n\r\nJSON-LD Context: https://w3id.org/security/v1\r\nDocumentation (or redirect to documentation): https://w3id.org/security\r\n\r\nIf we write a normative rule on discovery of JSON-LD Context documentation that does the above, we avoid the need to create yet another reserved word /and/ solve the use case.\r\n\r\n> @BigBlueHat, @gkellogg: Write up a proposal to process JSON-LD embedded in HTML as a context document\r\n\r\nNote the many ways this could result in security issues (thinking of financial sector use cases where sender/receiver are switched by a JSON-LD context override and other digital signature shenanigans, specifically)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410485123> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410485123"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410485123> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410485123> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410485123> <http://schema.org/startDate> "2018-08-04T23:51:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410485123> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410485123> <http://schema.org/description> "> On Aug 4, 2018, at 10:43 AM, Manu Sporny <notifications@github.com> wrote:\n> \n> We won't add an @comment <https://github.com/comment> or similar field to contexts that takes arbitrary constructs intended for comments.\n> \n> +1\n> \n> We will discuss other proposals for how to reference or embed documentation for the context\n> \n> +0.5 -- suggest the pointer is to a specification of vocabulary document. We could skip this by ensuring that the construction of the JSON-LD Context URl should provide the vocabulary document one level up as a design pattern. For example:\n> \n> JSON-LD Context: https://w3id.org/security/v1 <https://w3id.org/security/v1>\n> Documentation (or redirect to documentation): https://w3id.org/security <https://w3id.org/security>While such a convention may be fine as a practice, it’s not something I think is necessary. As was mentioned on the call, terms expanding to vocabulary IRIs can use normal follow-your-nose to find definitions/documentation of those terms. We don’t have something like that for the vocabulary (or context) as a whole, but rdfs:isDefinedIn can also be used.\n> If we write a normative rule on discovery of JSON-LD Context documentation that does the above, we avoid the need to create yet another reserved word /and/ solve the use case.\n> \n> @BigBlueHat <https://github.com/BigBlueHat>, @gkellogg <https://github.com/gkellogg>: Write up a proposal to process JSON-LD embedded in HTML as a context document\n> \n> Note the many ways this could result in security issues (thinking of financial sector use cases where sender/receiver are switched and digital signatures, specifically).\n> \nIt would be great if you can elaborate on this when the issue gets created. It would seem to be quite similar to content-negotiation re-using the URL for both documentation and context purposes, but with the context embedded in the HTML.\n\nGregg\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410466014>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAC02Mlq415lJ6hlvpVQ_ianTmxO43wKks5uNd1agaJpZM4VD7ZH>.\n> \n\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410496920> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-410496920"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410496920> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410496920> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410496920> <http://schema.org/startDate> "2018-08-05T05:27:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410496920> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410496920> <http://schema.org/description> "@gkellogg,\r\n\r\nI do not have a real issue with the changes, so we can merge it; my comments are purely of an editorial nature and reflect a matter of taste... Take them as you wish, salt 'n pepper them at taste...\r\n\r\n- I would separate the parts on sets and lists in two subsections. The two notions have a different feel and setting, and it would increase readability\r\n- The session after the table reprsenting lists in RDF you have a section that begins with \"Consequently...\", which is a bit out of place in this document, we usually do not analyze other serializations. I would just give the example in Turtle, and leave that (and, also, the \"unwieldy\" comment before the table) out. In any case, as I already raised in #26, I would think we will have to rethink how we represent _all_ our examples anyway.\r\n- You say \"In JSON-LD 1.1, we can express this using recursive lists, by simply adding the appropriate context definion\". This may be understood as this being the _only_ way of doing so, which is not true. One can use repeated `@list` keywords for each series of coordinates, it is just unreadable...\r\n\r\n\r\n " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410523046> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410523046"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410523046> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410523046> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410523046> <http://schema.org/startDate> "2018-08-05T14:15:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410523046> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410523046> <http://schema.org/description> "> It would be great if you can elaborate on this when the issue gets created. It would seem to be quite similar to content-negotiation re-using the URL for both documentation and context purposes, but with the context embedded in the HTML.\r\n\r\nThe issue that jumps at me first is one of user generated context. What happens if there are two contexts in an HTML page... one that the website author intended... and another that was injected via user generated content. Which one do you use? What if you can get a context through conneg, but the contexts don't match, which one do you prefer. I don't think these are insurmountable problems... but we should do a security analysis based on using these mechanisms to create digital signatures as that's where the attacks get dangerously interesting." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410539869> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-410539869"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410539869> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410539869> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410539869> <http://schema.org/startDate> "2018-08-05T18:51:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410539869> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410539869> <http://schema.org/description> "> I would separate the parts on sets and lists in two subsections. The two notions have a different feel and setting, and it would increase readability\r\n\r\nThey are both about arrays and ordering, which is why they were together. We do need to do a comprehensive reorganization, but I'd rather not do that on a piecemeal basis.\r\n\r\n> The session after the table reprsenting lists in RDF you have a section that begins with \"Consequently...\", which is a bit out of place in this document, we usually do not analyze other serializations. I would just give the example in Turtle, and leave that (and, also, the \"unwieldy\" comment before the table) out.\r\n\r\nNoted.\r\n\r\n> In any case, as I already raised in #26, I would think we will have to rethink how we represent all our examples anyway.\r\n\r\nIndeed, but this is a somewhat daunting task, for which I could use some help. In particular, we probably need to use something like [jsonld-vis](https://github.com/scienceai/jsonld-vis) to simplify creating such graphs, although this may prove to be a problem for non-HTML use.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410586280> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-410586280"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410586280> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410586280> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410586280> <http://schema.org/startDate> "2018-08-06T04:34:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410586280> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410586280> <http://schema.org/description> "Hey @gkellogg \r\n\r\n> They are both about arrays and ordering, which is why they were together. We do need to do a comprehensive reorganization, but I'd rather not do that on a piecemeal basis.\r\n\r\nI was not clear, sorry about that. I meant deeper subsections within this subsection. But I agree that this can wait, subject to a reorganization\r\n\r\n> Indeed, but this is a somewhat daunting task, for which I could use some help. In particular, we probably need to use something like jsonld-vis to simplify creating such graphs, although this may prove to be a problem for non-HTML use.\r\n\r\nIt is complicated indeed. The table/expanded/TriG/n-quads versions may not be that bad just lot of writing; if the graphs prove to be too much work, we can drop that one.\r\n\r\n(B.t.w., for some reasons, example 57 does not appear in the preview. I presume it will be there for the merged version.)\r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410826719> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410826719"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410826719> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410826719> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410826719> <http://schema.org/startDate> "2018-08-06T19:32:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410826719> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410826719> <http://schema.org/description> "@msporny when you say \"user generated content\" are you thinking JSON-LD context documents added via a CMS? or are you referring to some JavaScript-built user generated inline context content? Trying to narrow the scope as I start writing these. 😄 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410827391> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/32#issuecomment-410827391"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/32> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410827391> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410827391> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410827391> <http://schema.org/startDate> "2018-08-06T19:35:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410827391> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/410827391> <http://schema.org/description> "> @msporny when you say \"user generated content\" are you thinking JSON-LD context documents added via a CMS?\r\n\r\nYes, this one.\r\n\r\n> or are you referring to some JavaScript-built user generated inline context content?\r\n\r\nI hadn't considered this one... a bit less concerned about it... but it is an attack vector if a client-side JSON-LD tool ever gained traction. For example... LastPass sniffs and modifies every single password page I hit. If it extracted JSON-LD to do stuff, there might be an attack vector there. I think browser extensions are sandboxed from each other, except for the page content they're working on... they share that, making it possible for an attacker to inject something onto the page that makes it possible to pwn another extension." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411125337> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/40#issuecomment-411125337"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411125337> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411125337> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411125337> <http://schema.org/startDate> "2018-08-07T16:50:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411125337> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411125337> <http://schema.org/description> "Administrative note that this is one of four proposals coming from the closure of #32." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411126166> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-411126166"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411126166> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411126166> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411126166> <http://schema.org/startDate> "2018-08-07T16:52:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411126166> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411126166> <http://schema.org/description> "+1 to reorganization, and +1 to not doing it as part of this PR :)\r\nAlso ... +1 to the PR.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411127110> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/36#issuecomment-411127110"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/36> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411127110> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411127110> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411127110> <http://schema.org/startDate> "2018-08-07T16:55:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411127110> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411127110> <http://schema.org/description> "Given this issue is syntax, and we [agreed to include it](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-03-json-ld#section4) in the syntax, flagging as editorial and removing needs discussion." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411141148> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-411141148"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411141148> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411141148> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411141148> <http://schema.org/startDate> "2018-08-07T17:41:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411141148> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411141148> <http://schema.org/description> "I'd like to handle this PR and w3c/json-ld-api#16, which ideally could use an implementation, but should at least have a review." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411143476> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-411143476"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411143476> .
<https://api.github.com/users/simonstey> <http://schema.org/accountId> "simonstey" .
<https://api.github.com/users/simonstey> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/10495449?v=4" .
<https://api.github.com/users/simonstey> <http://schema.org/url> "https://github.com/simonstey"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/simonstey> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411143476> <http://schema.org/creator> <https://api.github.com/users/simonstey> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411143476> <http://schema.org/startDate> "2018-08-07T17:48:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411143476> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411143476> <http://schema.org/description> "I already pinged Axel and I'll give it a read tmrw!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411165934> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411165934"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411165934> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411165934> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411165934> <http://schema.org/startDate> "2018-08-07T19:01:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411165934> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411165934> <http://schema.org/description> "In the case of Schema.org (at least), each term URL results in a human and machine readable HTML+RDFa representation of that term: https://schema.org/Thing (for example).\r\n\r\nGiven the above, what functionality or expectations would a `@documentation` term add in this scenario?\r\nOr (conversely) what bugs or issues might it avoid?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411180600> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411180600"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411180600> .
<https://api.github.com/users/tcole3> <http://schema.org/accountId> "tcole3" .
<https://api.github.com/users/tcole3> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/7622978?v=4" .
<https://api.github.com/users/tcole3> <http://schema.org/url> "https://github.com/tcole3"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tcole3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411180600> <http://schema.org/creator> <https://api.github.com/users/tcole3> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411180600> <http://schema.org/startDate> "2018-08-07T19:53:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411180600> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411180600> <http://schema.org/description> "The folks behind schema.org have done a better than average job (in my opinion) of documenting their ontology, so possibly they would never bother with `@documentation` in their context document. However, it really depends on what's wanted and I'm not sure we'll know for sure until people have had the opportunity to use the proposed new key. So, for example, in the case of schema.org, the first link given above  (https://schema.org/docs/documents.html) might be their best choice as value for `@documentation`. This html page lists for the human reader a variety of ways to learn about schema.org terms and hierarchies collectively and in formats perhaps more amenable to some than html+rdfa, e.g., the list includes links to a view of the schema.org type hierarchy, an FAQ, a description of all schema.org properties in a single CSV, a getting started page, etc. \r\n\r\nBut I would agree if could count on everyone to self-document all the terms declared in their context document with individual RDFa pages, there'd be less need for `@documentation`. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411188560> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411188560"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411188560> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411188560> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411188560> <http://schema.org/startDate> "2018-08-07T20:19:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411188560> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411188560> <http://schema.org/description> "I think we need to scope where `@documentation` could appear:\r\n\r\n* Only at the root of the tree\r\n* In term definitions\r\n\r\nI would be happy enough with only at the root of the tree, and only a single URI. That means it's clearly about the context, and not trying to over-reach into ontology definition." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411189859> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411189859"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411189859> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411189859> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411189859> <http://schema.org/startDate> "2018-08-07T20:24:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411189859> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411189859> <http://schema.org/description> "> Only at the root of the tree\r\n\r\nDo you mean this tree?\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@documentation\": \"http://example.com/docs\"\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411191893> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411191893"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411191893> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411191893> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411191893> <http://schema.org/startDate> "2018-08-07T20:31:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411191893> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411191893> <http://schema.org/description> "\r\nExactly.\r\n\r\nAnd not:\r\n\r\n```\r\n{\r\n  \"@context\": {\r\n    \"label\": {\r\n      \"@id\": \"rdfs:label\", \r\n      \"@documentation\": \"https://www.w3.org/TR/rdf-schema/#ch_label\"\r\n    }\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411304208> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43#issuecomment-411304208"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411304208> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411304208> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411304208> <http://schema.org/startDate> "2018-08-08T06:47:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411304208> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411304208> <http://schema.org/description> "The advantage of this approach is that... we have nothing to do:-). This is possible on today's Web and a number of sites do it already. That is good...\r\n\r\nHowever, I do want to understand our use cases, which is blurry for me. If we are considering more or less institutional publishers of context files, like schema.org, or W3C publishing, e.g., an (extra) context file to be used for Web Publication Manifests, then this is a good approach. However, I continue to question whether this is appropriate for individuals or organizations that do not have major expertise in Web site management, who may run everything via a cloud provider with some sort of a basic hosting service, etc. For all those, content negotiation is an unknown, un-understandable, and scary notion that they cannot control anyway. (Try to show that Apache reference to a layperson, and get that person to modify the httpd.config file if he/or she has even access to it. The person would run away screaming...) In other words, content negotiation should never be _the_ solution, but only _a_ (very elegant) solution imho.\r\n\r\nIe: who is our target audience for this use case?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411308541> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411308541"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411308541> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411308541> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411308541> <http://schema.org/startDate> "2018-08-08T07:07:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411308541> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411308541> <http://schema.org/description> "I think we have to separate to use cases.\r\n\r\n1. Documenting the context file, for which this may be a solution indeed. Easy to implement and use by any user who publishes context file(s). I am fine with it.\r\n1. We also have the problem of users who want to comment/document the _data_. What do we offer for that use case?\r\n\r\nI guess the answer to (2) is to use some existing vocabulary, like `rdf:comment` (or some DCMI equivalent). Which is fine, it also gets the value into the dataset with roundripping which is a cherry on the cake. However, it would require to spell out the full URL for `rdf:comment`, which is pain, or to extend the context part which, for many users, is not an option (I am considering authors who want to add metadata to a Web Publication using the [manifest definition](https://www.w3.org/TR/wpub/#wp-properties)). What this may lead to is whether it'd make sense to introduce, possibly stripped down version of, the [RDFa intial context notion](https://www.w3.org/2011/rdfa-context/rdfa-1.1), ie, a number of well established prefixes that are _always_ known to a JSON-LD processor? That means that _anybody_ without any prior knowledge, could use `rdf:comment` or `dct:description` in the data.\r\n\r\nMaybe (probably) this deserves a separate issue." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411429270> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43#issuecomment-411429270"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411429270> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411429270> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411429270> <http://schema.org/startDate> "2018-08-08T14:38:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411429270> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411429270> <http://schema.org/description> "> Ie: who is our target audience for this use case?\r\n\r\nDevelopers. 😃 Like the ones who would be publishing custom JSON-LD contexts and documentation." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411500459> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/41#issuecomment-411500459"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/41> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411500459> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411500459> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411500459> <http://schema.org/startDate> "2018-08-08T18:10:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411500459> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411500459> <http://schema.org/description> "@sgillies as the primary author of [GeoJSON-LD](https://github.com/geojson/geojson-ld) your thoughts on this would be most appreciated!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901011> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43#issuecomment-411901011"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901011> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901011> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901011> <http://schema.org/startDate> "2018-08-09T21:19:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901011> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901011> <http://schema.org/description> "+1 to @iherman's concern about complexity. Content Negotiation is a sophisticated technique that cannot be implemented in all hosting environments easily, such as (for example) github pages. Recommending conneg seems like a good practice, but requiring it less so." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901668> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411901668"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901668> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901668> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901668> <http://schema.org/startDate> "2018-08-09T21:21:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901668> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411901668> <http://schema.org/description> "We [resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-07-27-json-ld#resolution8) not to put comments/documentation links into the data. I think we could recommend picking a predicate like `rdf:comment` and putting it in the data.\r\n\r\nAgree that an initial context is a separate issue." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411971976> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/34#issuecomment-411971976"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411971976> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411971976> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411971976> <http://schema.org/startDate> "2018-08-10T04:30:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411971976> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411971976> <http://schema.org/description> "Seems like a useful feature to allow `@container: @set` for `@type`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411978060> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-411978060"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411978060> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411978060> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411978060> <http://schema.org/startDate> "2018-08-10T05:19:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411978060> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/411978060> <http://schema.org/description> "Added a separate issue (#44)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412068622> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/40#issuecomment-412068622"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412068622> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412068622> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412068622> <http://schema.org/startDate> "2018-08-10T12:32:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412068622> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412068622> <http://schema.org/description> "The `everything for there to the end of the line` was an error and not what I had intended.  The intent, as shown in the example, was that it fell in the JSON processing model and was not meant to be a change.  The problem with `rdfs:comment` is that it does have semantics in RDF space -- we need *one* (just *one*) reserve name that is ignored.  " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412136250> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-412136250"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412136250> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412136250> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412136250> <http://schema.org/startDate> "2018-08-10T16:31:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412136250> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412136250> <http://schema.org/description> "> another area of potential incompatibility with JSON-LD 1.0.\r\n\r\nDo we actually see this \"bnode as property\" form used in practice? I can't recall seeing an example, but I haven't seen all that much JSON-LD." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412140482> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-412140482"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412140482> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412140482> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412140482> <http://schema.org/startDate> "2018-08-10T16:48:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412140482> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412140482> <http://schema.org/description> "Is it possible to choose to ignore such new `@` keywords in the algorithms? I.e. create no triples from them and drop them in expansion?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141499> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43#issuecomment-412141499"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141499> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141499> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141499> <http://schema.org/startDate> "2018-08-10T16:51:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141499> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141499> <http://schema.org/description> "I'm not sure we would be requiring it as much as offering it as a technique for those who _can_ use it. (Developers!)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141886> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43#issuecomment-412141886"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141886> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141886> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141886> <http://schema.org/startDate> "2018-08-10T16:53:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141886> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412141886> <http://schema.org/description> "Right. It would remain a best practice, not a requirement." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412145980> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-412145980"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412145980> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412145980> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412145980> <http://schema.org/startDate> "2018-08-10T17:09:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412145980> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412145980> <http://schema.org/description> "> Is it possible to choose to ignore such new @ keywords in the algorithms? I.e. create no triples from them and drop them in expansion?\r\n\r\nThat's what 1.0 does, it just ignores them. The issue was an example in schema.org ([ItemList example #3](https://schema.org/ItemList#ItemList-gen-306)) which uses `@url` instead of `@id`, which would seem to be an error. Thus the danger of ignoring such things.\r\n\r\n```{\r\n  \"@context\": \"http://schema.org\",\r\n  \"@type\": \"ItemList\",\r\n  \"@url\": \"http://en.wikipedia.org/wiki/Billboard_200\",\r\n  \"name\": \"Top music artists\",\r\n  \"description\": \"The artists with the most cumulative weeks at number one according to Billboard 200\",\r\n  \"itemListElement\": [\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 1,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Beatles\"\r\n      }\r\n    },\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 2,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Elvis Presley\"\r\n      }\r\n    },\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 3,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Michael Jackson\"\r\n      }\r\n    },\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 3,\r\n      \"item\": {\r\n        \"@type\": \"MusicGroup\",\r\n        \"name\": \"Garth Brooks\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412146697> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-412146697"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412146697> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412146697> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412146697> <http://schema.org/startDate> "2018-08-10T17:12:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412146697> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412146697> <http://schema.org/description> "I'm not sure if I'm misunderstanding, but the example doesn't seem to have ignored it at all-- it expanded it to `http://schema.org/@url`. I'm asking whether it would be possible to ignore it in expansion entirely, i.e. `@url` would be dropped entirely, no expanded form, no triples. That might be more surprising than helpful, but it would seem to be a little more forward-compatible. Or perhaps I'm still missing the point (wouldn't be the first time!)?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412147636> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-412147636"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412147636> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412147636> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412147636> <http://schema.org/startDate> "2018-08-10T17:15:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412147636> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412147636> <http://schema.org/description> "> the example doesn't seem to have ignored it at all\r\n\r\nGood point, that's because of the use of `@vocab`; otherwise, it would have been dropped. Another reason we might flag this. If you really wanted `@url` as a relative IRI, you could always use `./@url`.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645503> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/40#issuecomment-412645503"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/40> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645503> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645503> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645503> <http://schema.org/startDate> "2018-08-13T20:04:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645503> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645503> <http://schema.org/description> "\r\nWG consensus was to close all documentation issues as out of scope, but to revisit in the future as potential best practice rather than syntax concerns.\r\n\r\nFurther, for this issue, WG resolved that `@@` as a keyword was identical to the already rejected `@comment`.\r\n\r\nResolutions:\r\n * https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-10-json-ld#resolution2\r\n * https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-10-json-ld#resolution3" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645980> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/42#issuecomment-412645980"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/42> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645980> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645980> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645980> <http://schema.org/startDate> "2018-08-13T20:06:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645980> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412645980> <http://schema.org/description> "WG consensus to close documentation issues, with a future action to consider best practices around documentation rather than syntax / normative requirements.\r\n\r\nResolution:\r\n * https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-10-json-ld#resolution3\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412646497> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/43#issuecomment-412646497"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/43> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412646497> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412646497> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412646497> <http://schema.org/startDate> "2018-08-13T20:08:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412646497> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412646497> <http://schema.org/description> "WG consensus to close documentation issues, with a future action to consider best practices around documentation rather than syntax / normative requirements.\r\n\r\nResolution:\r\n * https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-10-json-ld#resolution3" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412647830> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/44#issuecomment-412647830"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412647830> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412647830> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412647830> <http://schema.org/startDate> "2018-08-13T20:12:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412647830> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412647830> <http://schema.org/description> "\r\nFor reference, in 1.0 this was discussed here: https://github.com/json-ld/json-ld.org/issues/80" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412942505> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-412942505"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412942505> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412942505> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412942505> <http://schema.org/startDate> "2018-08-14T16:57:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412942505> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/412942505> <http://schema.org/description> "Thanks for bringing this up, Manu! I especially think this needs discussion as we talk about how soon one can \"get at\" features like \"lists of lists\" (see #41). Had that been there or optionally enable-able, ActivityStreams 2.0 would likely have used `application/ld+json` as it's media type. As it is, they minted a new one (`application/activity+json`) because they allow \"raw\" GeoJSON to be embedded (see https://www.w3.org/TR/activitystreams-core/#h-extensibility)\r\n\r\nSo, now with those in the wild, I'm curious how we could \"upgrade\" them (when processed) to keep their list-of-lists data in the output graph--without all the past published JSON having to be edited (i.e. just their `@context` documents refined/improved).\r\n\r\nThe details of how we trigger that is where things we'll get...fiddly.\r\n\r\nI'm not keen on the `@version` array approach as it will essentially create a very wide range of \"versions\" of JSON-LD. My preference would be for features to be \"sniffed\" from the documents (data and context) and (if the processor supports) the output graphs become \"richer.\"\r\n\r\nPerhaps we could use the list-of-lists feature as a test case for different approaches to both signalling and processing?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413450794> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413450794"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413450794> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413450794> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413450794> <http://schema.org/startDate> "2018-08-16T07:21:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413450794> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413450794> <http://schema.org/description> "@gkellogg I do like what you have done, but I would go a little bit further:\r\n\r\n- I think section 4 should stop with 4.8. \r\n    - 4.9-4.11 should be in their separate, top level section (ie, section 5). Up until that point, section 4 describes features of JSON-LD that I, as an author of data, would/could use when creating JSON-LD. If I am 'just' an author, I would not really care about expanding, compacting, or flattening; these are interesting for JSON-LD processors, but for an author. Hence they should be in a separate top level section.\r\n    - Same with 4.12 and 4.13. These are ways to set up how to consume JSON-LD not the way I would author data. I would argue it should be separated from the rest.\r\n- We did discuss whether the named graph section should be in its own top level section. With that organization that may not be necessary..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413452707> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413452707"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413452707> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413452707> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413452707> <http://schema.org/startDate> "2018-08-16T07:29:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413452707> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413452707> <http://schema.org/description> "Is Example 66 correct? This is an example of a 'bush', but this means that the example context is _not_ valid for the second graph. Ie, the value of \"name\" will not be valid. In other words Example 66 is not equivalent to Example 67...\r\n\r\n\\<standard nag\\>We should really make it easier to encode bushes:-)\\</standard nag\\>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413570241> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413570241"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413570241> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413570241> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413570241> <http://schema.org/startDate> "2018-08-16T14:43:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413570241> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413570241> <http://schema.org/description> "> Is Example 66 correct? This is an example of a 'bush', but this means that the example context is not valid for the second graph. Ie, the value of \"name\" will not be valid. In other words Example 66 is not equivalent to Example 67...\r\n\r\nTrue. At this point Example 66 doesn't output the second `Person` at all (see [playground demo](https://json-ld.org/playground/#startTab=tab-expanded&json-ld=%5B%7B%22%40context%22%3A%7B%22%40vocab%22%3A%22http%3A%2F%2Fschema.org%2F%22%2C%22knows%22%3A%7B%22%40type%22%3A%22%40id%22%7D%7D%2C%22name%22%3A%22Manu%20Sporny%22%2C%22%40type%22%3A%22Person%22%2C%22knows%22%3A%22http%3A%2F%2Fgreggkellogg.net%2Ffoaf%23me%22%7D%2C%7B%22%40id%22%3A%22http%3A%2F%2Fgreggkellogg.net%2Ffoaf%23me%22%2C%22%40type%22%3A%22Person%22%2C%22name%22%3A%22Gregg%20Kellogg%22%7D%5D)).\r\n\r\n> <standard nag>We should really make it easier to encode bushes:-)</standard nag>\r\n\r\nIf there's a shared `@context`, then isn't `{\"@context\": \"...\", \"@graph\": [{}, {}, {}]}` about as obvious as we can make it? I think the simple array-style for \"bushes\" works best when you have a bunch of JSON-LD document which may or may not have shared contexts, and you simply want to concatenate them. But this is decidedly off topic. 😄 But apparently still wants discussing. 😃 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413612330> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/48#issuecomment-413612330"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/48> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413612330> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413612330> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413612330> <http://schema.org/startDate> "2018-08-16T16:51:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413612330> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413612330> <http://schema.org/description> "This essentially duplicates the intention #26, and should be considered as part of that.\r\n\r\nAs part of the CI scripts, there is a Ruby script with extracts and does basic syntactic validation of all examples. This can be extended to automatically produce variations for expanded-, tabular, and turtle-representations (and YAML). It could also automatically encode a playground URL, if we decide to do this as well.\r\n\r\nI'd also like to use the script to validate that the examples produce what's expected, which should then be fairly straight-forward. Obviously, any help, both in terms of a dynamic UI to show this, and the work necessary to produce and update the doc with these, would be helpful." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413639415> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413639415"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413639415> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413639415> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413639415> <http://schema.org/startDate> "2018-08-16T18:21:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413639415> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413639415> <http://schema.org/description> "@davidlehn thanks for your detailed review and comments; some of these problems have been in the document for a while." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413650608> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26#issuecomment-413650608"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413650608> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413650608> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413650608> <http://schema.org/startDate> "2018-08-16T18:59:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413650608> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413650608> <http://schema.org/description> "@iherman do you know of any specs that use multiple representations/displays at once--thinking something like this would be nice https://schema.org/Person#Invoice-gen-43" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413662398> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26#issuecomment-413662398"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413662398> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413662398> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413662398> <http://schema.org/startDate> "2018-08-16T19:43:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413662398> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413662398> <http://schema.org/description> "@iherman originally referenced the [OWL Primer](https://www.w3.org/TR/owl2-primer/), but I'd like to do something more granular, say with buttons below examples, which would open each variation inline. The [ShEx Spec](http://shex.io/shex-semantics/) does something similar, but the key-binding is annoying (see example in http://shex.io/shex-semantics/#shapes-schema)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413739710> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413739710"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413739710> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413739710> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413739710> <http://schema.org/startDate> "2018-08-17T02:30:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413739710> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413739710> <http://schema.org/description> "@gkellogg Yeah, I figured as long as I was reading the diffs I might as well suggest changes on the moved text too.  I really didn't even think too much about the reorganization itself!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413755460> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/26#issuecomment-413755460"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/26> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413755460> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413755460> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413755460> <http://schema.org/startDate> "2018-08-17T04:39:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413755460> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413755460> <http://schema.org/description> "@BigBlueHat,  @gkellogg referred to the examples that would come to my mind..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413758559> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-413758559"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413758559> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413758559> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413758559> <http://schema.org/startDate> "2018-08-17T05:04:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413758559> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413758559> <http://schema.org/description> "Coming from turtle, the usage, that then allows predicates like `:name` is pretty natural (and widely used in turtle I believe). \r\n\r\nHowever... I wonder if this is something that comes naturally to a JSON user and whether it is, in fact, more twisting her mind rather than be helpful... which may backfire conveying the idea of JSON-LD being overly complex:-(\r\n\r\n(Honestly: I have never thought of using an empty string as a key in JavaScript or Python. I did not even realize this was possible...)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413895318> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413895318"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413895318> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413895318> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413895318> <http://schema.org/startDate> "2018-08-17T15:06:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413895318> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413895318> <http://schema.org/description> "Unfortunately, I don't have enough time to review this thoroughly right now, but I did skim it. Overall, I think it's an improvement to the structural reorganization of the advanced concepts and other latter sections. I'm a little concerned that we may have significantly upped the reading level with more complex language, but perhaps that can be addressed as needed in the future. It's good that the accessibility of the introduction and basic sections have been left as is." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413896769> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-413896769"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413896769> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413896769> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413896769> <http://schema.org/startDate> "2018-08-17T15:10:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413896769> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413896769> <http://schema.org/description> "I think we'd want some input from Markus (@lanthaler) on this one -- as he'd have to deal with it in his PHP implementation. I don't know if we'd be updating our PHP implementation any time soon ... nor do I know how widely it is used. I suppose if this change is accepted we might find out! :smile: " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413897351> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-413897351"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413897351> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413897351> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413897351> <http://schema.org/startDate> "2018-08-17T15:12:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413897351> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413897351> <http://schema.org/description> "This seems like a feature implementations could offer (a special mode to check for this sort of thing). I don't think we'd want this extra burden (or any similar extra burdens) added to the standard processing rules." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413898180> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-413898180"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413898180> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413898180> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413898180> <http://schema.org/startDate> "2018-08-17T15:15:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413898180> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413898180> <http://schema.org/description> "@dlongley I don't maintain an impl (so take a grain of salt with this question), but would  a configurable mode just shift the burden to the clients of impls instead of the maintainers of impls?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413905141> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-413905141"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413905141> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413905141> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413905141> <http://schema.org/startDate> "2018-08-17T15:39:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413905141> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413905141> <http://schema.org/description> "@ajs6f,\r\n\r\nYes, but I think that's where it should be. In fact, I think I'm speaking more with my client hat on than my implementer hat when I say that I do not want my production systems to have to deal with the extra burden of checking non-error cases to express warnings.\r\n\r\nI think it should be a goal to have a \"fast lane\" for JSON-LD processing to keep things as efficient as possible. I would prefer that the bottleneck in a complex software system never be JSON-LD processing. One way to help support that effort is to keep corner cases like raising warnings out of the standard processing mode." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413934630> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/47#issuecomment-413934630"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/47> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413934630> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413934630> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413934630> <http://schema.org/startDate> "2018-08-17T17:27:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413934630> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/413934630> <http://schema.org/description> "The new structure looks good to me. For FPWD it's already far better than most, so I think we should lock this one in. Further changes over time are obviously inevitable, and we can work on wording later in the WG." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414357640> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-414357640"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414357640> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414357640> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414357640> <http://schema.org/startDate> "2018-08-20T15:25:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414357640> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414357640> <http://schema.org/description> "> Coming from turtle, the usage, that then allows predicates like :name is pretty natural (and widely used in turtle I believe).\r\n\r\nHow important is it to match the Turtle *stylistically* in JSON-LD? Seems the risk (support in PHP < 7.1, confusingness, etc) may not worth the reward?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393318> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/39#issuecomment-414393318"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/39> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393318> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393318> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393318> <http://schema.org/startDate> "2018-08-20T17:14:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393318> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393318> <http://schema.org/description> "I believe these are all fixed in PR #49." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393425> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/49#issuecomment-414393425"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/49> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393425> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393425> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393425> <http://schema.org/startDate> "2018-08-20T17:14:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393425> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414393425> <http://schema.org/description> "Fixes #39." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414404899> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-414404899"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414404899> .
<https://api.github.com/users/lanthaler> <http://schema.org/accountId> "lanthaler" .
<https://api.github.com/users/lanthaler> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/456407?v=4" .
<https://api.github.com/users/lanthaler> <http://schema.org/url> "https://github.com/lanthaler"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lanthaler> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414404899> <http://schema.org/creator> <https://api.github.com/users/lanthaler> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414404899> <http://schema.org/startDate> "2018-08-20T17:50:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414404899> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414404899> <http://schema.org/description> "I don't understand what value this would add. On the other hand, I expect that such a feature would add a considerable amount of confusion. JSON-LD has `@vocab` which lets you achieve pretty much the same as Turtle does:\r\n\r\n```\r\n@prefix : <http://xmlns.com/foaf/0.1/> .\r\n\r\n#me :name \"Markus\"\r\n```\r\n\r\n```\r\n{\r\n  \"@context\" {\r\n    \"@vocab\": \"http://xmlns.com/foaf/0.1/\"\r\n  },\r\n  \"@id\": \"#me\",\r\n  \"name\": \"Markus\"\r\n}\r\n```\r\n\r\nNote how `name` doesn't have a prefix. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414408095> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-414408095"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414408095> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414408095> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414408095> <http://schema.org/startDate> "2018-08-20T18:00:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414408095> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414408095> <http://schema.org/description> "The motivation for allowing empty strings as keys in JSON-LD would simply be for completeness; IIRC, it was not allowed in 1.0 because of issues in PHP, otherwise, why create an exception. JSON, itself, [defines objects](https://tools.ietf.org/html/rfc8259#section-4) have having string keys referencing JSON values, with no restriction that the string be non-empty.\r\n\r\n>      object = begin-object [ member *( value-separator member ) ]\r\n>               end-object\r\n>      member = string name-separator value\r\n\r\nThat said, there's really not a compelling use case for allowing this now, and I'm 👍 for closing this issue as `wontfix`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414425983> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-414425983"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414425983> .
<https://api.github.com/users/lanthaler> <http://schema.org/accountId> "lanthaler" .
<https://api.github.com/users/lanthaler> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/456407?v=4" .
<https://api.github.com/users/lanthaler> <http://schema.org/url> "https://github.com/lanthaler"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lanthaler> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414425983> <http://schema.org/creator> <https://api.github.com/users/lanthaler> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414425983> <http://schema.org/startDate> "2018-08-20T18:59:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414425983> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414425983> <http://schema.org/description> "> We need a strategy to polyfill JSON-LD until the usefulness of features are backed by data instead of a very small group of intelligent and opinionated individuals deciding a features future usefulness based on a very small sample size. It's not how science should be done. :)\r\n\r\nHow would you envision that to work? With HTML etc. that works because browsers can leverage code-on-demand in the form of JavaScript. I don't think we should go down that route with a data interchange format that has to work across a plethora of languages, stacks, and contexts but unfortunately don't have an idea of how to make it work apart from providing a fall-back mechanism (an alternate URL?) for older processors to instead load a pre-processed document that they can understand at the expense of it perhaps consuming more bandwidth or being less idiomatic. Such fallback URLs could, of course, be web APIs whose sole purpose is to do such transformations." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414666993> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-414666993"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414666993> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414666993> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414666993> <http://schema.org/startDate> "2018-08-21T13:06:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414666993> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414666993> <http://schema.org/description> "Maybe we have this upside down. What if instead of putting the version number in the inbound document, we put that \"knowledge\" on the outbound side--i.e. \"this was processed as if it were a 1.1 document.\"\r\n\r\nFor instance, the list-of-lists situation is equally \"valid\" (i.e. expressible) in JSON-LD 1.0 and 1.1. However, the output post-processing is different (one creates a linear output list of stuff, the other a list containing lists which preserves what's visible in the JSON).\r\n\r\nWho should care about that fact more? The person creating the JSON-LD (which, in this case is identical in every respect) or the person processing it (which is where things become \"meaningful\")?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414719895> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414719895"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414719895> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414719895> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414719895> <http://schema.org/startDate> "2018-08-21T15:38:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414719895> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414719895> <http://schema.org/description> "One such tool may be https://github.com/trieloff/key2svg." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414720377> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414720377"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414720377> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414720377> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414720377> <http://schema.org/startDate> "2018-08-21T15:40:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414720377> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414720377> <http://schema.org/description> "@gkellogg indeed. Which is of course suboptimal, because keynote works on macOS only. I realized, lately, that Google Drawings, which one can use though Google drive, does also a decent job in creating SVG. From that point on, we can use the same process as you described, but the sources become more widely available." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414729904> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414729904"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414729904> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414729904> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414729904> <http://schema.org/startDate> "2018-08-21T16:08:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414729904> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414729904> <http://schema.org/description> "The only danger with Google Drawings that I can see is if they go away, for some reason, we've lost the source of the diagrams. Not really a bigger issue than we have already, since the spec only needs the produced graphics." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414733147> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414733147"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414733147> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414733147> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414733147> <http://schema.org/startDate> "2018-08-21T16:18:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414733147> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414733147> <http://schema.org/description> "The SVG would be in the repo, so I wonder what (if anything) we'd loose after saving out of Google Drawings. There's also [Inkscape](https://inkscape.org/en/)--which is open source and awesome." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414802039> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-414802039"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414802039> .
<https://api.github.com/users/lanthaler> <http://schema.org/accountId> "lanthaler" .
<https://api.github.com/users/lanthaler> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/456407?v=4" .
<https://api.github.com/users/lanthaler> <http://schema.org/url> "https://github.com/lanthaler"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lanthaler> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414802039> <http://schema.org/creator> <https://api.github.com/users/lanthaler> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414802039> <http://schema.org/startDate> "2018-08-21T19:58:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414802039> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414802039> <http://schema.org/description> "I'm not sure I follow what problem that would solve!?\r\n\r\nOn the receiving end users have full control over what processor they use (and they know which one they used). What they don't know - without additional information - is how the sender intended the message to be understood. The media type `application/ld+json` stipulates a contract that is defined by the 1.0 spec. Everything that breaks that contract needs to be communicated somehow to avoid \"unintended misunderstanding\" aka interoperability issues.\r\n\r\nUnlike HTML which is typically written for human consumption (i.e., extremely smart processors 😄) and can leverage code on demand, we unfortunately can't rely on a \"ignore everything unknown\" in this context. We need to actively break 1.0 processors if they would interpret the data incorrectly as that could have serious negative side effects." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414818287> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414818287"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414818287> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414818287> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414818287> <http://schema.org/startDate> "2018-08-21T20:53:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414818287> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414818287> <http://schema.org/description> "I'm a fan of Inkscape.  It was used to create the JSON-LD logo and buttons and such.  Minimal workflow info in the README and Makefile here:\r\nhttps://github.com/json-ld/json-ld.org/tree/master/images\r\n\r\nSVG font issues can sometimes be odd.  Like the logo text can get messed up if the right font isn't available.  Probably should be doing some embedded font or path conversion thing to handle that.  Consider that for these other images.\r\nhttps://github.com/json-ld/json-ld.org/issues/388" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414936340> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/52#issuecomment-414936340"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414936340> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414936340> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414936340> <http://schema.org/startDate> "2018-08-22T07:19:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414936340> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414936340> <http://schema.org/description> "I am fine with it now but, unfortunately, there is a strong push against longdesc which is (or will be?) removed from HTML. We may have to find another solution (e.g., using details or something similar). We may also have to look at ARIA attributes to see what can be reused from those instead." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414937344> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414937344"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414937344> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414937344> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414937344> <http://schema.org/startDate> "2018-08-22T07:23:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414937344> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414937344> <http://schema.org/description> "Unfortunately, in my experience, path conversion of texts is the only safe option. Alternatively, we may want to store font files alongside our spec and include them from the SVG via CSS. Embedded fonts, afaik, do not safely work in all SVG implementation.\r\n\r\nA warning: if SVG + CSS fonts are used, the image must be included into HTML using `object` and not `img`. Additional processing involving fetching resources is done only when the drawing comes via `object`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414985456> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-414985456"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414985456> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414985456> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414985456> <http://schema.org/startDate> "2018-08-22T10:21:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414985456> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/414985456> <http://schema.org/description> "@BigBlueHat @davidlehn there problems with inkspace for macOS. The direct download reports that the application has to be updated for Mac (I suspect it is not a 64 bit executable) and it would require me to install something else (quartz, I am not sure what it is); the homebrew version does not install, because there is an SHA256 mismatch in the package. I remember having looked at it before, and it was always problematic:-(" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021087> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-415021087"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021087> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021087> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021087> <http://schema.org/startDate> "2018-08-22T12:53:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021087> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021087> <http://schema.org/description> "> A warning: if SVG + CSS fonts are used, the image must be included into HTML using object and not img. Additional processing involving fetching resources is done only when the drawing comes via object.\r\n\r\nCan you elaborate on this?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021960> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-415021960"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021960> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021960> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021960> <http://schema.org/startDate> "2018-08-22T12:56:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021960> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415021960> <http://schema.org/description> "> @BigBlueHat @davidlehn there problems with inkspace for macOS. The direct download reports that the application has to be updated for Mac (I suspect it is not a 64 bit executable) and it would require me to install something else (quartz, I am not sure what it is); the homebrew version does not install, because there is an SHA256 mismatch in the package. I remember having looked at it before, and it was always problematic:-(\r\n\r\nGuessing you tried the `.dmg` here? https://inkscape.org/en/release/0.92.2/mac-os-x/\r\n\r\nXQuartz is an implementation of X Windows for the Mac: https://www.xquartz.org/ I'd moved to Mac from Linux, so having that was a forgone conclusion. 😄 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415022314> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-415022314"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415022314> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415022314> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415022314> <http://schema.org/startDate> "2018-08-22T12:57:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415022314> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415022314> <http://schema.org/description> "I'd vote we keep a \"working copy\" of the SVG that uses the fonts, etc, and then a publish-friendly flattened one. We can keep both in the same repo to track changes, etc." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415025606> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-415025606"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415025606> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415025606> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415025606> <http://schema.org/startDate> "2018-08-22T13:08:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415025606> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415025606> <http://schema.org/description> "@BigBlueHat, on https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-415021087: if you have an SVG file with linked fonts (ie, using the CSS url(.) command to get hold of the fonts) then:\r\n\r\n- if you use `<img src=\"f.svg\">` in the HTML, the font will _not_ be fetched and the drawing will go wrong\r\n- if you use `<object data=\"f.svg\">` in the HTML, things will work\r\n\r\nThe reason is something around whether the browser creates a full environment for the SVG or not and, it seems, that is not the case for img.I do not know the details..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415026295> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/51#issuecomment-415026295"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/51> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415026295> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415026295> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415026295> <http://schema.org/startDate> "2018-08-22T13:11:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415026295> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415026295> <http://schema.org/description> "> I'd vote we keep a \"working copy\" of the SVG that uses the fonts, etc, and then a publish-friendly flattened one. We can keep both in the same repo to track changes, etc.\r\n\r\nMy option would be to use SVG+CSS+fontfiles+`<object>`. That is clean and accessible. However, that may require to edit the SVG files by hands, I do not think that the interactive programs give you such a facility..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415068732> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/55#issuecomment-415068732"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415068732> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415068732> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415068732> <http://schema.org/startDate> "2018-08-22T15:15:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415068732> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415068732> <http://schema.org/description> "Maybe a post-processing script that makes id attributes for the examples from their titles, which we ensure are unique. It’s something ReSpec should do." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415069807> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/55#issuecomment-415069807"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415069807> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415069807> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415069807> <http://schema.org/startDate> "2018-08-22T15:17:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415069807> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415069807> <http://schema.org/description> "By post-processing I presume you mean a post-processing step as a plugin to respec, right? Shane was a master of doing these things..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415072181> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/52#issuecomment-415072181"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415072181> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415072181> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415072181> <http://schema.org/startDate> "2018-08-22T15:24:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415072181> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415072181> <http://schema.org/description> "Perhaps `area-describedby`, with use described [here](\r\nhttps://www.w3.org/TR/WCAG20-TECHS/ARIA15.html). We either make the referenced description visible, but much briefer, perhaps just the TriG, or we can make it hidden, which may be controversial. Perhaps just leave as is and wait for advice from external review." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415075149> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/52#issuecomment-415075149"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/52> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415075149> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415075149> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415075149> <http://schema.org/startDate> "2018-08-22T15:32:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415075149> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415075149> <http://schema.org/description> "Yep, we can choose a technique from that document. For the WP document, we made it very simple:\r\n\r\nhttps://www.w3.org/TR/wpub/#WP-diagram\r\n\r\nBut that does not scale when there are too many diagrams..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415087932> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/55#issuecomment-415087932"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415087932> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415087932> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415087932> <http://schema.org/startDate> "2018-08-22T16:08:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415087932> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415087932> <http://schema.org/description> "First, I should probably see about a PR to ReSpec to do this. But, we can get a callback from ReSpec and do it there as well. Really, ReSpec should have an option to do this, so that's probably the best bet, but we'll need to wait for it to be released, which shouldn't take too long." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415156053> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/53#issuecomment-415156053"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415156053> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415156053> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415156053> <http://schema.org/startDate> "2018-08-22T19:45:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415156053> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415156053> <http://schema.org/description> "I tried defining \"WebIDL-1\" and using it, but ReSpec emits standard references to WebIDL, so can't remove that. But, it sounds like the issue is with SpecRef not having the right definition for WebIDL, and the problem should be fixed there. We could override in our own local bibliography, but that doesn't change what ReSpec emits." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415167616> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415167616"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415167616> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415167616> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415167616> <http://schema.org/startDate> "2018-08-22T20:25:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415167616> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415167616> <http://schema.org/description> "@gkellogg could i request an example? I don't actually understand how the feature would be used? Is this what you mean:\r\n\r\n```turtle\r\n:fred _:b0 :barney .\r\n```\r\n\r\nIf so, i don't understand what that would mean and how it would be used practically speaking...." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415169147> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415169147"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415169147> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415169147> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415169147> <http://schema.org/startDate> "2018-08-22T20:30:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415169147> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415169147> <http://schema.org/description> "@pjohnston-wiley To my (possibly-wrong!) understanding, the issue is that what you show could be written down using JSON-LD 1.0. We are talking about making it illegal in JSON-LD 1.1, because (as you no doubt knew when you wrote it) it's not legitimate RDF 1.1.\r\n\r\n@gkellogg Do you think this might be a place to \"report forward\" to a potential future RDF WG? I don't think that we would have much to say absent any substantive examples." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415171179> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415171179"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415171179> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415171179> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415171179> <http://schema.org/startDate> "2018-08-22T20:37:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415171179> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415171179> <http://schema.org/description> "@ajs6f if that is the case, then i'd totally be supportive of keeping it out of JSON-LD 1.1, but i don't have the history of whether it is possible just because nobody thought to prevent it, or somewhere or another in the mists of time there is/was a legitimate use for it. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415191353> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415191353"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415191353> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415191353> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415191353> <http://schema.org/startDate> "2018-08-22T21:44:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415191353> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415191353> <http://schema.org/description> "@pjohnston-wiley Sure, that's exactly why I was [asking after](https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-412136250) examples." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415220727> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415220727"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415220727> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415220727> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415220727> <http://schema.org/startDate> "2018-08-22T23:30:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415220727> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415220727> <http://schema.org/description> "@pjohnston-wiley Yes, the ability to create properties as blank nodes was a \"feature\" of JSON-LD 1.0, and RDF 1.1 created a [Generalized Dataset](https://www.w3.org/TR/rdf11-concepts/#section-generalized-rdf) feature, specifically so this could be allowed. The idea was that some JSON developers may not be keen on creating and maintaining vocabularies, and allowing a property to resolve to a blank node would some how make this easier for them, but these blank node identifiers don't survive some of the algorithms, specifically Flattening and ToRdf, and are really of dubious value, IMHO.\r\n\r\n@ajs6f Don't know what we would report to a future RDF WG; there are other reasons for Generalized Datasets, and there may be some use cases for blank node properties, but these aren't really explored in JSON-LD.\r\n\r\nI'm not aware of _any_ use of this feature in the wild, and obsoleting/removing it in 1.0 could go against our charter, but not sure where the harm is done. A Common Crawl search might be able to find something that uses it, but I doubt it, as they're really not useable for anything other than a source syntax.\r\n\r\nThe use cases for blank node properties are better handled by document-relative IRIs." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415226307> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-415226307"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415226307> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415226307> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415226307> <http://schema.org/startDate> "2018-08-22T23:58:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415226307> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415226307> <http://schema.org/description> "The reason for this is that `@id`, `@type` and properties are expanded using different bases. Typically, `@id` refers to something in the document, a property something in the vocabulary, and `@type` may be either. Thus, when you see \"barney\" as a string value of \"fred\", it is looked up relative to the vocabulary, as you have `\"@type\": \"@vocab\"` in the term definition for \"fred\"; if you used `\"@type\": \"@id\"`, it would be document relative. When the algorithm sees `\"id\": \"barney\"`, it is always interpreted document relative.\r\n\r\nOne way to fake out `@id` resolution is to use Compact IRIs. You can also make `@vocab` expand to be document relative in 1.1 by setting `\"@vocab\": \"\"`.\r\n\r\nAs for the _why_ of this, it comes from the observation that documents and vocabularies are really different things, and the expansion rules need to consider this. Also, `@vocab` is a powerful feature that can lead to such confusing results.\r\n\r\nHere are some links to explore for the history:\r\n\r\n* json-ld/json-ld.org#49 ([discussion](https://json-ld.org/minutes/2012-01-24/#topic-1)]\r\n\r\nTurtle avoided this by always resolving relative IRIs to the base, and requiring prefixes (including the empty string \"\") for vocabulary terms. In JSON, the practice of using bare words as keys meant that we needed to interpret the intention of the JSON author to know what typically is used as a vocabulary term vs what is used for something within the document." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415231107> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/55#issuecomment-415231107"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415231107> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415231107> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415231107> <http://schema.org/startDate> "2018-08-23T00:25:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415231107> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415231107> <http://schema.org/description> "See w3c/respec#1810." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415286226> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/53#issuecomment-415286226"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/53> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415286226> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415286226> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415286226> <http://schema.org/startDate> "2018-08-23T04:27:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415286226> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415286226> <http://schema.org/description> "If we use our own bibliography with a different key, that should work.\r\n\r\nBut it is not urgent. These things become important when we get to a final document..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415287913> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415287913"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415287913> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415287913> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415287913> <http://schema.org/startDate> "2018-08-23T04:38:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415287913> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415287913> <http://schema.org/description> "The only place I heard of where bnodes as predicates appear are very technical: there are some more complex OWL deductions where, for \"intermediate\" steps (if described in terms of triples) they become necessary. To be honest, I do not remember the details, but I would think they are related to terms like inverse properties (where we would say \"there is a property that is the inverse of property p\").\r\n\r\nHowever, I do not think it is relevant for us. First of all, OWL reasoners rarely (if ever) use RDF as a formalism internally, and serializations like JSON-LD or Turtle are there to encode the _data_, not the deductions." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415395825> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-415395825"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415395825> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415395825> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415395825> <http://schema.org/startDate> "2018-08-23T12:24:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415395825> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415395825> <http://schema.org/description> "@gkellogg I guess that would be the report-- that JSON-LD 1.0 made it possible to write down generalized datasets, and no one seemed to care. 🤷‍♂️ " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415550264> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/44#issuecomment-415550264"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415550264> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415550264> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415550264> <http://schema.org/startDate> "2018-08-23T19:53:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415550264> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415550264> <http://schema.org/description> "When discussed in 1.0 it became an issue when the context is re-defined using `@context: null` and was rejected. For those using `http://schema.org`, this is already done for them, which probably covers most uses." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415551345> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/34#issuecomment-415551345"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415551345> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415551345> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415551345> <http://schema.org/startDate> "2018-08-23T19:57:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415551345> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415551345> <http://schema.org/description> "We should consider allowing any keyword that can take multiple values, such as `@graph`, to allow it's container model to be updated. A use case outlined in https://github.com/w3c/json-ld-syntax/issues/30#issuecomment-401941284 would do the following:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"dataset\": {\"@id\": \"@graph\", \"@container\": [\"@graph\", \"@id\"]}\r\n  },\r\n```\r\n\r\nIt should allow the following as well:\r\n\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@graph\": {\"@container\": [\"@graph\", \"@id\"]}\r\n  },\r\n```\r\n\r\nThis may need some extra sanity checking, as `@list`, or anything not including `@graph` would be prohibited.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415651056> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415651056"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415651056> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415651056> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415651056> <http://schema.org/startDate> "2018-08-24T04:58:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415651056> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415651056> <http://schema.org/description> "I believe we must do that. Embedded JSON-LD is, currently, the _only_ way schema.org data is used, and there are a number of application (e.g., Web Publications) where this is the sensible way to go.\r\n\r\nMy take on the the questions:\r\n \r\n> * Given multiple such script tags, which one is used?\r\n\r\nI see two options:\r\n\r\n1. Take the first script element in tree order\r\n2. Take all of them and merge the resulting graphs in the RDF sense\r\n\r\nBoth approaches provide a clear specification; I am more favor of No. 1\r\n\r\n> * Should we define a parameterized content-type to allow the version to be specified (e.g., `application/ld+json;version=1.1`)\r\n\r\nIf we define that for HTTP, then I guess it is necessary to follow that, yes.\r\n\r\n> * Does the current document base affect the base for JSON-LD processing?\r\n>  * location of  HTML document\r\n>      * `html>head>base@href`\r\n>     * `xml:base` of closest ancestor element\r\n\r\nI do not think we should go there. Per HTML spec, the `<script>` element's DOM Note has a `baseURI` property, whose exact specification is in the hands of the HTML spec. We ought just to take that one.\r\n\r\n> * Does the document language affect the default language for JSON-LD processing?\r\n>      * HTTP header- `Content-Language`\r\n>      * `@lang`, `@xml:lang`\r\n\r\nYes. I believe if, for example, somebody uses `<script ... lang=\"fr\">` (which is a perfectly valid HTML statement), we ought to use that. So again, whatever is valid for the script element as a node in HTML should be valid for the content of script.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415790456> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/34#issuecomment-415790456"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415790456> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415790456> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415790456> <http://schema.org/startDate> "2018-08-24T15:15:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415790456> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415790456> <http://schema.org/description> "[Resolution](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-17-json-ld#resolution3) on WG call of 2018-08-17:  `@type` (or an alias of it) can be set to be a `@container` (only), and if so it can have only the value of `@set`.  This allows the use case of requiring the field to always be an array for consistency, even if there's only one value.\r\n\r\nAnd [secondly](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-17-json-ld#resolution4), that we will not change @context as the processing would be extremely convoluted for minimal value.  \r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415791265> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415791265"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415791265> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415791265> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415791265> <http://schema.org/startDate> "2018-08-24T15:17:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415791265> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415791265> <http://schema.org/description> "@iherman I have to disagree a bit about which approach to take for multiple `<script/>`s. As a consumer of JSON-LD, I would find it surprising that I could \"read\" all these assertions in the document (every `<script/>`), but that only some would be read by machinery (those in the first wrt document order). \r\n\r\nBut I can also imagine situations in which (e.g. via CMS action) many `<script/>` elements wind up in a document with no real provenance, but I can clearly identify the one or few of interest to me.\r\n\r\nSo if we do make processing JSON-LD in HTML normative, do we need to offer a mechanism by which one or more (up to all) `<script/>`s can be selected from a document at processing time?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415799223> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-415799223"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415799223> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415799223> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415799223> <http://schema.org/startDate> "2018-08-24T15:44:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415799223> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415799223> <http://schema.org/description> "I'm convinced by @dlongley's argument. \r\n\r\nI'm in favor of close won't fix for the following rationale:\r\n\r\n* Per @dlongley, raising a warning but otherwise continuing is a burden for processing that in the regular case of it being a part of a much larger automated system will never be seen anyway, so just adds complexity and no value.\r\n* It could be an option to turn on when debugging your JSON-LD, and turned on by default in the playgrounds. But that's an implementation issue, not syntax or API.\r\n* It would break the (admittedly incorrect) existing usage in the schema example, but I wouldn't be surprised if someone had intentionally mapped `@label` to `rdf:label` to go along with `@type`, and it would certainly break them.\r\n* There is already a non-normative note at the end of 4.8 warning against making your own keys that start with `@`, and I think from a spec perspective that is the right approach." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801114> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-415801114"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801114> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801114> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801114> <http://schema.org/startDate> "2018-08-24T15:51:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801114> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801114> <http://schema.org/description> ":+1: to close won't fix as there's no use case we're actually solving here, and the confusion of mapping empty string to some value would be never-ending. \r\n\r\n```\r\n{\r\n\"@context\": {\r\n  \"\": \"@id\"\r\n  },\r\n  \"\": \"http://example.org/foo\"\r\n}\r\n```\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801600> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-415801600"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801600> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801600> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801600> <http://schema.org/startDate> "2018-08-24T15:52:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801600> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801600> <http://schema.org/description> "👍 to won't fix" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801839> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-415801839"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801839> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801839> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801839> <http://schema.org/startDate> "2018-08-24T15:53:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801839> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415801839> <http://schema.org/description> "@azaroth42 I'm actually fine with close-won't-fix, but I do want to address one point you make:\r\n> Per @dlongley, raising a warning but otherwise continuing is a burden for processing that in the regular case of it being a part of a much larger automated system will never be seen anyway, so just adds complexity and no value.\r\n\r\nI disagree _strongly_. It's exactly in the case of a large fully-automated system where I _want_ warnings from my libraries (instead of silent acquiescence), so that I can accumulate information that lets me improve workflows without them having to break down first. So although I agree that this ticket isn't a good case at all for emitting warnings, I disagree strongly that we could find _no_ such cases.\r\n\r\nJust my 2¢!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802263> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/34#issuecomment-415802263"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/34> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802263> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802263> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802263> <http://schema.org/startDate> "2018-08-24T15:55:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802263> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802263> <http://schema.org/description> "Interestingly, [someone](https://github.com/gkellogg) proposed this be allowed back in 2012:  https://github.com/json-ld/json-ld.org/issues/80#issuecomment-5420799   😀 \r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802470> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415802470"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802470> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802470> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802470> <http://schema.org/startDate> "2018-08-24T15:55:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802470> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415802470> <http://schema.org/description> "I agree that if an HTML has multiple script elements that they should all be considered and merged into a common dataset. My own RDFa processor looks for any script element with a type attribute associated with an RDF reader, along with Microdata and RDF/XML and extracts triples from all.\r\n\r\nThe issue about choosing among script tags was surfaced for the use case where the context references an HTML document with embedded JSON-LD script(s). In this case, which one would be used as the context, or would they all be used?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415806402> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415806402"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415806402> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415806402> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415806402> <http://schema.org/startDate> "2018-08-24T16:09:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415806402> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415806402> <http://schema.org/description> "> In this case, which one would be used as the context, or would they all be used?\r\n \r\nJust off the top of my head, I would be a bit worried about a merge in that situation because at least one of those `<script/>`s might contain a context meant for use with metadata for the page itself (e.g. publishing info, etc.). Perhaps we can offer a syntactic form that prioritizes sources within some larger context?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415810778> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415810778"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415810778> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415810778> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415810778> <http://schema.org/startDate> "2018-08-24T16:25:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415810778> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415810778> <http://schema.org/description> "@ajs6f I do sympathize with accepting several scripts, but I am not sure we have a clear story on how we would merge several JSON-LD snippets into one; hence my original proposal of keeping it to one. Would they be like several top level JSON-LD objects in an array? Are the JSON content simply concatenated as strings? What would the user expect?\r\n\r\nI am fine accepting several scripts if we have a clear story on this." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811210> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415811210"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811210> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811210> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811210> <http://schema.org/startDate> "2018-08-24T16:27:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811210> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811210> <http://schema.org/description> "@gkellogg \r\n\r\n> I agree that if an HTML has multiple script elements that they should all be considered and merged into a common dataset. My own RDFa processor looks for any script element with a type attribute associated with an RDF reader, along with Microdata and RDF/XML and extracts triples from all.\r\n\r\nI guess what you do is to merge these as RDF Graphs. This is also what I do in my RDFa+microdata processor. We can of course do that for several scripts, too, but I am a bit concerned whether this is something working with our user audience..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811565> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415811565"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811565> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811565> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811565> <http://schema.org/startDate> "2018-08-24T16:28:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811565> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811565> <http://schema.org/description> "@iherman You make a good point. For instance documents, we can indeed go to RDF merge, but contexts... have to think about that! 🤔 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811789> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-415811789"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811789> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811789> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811789> <http://schema.org/startDate> "2018-08-24T16:29:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811789> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415811789> <http://schema.org/description> "👍 to won't fix" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415822539> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-415822539"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415822539> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415822539> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415822539> <http://schema.org/startDate> "2018-08-24T17:11:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415822539> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415822539> <http://schema.org/description> "> but I am a bit concerned whether this is something working with our user audience...\r\n\r\nI've actually fielded Linter issues because of automatic creating of many (100's) of JSON-LD scripts in a document; I needed to encourage them to consolidate, but yes, it can happen for SEO." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415835647> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-415835647"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415835647> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415835647> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415835647> <http://schema.org/startDate> "2018-08-24T17:58:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415835647> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415835647> <http://schema.org/description> "Actually, in re-reading, re-thinking I'm :-1: to the issue as it doesn't round trip back to the right structure.  Lists of Lists is the critical one for GeoJSON-LD (and others), not being able to insert predicates into the structure. I think this one crosses the line into data transformation, which is not the point of a JSON-LD context." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415840310> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-415840310"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415840310> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415840310> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415840310> <http://schema.org/startDate> "2018-08-24T18:15:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415840310> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415840310> <http://schema.org/description> "I think the resolution to not fix w3c/json-ld-api#7 would be a precedent for close won't fix on this issue as well. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415842547> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/22#issuecomment-415842547"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415842547> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415842547> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415842547> <http://schema.org/startDate> "2018-08-24T18:24:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415842547> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415842547> <http://schema.org/description> "Is there a difference between this issue and #57? " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415846352> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/22#issuecomment-415846352"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415846352> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415846352> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415846352> <http://schema.org/startDate> "2018-08-24T18:37:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415846352> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415846352> <http://schema.org/description> "Not really. Except that #57 says\r\n\r\n> We've discussed making this normative, requiring JSON-LD processors to be able to identify and extract JSON-LD from a script tag with type application/ld+json within the HTML document.\r\n\r\nIe, it discusses details to be decided upon _provided_ this issue is accepted, ie, there is a resolution to turn that section in normative.\r\n\r\nMaybe voting on this could be done by email, we can then close it and concentrate on #57 if the decision is a 'yes'." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848014> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/22#issuecomment-415848014"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848014> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848014> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848014> <http://schema.org/startDate> "2018-08-24T18:44:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848014> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848014> <http://schema.org/description> "> Is there a difference between this issue and #57?\r\n\r\nNot really, my mistake for duplicating." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848392> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/22#issuecomment-415848392"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848392> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848392> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848392> <http://schema.org/startDate> "2018-08-24T18:45:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848392> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415848392> <http://schema.org/description> "Agree we can close this, and then work on the details in #57, and we may need to break out the different points into separate issues." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415906336> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-415906336"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415906336> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415906336> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415906336> <http://schema.org/startDate> "2018-08-24T23:18:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415906336> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415906336> <http://schema.org/description> "Just to document my thoughts in case this is ever revisited, here are two esoteric use cases:\r\n\r\n**Obfuscated JSON-LD**:\r\nThis is not really a serious use case, but could be fun to allow empty terms to mean something.\r\n\r\n**Term Compression**:\r\nIt could be an interesting experiment to try term compression by adding common terms to a context with short names.  For instance, if you had a large dataset such as:\r\n```js\r\n{\r\n  \"@context\": ...,\r\n  \"things\": [\r\n    {\r\n      \"@id\": \"urn:ex:1\",\r\n      \"a-rather-long-term-name\": { ... }\r\n    },\r\n    ... a million more items ...\r\n  ]\r\n}\r\n```\r\n\r\nOne could construct a context to \"compress\" this data:\r\n```js\r\n{\r\n  \"a\": \"a-rather-long-term-name\",\r\n  ...\r\n}\r\n```\r\n\r\nA compact phase would result in:\r\n```js\r\n  ...\r\n  \"things\": [\r\n    {\r\n      \"@id\": \"urn:ex:1\",\r\n      \"a\": { ... }\r\n    },\r\n    ... a million more items ...\r\n  ]\r\n```\r\n\r\nAnd later you could re-compact with some other context to recreate whatever structure and term names you need.  I'm unsure if this is actually useful.  Maybe it could be with huge datasets to save memory or space, I'm unsure?  Probably better to just use an alternate JSON serialization and/or regular compression tools.  But if it was useful, then having the empty term `\"\"` available would allow one term per context scope to compress very well!  There's certainly a tradeoff with the possible confusion of empty strings.  If anyone happens to stumble upon this issue and has a real use case like this, perhaps this could be revisited." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415917600> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-415917600"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415917600> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415917600> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415917600> <http://schema.org/startDate> "2018-08-25T00:56:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415917600> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/415917600> <http://schema.org/description> "Thanks @gkellogg for taking the time to provide the why and the suggestions, unfortunately they don't really help with the issue at hand (#wontfix notwithstanding). I'm not sure what the blank `@version` feature would do here - it's somewhat weird looking, and it doesn't appear to be implemented anywhere yet?\r\n\r\nI am fine with making the `@context` more complicated – in our case it is generated programmatically anyway. What i am less inclined to do is make our API developers have to consider RDF-ness in an API context.\r\n\r\n@azaroth42 One thing that allowed you to close [issue 7](https://github.com/w3c/json-ld-api/issues/7) was that there was a way to solve the problem using scoped contexts. So far i don't have a way to address this particular scenario. \r\n\r\nSo... I went down a couple of rabbit holes. \r\n\r\n### Overriding `@id` behavior\r\n\r\nSetting `id` to be of `@type` `@vocab` is syntactically valid, however the implementations currently ignore it.  This would actually make some sense to me.\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@base\": \"http://example3.com/\",\r\n    \"ex1\": \"http://example1.com/\",\r\n    \"ex2\": \"http://example2.com/\",\r\n    \"id\": {\r\n       \"@id\": \"@id\",\r\n       \"@type\": \"@vocab\"\r\n    },\r\n    \"fred\": {\r\n      \"@id\": \"ex1:fred\",\r\n      \"@type\": \"@vocab\"\r\n    },\r\n    \"barney\": {\r\n      \"@id\": \"ex2:barney\"\r\n    },\r\n    \"mnemonic\": \"rdf:value\"\r\n  },\r\n  \"fred\": [\r\n    {\r\n      \"id\": \"barney\",\r\n      \"mnemonic\": \"the sidekick\"\r\n    },\r\n    \"barney\"\r\n  ]\r\n}\r\n```\r\n\r\n### Scoped context\r\n\r\nNext i went the way of scoped contexts. This is not particularly elegant, but will work for the specific use case where the name of the alias matches the name portion of the IRI, and where you mostly operate under a single namespace IRI for the given property:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@version\": 1.1,\r\n    \"@base\": \"http://example3.com\",\r\n    \"ex1\": \"http://example1.com/\",\r\n    \"ex2\": \"http://example2.com/\",\r\n    \"id\": \"@id\",\r\n    \"fred\": {\r\n      \"@id\": \"ex1:fred\",\r\n      \"@type\": \"@id\",\r\n      \"@context\": {\"@base\": \"http://example2.com/\"}      \r\n    },\r\n    \"mnemonic\": \"rdf:value\"\r\n  },\r\n  \"fred\": [\r\n    {\r\n      \"id\": \"barney\",\r\n      \"mnemonic\": \"wilma\"\r\n    },\r\n    \"barney\"\r\n  ]\r\n}\r\n```\r\n\r\nNote i added `example3.com` to illustrate how this differs from the global default.\r\n\r\n> @gkellogg this only works on the dev playground - am i right that your [distiller](http://rdf.greggkellogg.net/distiller) doesn't yet support 1.1 features?\r\n\r\nHowever, outside of this narrow use case, you are stuck. For example, if you want to alias `barney` to `ex2:betty` there is no way to support this as far as i can tell. \r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416086943> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-416086943"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416086943> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416086943> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416086943> <http://schema.org/startDate> "2018-08-27T01:01:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416086943> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416086943> <http://schema.org/description> "[Resolved to Close](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-24-json-ld#resolution3)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416087041> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/44#issuecomment-416087041"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416087041> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416087041> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416087041> <http://schema.org/startDate> "2018-08-27T01:02:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416087041> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416087041> <http://schema.org/description> "[Resolved to close](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-24-json-ld#resolution4)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273093> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-416273093"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273093> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273093> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273093> <http://schema.org/startDate> "2018-08-27T15:51:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273093> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273093> <http://schema.org/description> "WG [resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-24-json-ld#resolution2) to add a non-normative note to the API specification to recommend that implementations generate a warning, however is appropriate for the implementation's language, when `@` signs are encountered outside of specified keywords. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273860> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/12#issuecomment-416273860"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/12> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273860> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273860> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273860> <http://schema.org/startDate> "2018-08-27T15:53:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273860> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416273860> <http://schema.org/description> "WG [resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-24-json-ld#resolution3) to close this issue won't fix, as there is no use case (beyond minified or obfuscated context declarations) and allowing it will generate confusion rather than add value." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416274382> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/44#issuecomment-416274382"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416274382> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416274382> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416274382> <http://schema.org/startDate> "2018-08-27T15:55:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416274382> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416274382> <http://schema.org/description> "WG [resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-24-json-ld#resolution4) to close, won't fix, but to open a new issue to create a best practice for a suggested context that could be imported into other contexts." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416276966> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/22#issuecomment-416276966"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/22> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416276966> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416276966> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416276966> <http://schema.org/startDate> "2018-08-27T16:03:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416276966> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416276966> <http://schema.org/description> ":+1: Closing, duplicate." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416283846> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/18#issuecomment-416283846"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416283846> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416283846> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416283846> <http://schema.org/startDate> "2018-08-27T16:26:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416283846> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416283846> <http://schema.org/description> "Reference for `rdf:nil`: https://www.w3.org/TR/rdf-schema/#ch_nil\r\n\r\nI don't know what `@null` is being referred to in the issue. There isn't a @null keyword. @none is only used for indexing, not lists.\r\n\r\n`[]` is a JSON syntax. `rdf:nil` is an RDF instance of an empty rdf:List, which could be serialized in JSON-LD to `[]`.\r\n\r\nIssue needs further clarification.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416291770> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/55#issuecomment-416291770"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/55> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416291770> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416291770> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416291770> <http://schema.org/startDate> "2018-08-27T16:53:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416291770> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416291770> <http://schema.org/description> "Fixed in ReSpec version 22.6.0." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416294064> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/60#issuecomment-416294064"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416294064> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416294064> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416294064> <http://schema.org/startDate> "2018-08-27T17:00:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416294064> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416294064> <http://schema.org/description> "Actually, in context, probably `@none`, but they aren't ignored. `Null` can't be used as a key in any kind of index map." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416303245> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/18#issuecomment-416303245"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416303245> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416303245> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416303245> <http://schema.org/startDate> "2018-08-27T17:29:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416303245> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416303245> <http://schema.org/description> "There is a `@null` keyword used in [Framing](https://w3c.github.io/json-ld-framing/):\r\n\r\n> `@null` Used in Framing when a value of `null` should be returned, which would otherwise be removed when Compacting.\r\n\r\nAs `[]` has special meaning in a frame, if you wanted _hasValue_ to reference an empty list, the idiomatic way to do that would be `\"hasValue\": {\"@list\": []}`.\r\n\r\nThe spec (framing) is clear on the definition of `@null` and it bears no relation to `rdf:nil`; the JSON-LD syntax, compacted or expanded, as appropriate, is used for all list representations.\r\n\r\nI believe there's nothing to do on this issue, and it can be closed with at most a mention in a best practices document." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416373718> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-416373718"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416373718> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416373718> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416373718> <http://schema.org/startDate> "2018-08-27T21:24:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416373718> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416373718> <http://schema.org/description> "> I'm not sure what the blank `@version` feature would do here - it's somewhat weird looking, and it doesn't appear to be implemented anywhere yet?\r\n\r\nYou probably meant \"blank `@vocab` feature\"; It sets the default vocabulary to be the same as the document base, which would mean that otherwise undefined terms could be expanded to the same as `@id`, so it sort of gets what you want; if you don't use undefined terms, then this isn't an issue. It should be implemented in my processor, available [here](http://rdf.greggkellogg.net/distiller), although it may need an update. The distill probably supports the most 1.1 features of any such online service, but needs to be updated when the underlying gems change, I can look at that.\r\n\r\n> Setting `id` to be of `@type` `@vocab` is syntactically valid, however the implementations currently ignore it. This would actually make some sense to me.\r\n\r\nWe specifically discussed this and decided to not allow changing the processing model of keywords such as `@type` and `@id`, other than to change their container behavior.\r\n\r\nIf you're in the case where you want the values of `@id` to be vocabulary relative, it sounds like you're defining a vocabulary, so it would make sense that `@base` be the same as `@vocab`, which you could either do for the document as a whole, or in a scoped or embedded context.\r\n\r\nYour second example should do what you want." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416625634> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/61#issuecomment-416625634"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/61> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416625634> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416625634> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416625634> <http://schema.org/startDate> "2018-08-28T15:14:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416625634> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416625634> <http://schema.org/description> "Fixed in 7ac01d29c50768c41eb174836546bb5b9f720620." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416626110> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/60#issuecomment-416626110"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/60> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416626110> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416626110> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416626110> <http://schema.org/startDate> "2018-08-28T15:15:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416626110> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416626110> <http://schema.org/description> "Fixed in 91ea2585063195ddfe9cfcc006f8f7d3a3ce074d." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416672320> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/16#issuecomment-416672320"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/16> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416672320> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416672320> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416672320> <http://schema.org/startDate> "2018-08-28T17:27:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416672320> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416672320> <http://schema.org/description> "Fixed in 760b32fd396e47f5ae0ff720c3f3c9a2080592eb." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416702531> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-416702531"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416702531> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416702531> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416702531> <http://schema.org/startDate> "2018-08-28T18:59:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416702531> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416702531> <http://schema.org/description> "I must admit I do not really understand this. Can someone shiw what that thing woukd mean in Turtle?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416704518> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-416704518"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416704518> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416704518> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416704518> <http://schema.org/startDate> "2018-08-28T19:06:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416704518> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416704518> <http://schema.org/description> "@iherman The original ticket has examples that were useful to me." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416728783> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-416728783"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416728783> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416728783> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416728783> <http://schema.org/startDate> "2018-08-28T20:26:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416728783> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416728783> <http://schema.org/description> ":+1: This is a better (IMO) solution for native JSON values such as GeoJSON than requiring every community to map all of their constructs into -LD. \r\n\r\nTo quote (with slight edits) the example from the original issue:\r\n\r\n```\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://example/\",\r\n    \"@base\": \"http://example/\",\r\n    \"json-value\": {\"@type\": \"@json\"}\r\n  },\r\n  \"@id\": \"foo\",\r\n  \"json-value\": {\"native\": \"json\"}\r\n}\r\n```\r\n\r\nThis seems very sensible, and fits with our charter. We can later make `@json` an alias for whatever literal type a future RDF WG might assign for JSON." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416752065> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-416752065"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416752065> .
<https://api.github.com/users/akuckartz> <http://schema.org/accountId> "akuckartz" .
<https://api.github.com/users/akuckartz> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/327651?v=4" .
<https://api.github.com/users/akuckartz> <http://schema.org/url> "https://github.com/akuckartz"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/akuckartz> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416752065> <http://schema.org/creator> <https://api.github.com/users/akuckartz> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416752065> <http://schema.org/startDate> "2018-08-28T21:48:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416752065> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416752065> <http://schema.org/description> "I would prefer a more LD friendly solution for GeoJSON. #7 ?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416756312> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-416756312"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416756312> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416756312> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416756312> <http://schema.org/startDate> "2018-08-28T22:05:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416756312> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416756312> <http://schema.org/description> "@akuckartz I didn't mean to imply that GeoJSON-LD was a bad thing to do, just that if the requirement is \"support native JSON data structures in the JSON-LD context\", then GeoJSON could be managed that way without then layering on GeoJSON-LD. GeoJSON-LD is great ... but if you don't need to interact with the -LD part of it, just record the JSON structure, there's overhead that could be minimized.  \r\n\r\nThere's a separate issue for the list of lists feature beyond #7 that was already accepted to be part of 1.1.  #7 would additionally let the semantics of the list of lists be expressed.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416757994> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-416757994"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416757994> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416757994> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416757994> <http://schema.org/startDate> "2018-08-28T22:12:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416757994> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416757994> <http://schema.org/description> "The key is the expanded form; my thought was that the previous example might expand to something like the following:\r\n\r\n```json\r\n[{\r\n  \"@id\": \"http://example/foo\",\r\n  \"http://example/json-value\": [{\r\n    \"@value\": {\"native\": \"json\"},\r\n    \"@type\": \"@json\"\r\n  }]\r\n}]\r\n```\r\n\r\nRegarding #7, this is not in conflict with a potentially more semweb-y mapping for GeoJSON, but there are other reasons why you might want to preserve raw JSON within JSON-LD.\r\n\r\nWhen turned into RDF, we would need a datatype to describe the value, so that you would get something like the following:\r\n\r\n```turtle\r\n@base <http://example/foo> .\r\n@prefix jsonld: <https://www.w3.org/ns/json-ld#> .\r\n\r\n<foo> <json-value> '{\"native\": \"json\"}'^^jsonld:json .\r\n```\r\n\r\nWhere the JSON is normalized to use minimal whitespace." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416803165> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-416803165"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416803165> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416803165> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416803165> <http://schema.org/startDate> "2018-08-29T02:31:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416803165> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/416803165> <http://schema.org/description> "I think defining a jsonld:json datatype woukd make a lot if sense at this day and age... and would offer a clean solution." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417002830> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-417002830"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417002830> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417002830> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417002830> <http://schema.org/startDate> "2018-08-29T15:48:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417002830> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417002830> <http://schema.org/description> "The issue is whether or not we can make it easier for ordered entries to be represented as arrays in JSON-LD, rather than only rdf:List.  For example [schema](https://schema.org/) has an `ItemList` that contains `ListItem`s, the [Ordered List Ontology](http://smiy.sourceforge.net/olo/spec/orderedlistontology.html) has an `OrderedList` with `Slot`s, and [OAI-ORE](http://openarchives.org/ore/1.0/datamodel) has an `Aggregation` with `Proxy`s. \r\n\r\nIf the only value that these resources are adding is the ability to express an order, and JSON-LD is not ontology specific (e.g. we don't otherwise give (much) preference to RDF/RDFS terms over any others) then it would be valuable to allow a context to express that the json array should be treated as a`schema:ItemList` rather than an `rdf:List`, with all of the equivalent blank nodes hidden in the machinery.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417005134> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-417005134"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417005134> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417005134> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417005134> <http://schema.org/startDate> "2018-08-29T15:55:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417005134> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417005134> <http://schema.org/description> "I've seen this come up in cultural heritage work in particular, where (e.g.) OAI-ORE is particularly important." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417307439> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-417307439"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417307439> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417307439> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417307439> <http://schema.org/startDate> "2018-08-30T12:49:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417307439> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417307439> <http://schema.org/description> "Thanks @ajs6f to push me to do my homework and read the original issue:-)\r\n\r\nI do feel a bit uneasy about this...\r\n\r\n- I realize that the point on ordering in schema.org _is_ a real issue in practice. We did hit the problem in the [Publication Manifest](https://www.w3.org/TR/wpub/) work because, for example, the order of authors of a paper is obviously important. \r\n- I also realize that the native (ie, triple level) representation of RDF lists is, to say the least, awkward.\r\n\r\nHowever... the awkwardness of RDF lists is mostly hidden to all users because it is relatively easy to handle them with the usual RDF serializations (including JSON-LD) maybe with the exception of RDF/XML when literal values are used. Ie, on the user level lists are fine, and the usual underlying machinery (SPARQL and others) can handle them already. The problem I see in JSON-LD+schema.org seems to be inherent to schema.org insofar as they shied away to include, say, an \"authorList\" property that would behave exactly like \"author\" except that the JSON-LD `@context` file would include the `@list` container statement. Ie, we have to be careful introducing new features...\r\n\r\nThat being said, I also see the value of the [proposal](https://github.com/json-ld/json-ld.org/issues/595#issuecomment-368239449) of @dlongley (or the [alternative version thereof](https://github.com/json-ld/json-ld.org/issues/595#issuecomment-368258625) of @gkellogg). I just wonder whether other, similar \"patterns\" may come up for other structures that would lead to a similar template because, after all, we are talking about baking in some sort of a template into JSON-LD..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417489163> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-417489163"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417489163> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417489163> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417489163> <http://schema.org/startDate> "2018-08-30T22:34:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417489163> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417489163> <http://schema.org/description> "Perhaps @danbri can common on the actual utility for schema.org use cases." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417494954> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-417494954"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417494954> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417494954> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417494954> <http://schema.org/startDate> "2018-08-30T23:02:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417494954> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417494954> <http://schema.org/description> "I wonder if this could leverage the `@nest` capability, which if you'll recall, allows you to nest properties of a node under an intermediate property. If that value were a node reference, then that could mean to apply the properties of the referenced node to the referencing node. For example:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://example/\",\r\n    \"id\": \"@id\", \r\n    \"type\": \"@type\",\r\n    \"eg\": \"http://example/\",\r\n    \"classification\": {\"@type\": \"@id\", \"@nest\": \"@id\"},\r\n    \"included\": {\"@container\": \"@id\"}\r\n  },\r\n  \"id\": \"1\",\r\n  \"type\": \"eg:Thing-with-Items\",\r\n  \"eg:items\": [\r\n    {\r\n      \"id\":\"2\",\r\n      \"classification\": \"enum:c6\",\r\n      \"service\": \"enum:s2\",\r\n    },\r\n    { \"id\": \"3...26 go here\", \"type\": \"eg:X\"}, \r\n    {\r\n      \"id\": \"27\",\r\n      \"classification\": \"enum:c6\"\r\n    }    \r\n  ],\r\n  \"included\": {\r\n    \"enum:c6\": {\"type\": \"eg:Type\", \"label\": \"Classification 6\"},\r\n    \"enum:p1\": {\"type\": \"eg:Person\", \"label\": \"Person 1\"},\r\n    \"enum:s2\": {\"type\": \"eg:Service\", \"label\": \"Login Service\"}\r\n  }  \r\n}\r\n```\r\n\r\nHere, the `\"classification\": {\"@type\": \"@id\", \"@nest\": \"@id\"}` could signal that nested properties are found through the referenced id, and that strings are interpreted as IRIs. This could expand to something like the following:\r\n\r\n```json\r\n[{\r\n  \"@id\": \"1\",\r\n  \"@type\": [\"http://example/Thing-with-Items\"],\r\n  \"http://example/items\": [{\r\n    \"@id\": \"2\",\r\n    \"@type\": [\"http://example/Type\", \"http://example/Service\"],\r\n    \"http://example/label\": [\r\n      {\"@value\": \"Classification 6\"},\r\n      {\"@value\": \"Login Service\"}\r\n    ]\r\n  }, {\r\n    \"@id\": \"2\",\r\n    ...\r\n  }, {\r\n    \"@id\": \"27\",\r\n    \"@type\": [\"http://example/Type\"],\r\n    \"http://example/label\": [{\"@value\": \"Classification 6\"}]\r\n  },\r\n  \"http://example/included\": [{\r\n    \"@type\": \"http://example/Type\", \"http://example/label\": [\"@value\": \"Classification 6\"]\r\n  }, {\r\n    \"@type\": \"http://example/Person\", \"http://example/label\": [\"@value\": \"Person 1\"]\r\n  }, {\r\n    \"@type\": \"http://example/Service\", \"http://example/label\": [\"@value\": \"Login Service\"]\r\n  }]\r\n}]\r\n```\r\n\r\nOf course, here may be issues with this, but it leverages the nesting concept and keyword and prevents needing to add a new keyword." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417499545> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-417499545"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417499545> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417499545> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417499545> <http://schema.org/startDate> "2018-08-30T23:24:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417499545> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417499545> <http://schema.org/description> "Will need to note that the whole feature is somewhat implementation dependent.  Native JSON serialization/deserialization issues may some effect on key ordering, float representation, etc." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417721306> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-417721306"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417721306> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417721306> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417721306> <http://schema.org/startDate> "2018-08-31T16:38:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417721306> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417721306> <http://schema.org/description> "Should perhaps be `jsonld:JSON` to better align with https://www.w3.org/TR/rdf11-concepts/#section-html" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417732560> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-417732560"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417732560> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417732560> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417732560> <http://schema.org/startDate> "2018-08-31T17:15:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417732560> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417732560> <http://schema.org/description> "Following discussion on WG call 2018-08-31, the current thinking is to close `wontfix`.  The complexity of the work is high, the value is circumstantial on the ontology following a particular design pattern, it would be out of synch with other RDF serializations, and the scope is sliding towards manipulation of triples rather than serialization of them.\r\n\r\nCombined with a `wontfix` for #7, I think we can propose a new design guideline of:\r\n\r\n> Describe serialization of graphs, not transformation of graphs.\r\n\r\nor similar.\r\n\r\n@danbri If this is still an important use case for schema.org, please can you weigh in before 2018-09-07? Thanks!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417733547> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-417733547"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417733547> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417733547> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417733547> <http://schema.org/startDate> "2018-08-31T17:19:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417733547> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417733547> <http://schema.org/description> "Following discussion on WG call 2018-08-31, the current thinking is to close `wontfix`. This is the transformation of data, rather than the serialization of it, as it creates new triples. It would be a lot of work, for limited situations where it adds value, and not be able to be round-tripped back to the original format.\r\n\r\nPlease weigh in by 2018-09-07." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417828316> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-417828316"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417828316> .
<https://api.github.com/users/mitar> <http://schema.org/accountId> "mitar" .
<https://api.github.com/users/mitar> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/585279?v=4" .
<https://api.github.com/users/mitar> <http://schema.org/url> "https://github.com/mitar"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/mitar> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417828316> <http://schema.org/creator> <https://api.github.com/users/mitar> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417828316> <http://schema.org/startDate> "2018-09-01T03:07:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417828316> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417828316> <http://schema.org/description> "I think it would be very sad if one could not use JSON-LD together with GeoJSON. It means that GeoJSON-LD community would have to fork JSON-LD and create its own dialect, just to support that.\r\n\r\nPlease see some comments in the [original issue](https://github.com/json-ld/json-ld.org/issues/397) and [the original discussion](https://github.com/geojson/geojson-ld/issues/32)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417845755> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-417845755"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417845755> .
<https://api.github.com/users/akuckartz> <http://schema.org/accountId> "akuckartz" .
<https://api.github.com/users/akuckartz> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/327651?v=4" .
<https://api.github.com/users/akuckartz> <http://schema.org/url> "https://github.com/akuckartz"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/akuckartz> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417845755> <http://schema.org/creator> <https://api.github.com/users/akuckartz> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417845755> <http://schema.org/startDate> "2018-09-01T09:21:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417845755> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417845755> <http://schema.org/description> "According to https://github.com/json-ld/json-ld.org/issues/397#issuecomment-401551948 that issue was closed in favor of this issue and now the declared intention is to also close this issue?\r\n\r\nMy experience is that the importance of geo-data is increasing significantly. JSON-LD should provide the necessary features to bridge the gap to GeoJSON - and vice versa." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417858614> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-417858614"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417858614> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417858614> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417858614> <http://schema.org/startDate> "2018-09-01T13:09:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417858614> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417858614> <http://schema.org/description> "> JSON-LD should provide the necessary features to bridge the gap to GeoJSON - and vice versa.\r\n\r\nThis is one of the reasons that I proposed https://github.com/w3c/json-ld-syntax/issues/33. We need to find a way for communities to sub-dialect JSON-LD in extensible ways that we know will never become mainstream JSON-LD. We need to provide a mechanism so that the GeoJSON community can use JSON-LD without impacting processors that don't want to support that particular feature. Without this, we're slamming the door in their face.\r\n\r\nThe only alternative I can think of is to create pre and post processing libraries for this specific use case to demonstrate that it is possible to trivially write .toGeoJSONLD() and .fromGeoJSONLD() functions. So, the other proposal is to enable pipelining in JSON-LD processors where you can inject a series of functions that are called before/after compaction/expansion." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865204> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-417865204"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865204> .
<https://api.github.com/users/mitar> <http://schema.org/accountId> "mitar" .
<https://api.github.com/users/mitar> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/585279?v=4" .
<https://api.github.com/users/mitar> <http://schema.org/url> "https://github.com/mitar"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/mitar> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865204> <http://schema.org/creator> <https://api.github.com/users/mitar> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865204> <http://schema.org/startDate> "2018-09-01T14:59:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865204> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865204> <http://schema.org/description> "@msporny I think you would get into interoperability hell in this way. The whole idea of standardization is to get to a common standard.\r\n\r\nIt is also not that GeoJSON requires many additions to JSON-LD. Community has identified one and proposed a solution. Maybe some other solution could also be found if this one is not desirable?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865353> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-417865353"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865353> .
<https://api.github.com/users/kgeographer> <http://schema.org/accountId> "kgeographer" .
<https://api.github.com/users/kgeographer> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/1753945?v=4" .
<https://api.github.com/users/kgeographer> <http://schema.org/url> "https://github.com/kgeographer"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kgeographer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865353> <http://schema.org/creator> <https://api.github.com/users/kgeographer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865353> <http://schema.org/startDate> "2018-09-01T15:00:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865353> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417865353> <http://schema.org/description> "See for example the developing Linked Places format spec [1], which is intended to be both valid JSON-LD and valid GeoJSON. It will be used for contributions to two aggregating systems for historical geodata, [Pelagios/Peripleo](http://peripleo.pelagios.org) and [World-Historical Gazetteer](http://whgazetteer.org).\r\n\r\nAt this point we have to tell users that coordinates are okay for Points, but for polygons and lines, to supply Well-Known Text (WKT). If they do, the data is no longer valid GeoJSON. We've gone ahead with this on a presumption that the JSON-LD community would find a fix - sure hope that's the case.\r\n\r\n[1] latest \"v3\" draft example and context here: https://github.com/LinkedPasts/linked-places/tree/master/new" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417867912> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-417867912"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417867912> .
<https://api.github.com/users/cwebber> <http://schema.org/accountId> "cwebber" .
<https://api.github.com/users/cwebber> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/55698?v=4" .
<https://api.github.com/users/cwebber> <http://schema.org/url> "https://github.com/cwebber"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/cwebber> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417867912> <http://schema.org/creator> <https://api.github.com/users/cwebber> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417867912> <http://schema.org/startDate> "2018-09-01T15:43:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417867912> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417867912> <http://schema.org/description> "From the previous bug, I [mentioned magnet URIs](https://github.com/json-ld/json-ld.org/issues/547#issuecomment-352326610) and @gkellogg said:\r\n\r\n> Cool, I was unaware of these. Of course, it's a \"de facto\" standard, so not really referencable.\r\n\r\nHonestly I think magnet URIs do half of what we want in a general and widely used way and can be used with a variety of p2p networks.  Maybe it's time to actually standardize them?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417894036> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-417894036"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417894036> .
<https://api.github.com/users/workergnome> <http://schema.org/accountId> "workergnome" .
<https://api.github.com/users/workergnome> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/34536?v=4" .
<https://api.github.com/users/workergnome> <http://schema.org/url> "https://github.com/workergnome"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/workergnome> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417894036> <http://schema.org/creator> <https://api.github.com/users/workergnome> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417894036> <http://schema.org/startDate> "2018-09-01T23:23:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417894036> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417894036> <http://schema.org/description> "I can say that this is a feature that would make my life significantly better--we've been using `@embed: @always` to deal with this which is not an optimal solution.  And it would be really, really nice to have more alignment between JSON-LD and JSON-API, and this is one of the major differences that makes that hard to do." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417915605> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-417915605"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417915605> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417915605> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417915605> <http://schema.org/startDate> "2018-09-02T09:03:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417915605> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/417915605> <http://schema.org/description> "I wonder whether this is for us to deal with. If the value of `@id` is a URI but not _necessarily_ an HTTP URI, then JSON-LD can use any scheme that the community defines out there, we should not be the ones defining it.\r\n\r\nThe only one so far that seems to be different is the separate `@integrity` approach which would need some extra terms. I wonder, however, if we should not make it somehow more general, by allowing for something like `@fetch-attributes` (probably not the right term) that would allow the addition of extra attributes that are related to the fetch of the content. Ie, one could have something like \r\n\r\n```json\r\n\"@context\" : {\r\n    \"@id\" : \"https://...\",\r\n   \"@fetch-attribute\" : {\r\n        \"integrity\" : \"sha384-Li9vy3...\",\r\n       \"crossorigin\": \"anonymous\",\r\n      \".....\"\r\n   }\r\n}\r\n```\r\n\r\nMy worry is to cast in concrete keywords reflecting the state of today and not be future proof enough in an area that is fast evolving.\r\n\r\n(Caveat: I am not an expert in all these various fetch attributes...)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418462320> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418462320"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418462320> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418462320> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418462320> <http://schema.org/startDate> "2018-09-04T18:00:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418462320> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418462320> <http://schema.org/description> "[WG resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-08-31-json-ld#resolution4) to add a @JSON keyword, mapped to jsonld:JSON to identify the JSON data type." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418495627> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418495627"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418495627> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418495627> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418495627> <http://schema.org/startDate> "2018-09-04T19:49:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418495627> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418495627> <http://schema.org/description> "I'm concerned this opens a Pandora's box...or maybe several. Sadly, I wasn't here for the call and had overlooked this issue earlier, so I fear I'm only just now raising these concerns...\r\n\r\nWe're (rather passively) introducing a namespace specific to JSON-LD: `https://www.w3.org/ns/json-ld#`\r\n\r\nWe're inviting developers to avoid/ignore the graph model JSON-LD encodes:\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"data\": {\"@type\": \"@json\"}\r\n  },\r\n  \"data\": {\"everything\": \"imaginable\"}\r\n}\r\n```\r\n\r\nI fear providing this as a \"solution for native JSON values such as GeoJSON\" sends the wrong message...and it begins to invalidate the reason to have JSON-LD at all (see the example above).\r\n\r\nAre we also planning to do this for YAML? Because the use cases would be identical..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418496867> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/17#issuecomment-418496867"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418496867> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418496867> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418496867> <http://schema.org/startDate> "2018-09-04T19:54:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418496867> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418496867> <http://schema.org/description> "I don't personally have this use case, but I support its inclusion. Control over the shape of the JSON result is the goal, and this is a particular structure that otherwise cannot be generated." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498217> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418498217"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498217> .
<https://api.github.com/users/cwebber> <http://schema.org/accountId> "cwebber" .
<https://api.github.com/users/cwebber> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/55698?v=4" .
<https://api.github.com/users/cwebber> <http://schema.org/url> "https://github.com/cwebber"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/cwebber> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498217> <http://schema.org/creator> <https://api.github.com/users/cwebber> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498217> <http://schema.org/startDate> "2018-09-04T19:58:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498217> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498217> <http://schema.org/description> "Having implemented the RDF canonicalization spec with a minor headache, this sounds like a full on migraine.\r\n\r\nyo dawg I heard you like canonicalization so I put a tree data serialization canonicalization algorithm in your graph data serialization canonicalization algorithm so you can normalize while you normalize" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498982> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418498982"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498982> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498982> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498982> <http://schema.org/startDate> "2018-09-04T20:01:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498982> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418498982> <http://schema.org/description> "@kgeographer I think you're confusing the (accepted) list-of-lists issue with the ability to associate predicates with arbitrary data structures (this issue). Users in 1.1 would absolutely be able to represent the polygons and lines with the regular GeoJSON construction of a list of lists. What they would not be able to do is generate new information that the inner list is an instance of the class `geojson:Coordinate` that has two properties `geojson:longitude` and `geojson:latitude` which are the values of the list in that order.\r\n\r\nThe rabbit hole would then be that any arbitrary structure could have contexts inject arbitrary information into instances that would be invisible to the instance until expanded with the context, and not round trip back to the same format when it is compacted. \r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418500699> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418500699"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418500699> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418500699> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418500699> <http://schema.org/startDate> "2018-09-04T20:07:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418500699> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418500699> <http://schema.org/description> "@BigBlueHat I appreciate (and to some extent share) that concern, but I wonder if there's a historical analogy: I've not seen the kind of problem you are describing using XML literals within RDF/XML. That may not be a valid analogy, but it's a bit suggestive..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418502972> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418502972"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418502972> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418502972> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418502972> <http://schema.org/startDate> "2018-09-04T20:14:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418502972> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418502972> <http://schema.org/description> "Re YAML, I don't think we would do that, because (a) no one has asked for it and (b) YAML is a non-normative deliverable of how the patterns of JSON-LD could be used in YAML to accomplish the same ends. The charter says:  \"JSON-LD 1.1 examples specified in YAML\" not a normative YAML-LD Rec.\r\n\r\nWe would be introducing a namespace, yes. We could also (as discussed on the call) add the data type to the RDF namespace, but we at least would need to document it. The consensus was that the creation of a new namespace was less work than putting it into an existing one, and a future RDF WG could take it over down the line.\r\n\r\nI agree with @ajs6f about the use of [XML literals in RDF/XML](https://www.w3.org/TR/rdf-syntax-grammar/#section-Syntax-XML-literals). Yes, you can create pointless RDF that simply wraps a single literal in XML or JSON ... but why would you bother to do that? It seems like an enormous waste of your time other than to meet some badly worded RFP.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418505011> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-418505011"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418505011> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418505011> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418505011> <http://schema.org/startDate> "2018-09-04T20:22:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418505011> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418505011> <http://schema.org/description> "In the HTML5 note, there is this caveat:\r\n> There are notable differences in the manner in which Web browsers and other software stacks outside the HTML context handle URLs.\r\n\r\nGiven that JSON-LD is not just for web browsers, before we could accept this change, I think we should determine the extent to which the caveat would make life more difficult.  I propose we do not take action on this issue until we can address the concern." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418506085> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-418506085"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418506085> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418506085> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418506085> <http://schema.org/startDate> "2018-09-04T20:25:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418506085> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418506085> <http://schema.org/description> "Proposal: Add an editorial warning to the 1.1 specification that the use of blank nodes as predicates is possible, but that it is deprecated and recommended for removal in a hypothetical JSON-LD 2.0" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507053> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-418507053"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507053> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507053> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507053> <http://schema.org/startDate> "2018-09-04T20:28:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507053> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507053> <http://schema.org/description> "👍, especially since we have yet to come up with an example (unless I missed it in the conversation)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507776> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-418507776"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507776> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507776> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507776> <http://schema.org/startDate> "2018-09-04T20:31:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507776> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418507776> <http://schema.org/description> "Per json-ld-api#33, I prefer a new keyword rather than overloading permutations of existing keywords which has proven confusing in the past. That said, `@nest: @id` seems reasonably close to the desired semantics for the relevant keywords and functionality and `@nest` is new in 1.1\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418508742> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-418508742"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418508742> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418508742> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418508742> <http://schema.org/startDate> "2018-09-04T20:34:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418508742> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418508742> <http://schema.org/description> "Propose to discuss this at TPAC in a joint session with DXWG." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509284> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-418509284"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509284> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509284> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509284> <http://schema.org/startDate> "2018-09-04T20:36:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509284> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509284> <http://schema.org/description> "@azaroth42 Is there a DXWG issue to which we can link this?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509653> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-418509653"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509653> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509653> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509653> <http://schema.org/startDate> "2018-09-04T20:37:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509653> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418509653> <http://schema.org/description> "https://github.com/w3c/dxwg/issues/261 :)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418513562> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/64#issuecomment-418513562"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418513562> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418513562> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418513562> <http://schema.org/startDate> "2018-09-04T20:51:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418513562> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418513562> <http://schema.org/description> "I'm a strong :-1: on this sort of thing. I believe that contexts should not do data transformation, only assert a mapping between JSON keys and the graph structure that already exists.  This is a reductio argument against #7 and #15." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418520578> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/17#issuecomment-418520578"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418520578> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418520578> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418520578> <http://schema.org/startDate> "2018-09-04T21:15:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418520578> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418520578> <http://schema.org/description> "The implication would be that, when expanding, those single values would be treated as list entries as well, which is just what the current algorithm does.\r\n\r\nIf the default for compaction was otherwise, we could consider `\"@container\": [\"@list\", \"@set\"]` as a way of always compacting to the array form, and default to the non-array form for single items. We could potentially consider this for `@version: 1.1` behavior, if we don't consider this an incompatibility. Currently, that combination is illegal. This is generally how `@set` is used for other container types and would be the principle of least surprise.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418522388> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418522388"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418522388> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418522388> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418522388> <http://schema.org/startDate> "2018-09-04T21:22:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418522388> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418522388> <http://schema.org/description> "There are other cases where there might be special \"template\" processing for array members, such as #15, but these are fundamentally much different than existing JSON-LD behavior.\r\n\r\nWe might, at some time, consider a spec for \"JSON-LD Templating\", that would allow these to be treated using the same mechanism, so that templates could be applied to successive (possibly repeating) array values to perform different transformations, but I would not like to see this as part of the core API. This might also provide a mechanism for another group (such as the JSON-LD CG) to foster such a specification. Simply seeing otherwise illegal constructs in a context definition is probably sufficient to key in the extension; the `\"@version\": 1.1` is really necessary because JSON-LD 1.0 was not strict enough in processing context/term definitions, so things like this could be missed." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418523826> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418523826"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418523826> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418523826> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418523826> <http://schema.org/startDate> "2018-09-04T21:27:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418523826> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418523826> <http://schema.org/description> "As @ajs6f points out, other RDF syntaxes that leverage languages have a similar mechanism for including raw XML or HTML, this is really no different.\r\n\r\nFor RDF canonicalization, such values would be treated just as other datatyped literals. Part of the RDF serialization aspects should include whitespace normalization, which is fairly standard in JSON, so I don't really appreciate why things such as RDF Dataset Normalization and signatures would be at any disadvantage." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418525018> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418525018"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418525018> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418525018> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418525018> <http://schema.org/startDate> "2018-09-04T21:31:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418525018> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418525018> <http://schema.org/description> "@BigBlueHat worries about introducing a new namespace:\r\n\r\n> We're (rather passively) introducing a namespace specific to JSON-LD: `https://www.w3.org/ns/json-ld#`.\r\n\r\nIn fact, this namespace already exists for URIs such as `http://www.w3.org/ns/json-ld#expanded` used in HTTP headers.\r\n\r\nHowever, we don't need to use this namespace, and @iherman suggested that we could probably use the RDF namespace `http://www.w3.org/1999/02/22-rdf-syntax-ns#` and use `http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON` as the datatype, making it first-class with `XMLLiteral` and `HTML` datatypes. Updating the RDF namespace document is something we can do, apparently.\r\n\r\nI agree that this no longer serves for GeoJSON, and we should consider some other example, but such examples doubtless exist, which is why this is a compelling feature." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418603072> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418603072"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418603072> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418603072> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418603072> <http://schema.org/startDate> "2018-09-05T05:23:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418603072> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418603072> <http://schema.org/description> "I guess we can all agree that this is (a) technically doable (b) it may require normalization of the literal (at least optionally) and (c) it is not fundamentally different from the XML and HTML datatypes. (E.g., if we do have a standard for RDF canonicalization at some point, that standard must address the issue of literals and their normalization (or not), and the issues raised by @cwebber are also genuine problems for HTML literals.)\r\n\r\nHowever. I guess we are back to our design principles set out at the beginning of the WG's life. We should not do this just because we can; we should have proper use cases, see [relevant section](https://www.w3.org/2018/json-ld-wg/WorkMode/guiding_principles#require-real-use-cases-with-actual-instance-data). I cannot judge whether GeoJSON is a use case or not." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418604364> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418604364"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418604364> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418604364> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418604364> <http://schema.org/startDate> "2018-09-05T05:31:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418604364> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418604364> <http://schema.org/description> "(Admin comment) I think there are several issues around that refer to GeoJSON. I think that it would be more fruitful to give these a rest and have these issues discussed on a dedicated session at the F2F at TPAC." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418606546> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/64#issuecomment-418606546"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418606546> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418606546> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418606546> <http://schema.org/startDate> "2018-09-05T05:45:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418606546> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418606546> <http://schema.org/description> "We do have exactly this issue in the [Web Publication Manifest](https://w3c.github.io/wpub/#wp-properties) and the draft includes a separate [\"canonical manifest\" section](https://w3c.github.io/wpub/#canonical-manifest) that defines a number of transformation steps like this one.\r\n\r\nHowever, even with this example around, I am wary of such feature for JSON-LD 1.1. We should not use the context feature for data transformation. It may open pandora's box. We may want to look at this issue in general at some point, but that may have to be treated separately and probably needs a longer incubator period. For example, even if we did it, we should may want to have an explicitly different mechanism defined for this, not part of `@context` but a separate `@transform` patterns to make it more explicit and not make `@context` even more complex that it is. It may also touch on RDF graph transformations, ie, not necessarily bound to a particular serialization.\r\n\r\nAt this moment, I am 👎 on this... " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629069> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-418629069"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629069> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629069> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629069> <http://schema.org/startDate> "2018-09-05T07:32:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629069> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629069> <http://schema.org/description> "I _think_ I understand the intention ([references to other syntaxes](https://github.com/json-ld/json-ld.org/issues/650#issuecomment-387114000) help a lot), but I do not understand the exact mechanism. The [playground example](http://tinyurl.com/yd5z87xg) doesn't help, all three snippets on the screen look identical to me (the `@context` are all the same). Can someone provide a clearer proposal?\r\n\r\n(If my understanding is remotely correct, it is also based on the new `@container` feature involving `@id`. I must admit that I am increasingly worried about overloading meanings. `\"@container\":\"@list\"` is used for the characterization of objects, whereas `\"@container\":\"@id\"` is for indexing. These are very different notions in my mind, and I would prefer to make things explicit by using some sort of a `@index` keyword of some sort. Overloading meanings make the language more difficult to understand.)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629469> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418629469"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629469> .
<https://api.github.com/users/Fak3> <http://schema.org/accountId> "Fak3" .
<https://api.github.com/users/Fak3> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/991641?v=4" .
<https://api.github.com/users/Fak3> <http://schema.org/url> "https://github.com/Fak3"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Fak3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629469> <http://schema.org/creator> <https://api.github.com/users/Fak3> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629469> <http://schema.org/startDate> "2018-09-05T07:33:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629469> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418629469> <http://schema.org/description> "> There's a separate issue for the list of lists feature beyond #7 that was already accepted to be part of 1.1.\r\n\r\n@azaroth42 is there a github issue for the list of lists support? If not, may I create one?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418726271> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/64#issuecomment-418726271"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418726271> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418726271> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418726271> <http://schema.org/startDate> "2018-09-05T13:15:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418726271> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418726271> <http://schema.org/description> "FWIW, Google's [Structured Data Testing Tool](https://search.google.com/structured-data/testing-tool) (which only supports one vocabulary: Schema.org) makes some undeclared assumptions (based on that single vocabulary) which amount to this sort of coercion.\r\n\r\nYou can see a more complete description in [this comment over at the WPUB repo](https://github.com/w3c/wpub/issues/314#issuecomment-415885945), but essentially, there's an unexpressed \"default\" `Thing` class into which string values get coerced:\r\n\r\n```json\r\n{\"@context\": \"http://schema.org/\", \"@type\": \"Book\",\r\n \"publisher\": \"asdf\"}\r\n```\r\nbecomes\r\n```json\r\n{\"@context\": \"http://schema.org/\", \"@type\": \"Book\",\r\n \"publisher\": {\"@type\": \"Thing\", \"name\": \"asdf\"}}\r\n```\r\n\r\nThis does feel like it moves the needle from vocabulary into ontology." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418729179> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-418729179"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418729179> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418729179> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418729179> <http://schema.org/startDate> "2018-09-05T13:24:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418729179> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418729179> <http://schema.org/description> "> I believe we must do that. Embedded JSON-LD is, currently, the only way schema.org data is used, and there are a number of application (e.g., Web Publications) where this is the sensible way to go.\r\n\r\n@iherman for the record, JSON-LD is the *recommended* way, but Google (at least) supports RDFa and Microdata for Schema.org extraction: https://developers.google.com/search/docs/guides/intro-structured-data#structured-data-format Additionally, Bing only recently (this past quarter) added JSON-LD support, but prior to that processed both RDFa and Microdata (afaik). Lastly, [Open Graph Protocol](http://ogp.me/) is popular with sites targeting \"social embedding\" on Facebook, LinkedIn, etc (it's even in use on this page).\r\n\r\nConsequently, I'd love to explore a WG Note (or some such) that helps resolve some of the vagueness around mixing these things together (which happens often)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418732695> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-418732695"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418732695> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418732695> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418732695> <http://schema.org/startDate> "2018-09-05T13:35:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418732695> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418732695> <http://schema.org/description> "Relates to #57." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418737560> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-418737560"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418737560> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418737560> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418737560> <http://schema.org/startDate> "2018-09-05T13:48:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418737560> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418737560> <http://schema.org/description> "> I do not see any attributes for the script element that would/could affect the JSON-LD processing. I other words, I believe all other attributes can be ignored as far as JSON-LD is concerned. Which means that spec-ing all this does not look like an overcomplicated issue...\r\n\r\nI'm concerned that making the exterior \"packaging\" influence the \"contents\" that heavily introduces far too much overhead and confusion--especially when considering CMS and SEO usage where the same snippet of JSON-LD might be injected into multiple pages or even sites.\r\n\r\nAlso, with the exception of text direction, base and language already have their equivalences in JSON-LD, so the \"can't edit HTTP headers\" scenario doesn't apply for those.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418738473> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/44#issuecomment-418738473"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/44> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418738473> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418738473> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418738473> <http://schema.org/startDate> "2018-09-05T13:51:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418738473> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418738473> <http://schema.org/description> "The new issue opened to \"create a best practice for a suggested context\" https://github.com/w3c/json-ld-syntax/issues/59" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418742559> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-418742559"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418742559> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418742559> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418742559> <http://schema.org/startDate> "2018-09-05T14:02:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418742559> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418742559> <http://schema.org/description> "I am not sure I understand the problem. Obviously, if the JSON-LD content has, e.g., a language setting, that overrules everything else. The issue is when this is not the case.\r\n\r\nIf an author includes JSON-LD via a script tag, I would think that she would expect, e.g., and explicit language setting to be valid for the metadata expressed in JSON-LD, too (unless explicitly stated otherwise in the metadata)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418744387> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418744387"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418744387> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418744387> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418744387> <http://schema.org/startDate> "2018-09-05T14:08:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418744387> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418744387> <http://schema.org/description> "> (Admin comment) I think there are several issues around that refer to GeoJSON. I think that it would be more fruitful to give these a rest and have these issues discussed on a dedicated session at the F2F at TPAC.\r\n\r\nOnly if we'll have GeoJSON folks on hand. Otherwise, we'll be flying blind on the topic...\r\n\r\nPerhaps we can at least create a list (pre-TPAC) of GeoJSON related needs/wants with the help of @kgeographer and others, so that we can have some targets to hit (or not hit) when the time comes.\r\n\r\nAdditionally, we might consider inviting a few of the GeoJSON-LD and LinkedPasts folks to a call (or two) to help us understand their use cases better." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418747795> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418747795"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418747795> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418747795> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418747795> <http://schema.org/startDate> "2018-09-05T14:18:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418747795> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418747795> <http://schema.org/description> "Huge 👍 s to getting some f2f or 'phone time with GeoJSON folks. Perhaps we can reach out and see if anyone from that community will be at TPAC and available to talk?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418751716> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418751716"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418751716> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418751716> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418751716> <http://schema.org/startDate> "2018-09-05T14:28:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418751716> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418751716> <http://schema.org/description> "> Only if we'll have GeoJSON folks on hand. Otherwise, we'll be flying blind on the topic...\r\n\r\nObviously, that would be the ideal. But even if they cannot be around, we seem to\r\n\r\n1. have a number of issues that are all around GeoJSON\r\n1. have some people in the group may have knowledge on GeoJSON that can help others (like me…) to make informed decision\r\n\r\nA F2F meeting seems to be a good place to concentrate on this." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418817316> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418817316"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418817316> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418817316> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418817316> <http://schema.org/startDate> "2018-09-05T17:39:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418817316> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418817316> <http://schema.org/description> "@Fak3 The lists of lists issue is #36, and it was closed as support was added for recursive lists." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418836221> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418836221"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418836221> .
<https://api.github.com/users/cwebber> <http://schema.org/accountId> "cwebber" .
<https://api.github.com/users/cwebber> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/55698?v=4" .
<https://api.github.com/users/cwebber> <http://schema.org/url> "https://github.com/cwebber"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/cwebber> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418836221> <http://schema.org/creator> <https://api.github.com/users/cwebber> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418836221> <http://schema.org/startDate> "2018-09-05T18:37:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418836221> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418836221> <http://schema.org/description> "> For RDF canonicalization, such values would be treated just as other datatyped literals. Part of the RDF serialization aspects should include whitespace normalization, which is fairly standard in JSON, so I don't really appreciate why things such as RDF Dataset Normalization and signatures would be at any disadvantage.\r\n\r\nIt isn't that simple.  Whitespace is not the only issue.  We will probably have to support something like [this json canonicalization spec](https://tools.ietf.org/html/draft-rundgren-json-canonicalization-scheme-01) or something.  That's a lot of extra work.\r\n\r\nThere's also a huge risk that people will open this loophole much, much wider than is anticipated, marking giant swaths of content as json-only.  Yeah, I guess that's true for XML too, but to be honest no sane person could operate on XML-RDF as if it were real XML and have things survive... it was an RDF serialization format and little more.  Here people are actually working with json-ld as if it were normal json and getting reasonable RDF interop.  There are pain points occasionally, and we should try to remedy those, but I think this is opening an escape hatch that a good number of people will jump straight through.\r\n\r\nCareful about rubbing this lamp... I think fulfilling this wish will have more side effects than anticipated and may undo a lot of the goals of json-ld.  -1 from me." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418837756> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418837756"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418837756> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418837756> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418837756> <http://schema.org/startDate> "2018-09-05T18:42:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418837756> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418837756> <http://schema.org/description> "I share the same concerns as @cwebber and @BigBlueHat." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418838108> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418838108"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418838108> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418838108> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418838108> <http://schema.org/startDate> "2018-09-05T18:43:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418838108> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418838108> <http://schema.org/description> "Re canonicalization (or even just whitespace normalization) ... can someone describe the issue and the risk here?  If one implementation serializes to a string `\"{\\\"foo\\\": 1}\"` and another serializes to a string `\"{ \\\"foo\\\" : 1 }\"` ... what's the problem? They're not identity providing such that they need to be compared, they're just values." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418839346> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418839346"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418839346> .
<https://api.github.com/users/cwebber> <http://schema.org/accountId> "cwebber" .
<https://api.github.com/users/cwebber> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/55698?v=4" .
<https://api.github.com/users/cwebber> <http://schema.org/url> "https://github.com/cwebber"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/cwebber> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418839346> <http://schema.org/creator> <https://api.github.com/users/cwebber> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418839346> <http://schema.org/startDate> "2018-09-05T18:47:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418839346> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418839346> <http://schema.org/description> "@azaroth42 Those would end up being two different signatures with linked data signatures.  Without canonicalizing the json exactly the same way every time, LDS will break." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418850564> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418850564"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418850564> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418850564> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418850564> <http://schema.org/startDate> "2018-09-05T19:20:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418850564> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418850564> <http://schema.org/description> "@cwebber said:\r\n\r\n> It isn't that simple.  Whitespace is not the only issue.  We will probably have to support something like [this json canonicalization spec](https://tools.ietf.org/html/draft-rundgren-json-canonicalization-scheme-01) or something.  That's a lot of extra work.\r\n\r\nGood point, as by the time we see the data, its in a parsed form, and we can't depend on specific representation of numbers, for example.\r\n\r\nAt this point, I'd say that the work should be put on hold, certainly pending an important use case." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857433> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418857433"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857433> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857433> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857433> <http://schema.org/startDate> "2018-09-05T19:44:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857433> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857433> <http://schema.org/description> "We can defer, but I would like to note that canonicalization and LDS are explicitly out of scope of the WG, per the charter:  https://www.w3.org/2018/03/jsonld-wg-charter.html\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857569> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418857569"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857569> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857569> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857569> <http://schema.org/startDate> "2018-09-05T19:45:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857569> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418857569> <http://schema.org/description> "PROPOSAL:  Defer work on JSON literals until specific use cases have been described." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418858182> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/57#issuecomment-418858182"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/57> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418858182> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418858182> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418858182> <http://schema.org/startDate> "2018-09-05T19:47:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418858182> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418858182> <http://schema.org/description> "> The issue about choosing among script tags was surfaced for the use case where the context references an HTML document with embedded JSON-LD script(s). In this case, which one would be used as the context, or would they all be used?\r\n\r\nIgnoring (for now) the inherent risks of depending on embedded JSON-LD for storing (and extracting) a context expression from within HTML, we could \"upgrade\" the https://www.w3.org/ns/json-ld#context string from only defined as a link relationship (as currently defined) and expand it to include using it as a `profile` (or other) media type parameter.\r\n\r\n```html\r\n<script type=\"application/ld+json;profile=https://www.w3.org/ns/json-ld#context\">\r\n{\"@context\": {}}\r\n</script>\r\n```\r\n\r\nThat could have interesting potential use in future markup-based graph expressions also--one can imagine an RDFa 2.0 which could lean on JSON-LD based contexts so that any expressed graph content maps to the same names throughout the document. But now I'm probably day dreaming. 😁 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418859919> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418859919"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418859919> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418859919> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418859919> <http://schema.org/startDate> "2018-09-05T19:53:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418859919> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418859919> <http://schema.org/description> "> We can defer, but I would like to note that canonicalization and LDS are explicitly out of scope of the WG, per the charter: https://www.w3.org/2018/03/jsonld-wg-charter.html\r\n\r\nThey are out of scope, but we should still be careful not to break them." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418861207> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418861207"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418861207> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418861207> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418861207> <http://schema.org/startDate> "2018-09-05T19:57:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418861207> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418861207> <http://schema.org/description> "@iherman agreed that a F2F meeting will help us cover this ground faster/better. I was mostly reacting to \"give these [GeoJSON topics] a rest.\" If there's interest from that community (as there seems to be) in mapping GeoJSON into JSON-LD, then we have a quality JSON-first set of use cases to help us define JSON-LD features. It seems like a valuable thing to put on hold.\r\n\r\nIn fact, I'd like many more such scenarios/formats to help us confirm or deny our approach(es). JSON-LD is a bridge between the worlds, after all. 😃 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418890827> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-418890827"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418890827> .
<https://api.github.com/users/kgeographer> <http://schema.org/accountId> "kgeographer" .
<https://api.github.com/users/kgeographer> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/1753945?v=4" .
<https://api.github.com/users/kgeographer> <http://schema.org/url> "https://github.com/kgeographer"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kgeographer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418890827> <http://schema.org/creator> <https://api.github.com/users/kgeographer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418890827> <http://schema.org/startDate> "2018-09-05T21:40:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418890827> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418890827> <http://schema.org/description> "@azaroth42 I was not aware 1.1 accommodates lists of lists; I presumed wrongly that the Dev Playground reflected 1.1 as it it stands. At the moment, the Playground won't validate them. Very glad to know accommodating GeoJSON matters to a number of people. For all matters related to interactions between JSON-LD and GeoJSON-LD I defer to @sgillies." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418896632> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-418896632"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418896632> .
<https://api.github.com/users/cwebber> <http://schema.org/accountId> "cwebber" .
<https://api.github.com/users/cwebber> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/55698?v=4" .
<https://api.github.com/users/cwebber> <http://schema.org/url> "https://github.com/cwebber"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/cwebber> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418896632> <http://schema.org/creator> <https://api.github.com/users/cwebber> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418896632> <http://schema.org/startDate> "2018-09-05T22:04:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418896632> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418896632> <http://schema.org/description> "so a) I don't think this is really something that needs to be standardized *in the json-ld spec*\r\nbut b) I think it's an issue of best practice for json-ld implementations so it's worth discussing it here." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418966615> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418966615"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418966615> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418966615> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418966615> <http://schema.org/startDate> "2018-09-06T05:11:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418966615> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/418966615> <http://schema.org/description> "Thanks @cwebber for the [json canonicalization spec](https://tools.ietf.org/html/draft-rundgren-json-canonicalization-scheme-01) link. I did not know about that. \r\n\r\nHowever, that also means that the signature issue with a json literal becomes solvable if and when an RDF canonicalization is formally defined as a standard; that standard should say that literals must be canonicalized and, actually, by defining the json datatype we _reinforce_ interoperability of signatures because there is then a clear follow-your-nose approach of what this means in the standard (provided the aforementioned IETF document becomes final). Indeed, _if_ there are use cases that would make all kinds of ad-hoc inclusion of JSON data in RDF graphs but without a clear spec, a canonicalization spec may not be able to function properly.\r\n\r\nIe, while I agree that we need more use cases per our process, I think a future RDF canonicalization spec can take care of this problem for us, and this WG does not really have to deal with this.\r\n\r\n(B.t.w., does the XML Canonicalization spec apply to HTML content? Because if not, there is already a problem with the HTML RDF datatype...)\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419023248> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-419023248"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419023248> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419023248> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419023248> <http://schema.org/startDate> "2018-09-06T09:13:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419023248> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419023248> <http://schema.org/description> "@cwebber \r\n\r\n> I don't think this is really something that needs to be standardized _in the json-ld spec_\r\n\r\nFully agree. But should be sure that existing standards can be used within JSON-LD. In this sense, it _may_ be more than just best practice (see again the way integrity could be handled).\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419507520> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-419507520"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419507520> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419507520> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419507520> <http://schema.org/startDate> "2018-09-07T17:17:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419507520> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419507520> <http://schema.org/description> "-1, for the following reasons:\r\n\r\n* The JSON-LD Charter says nothing about deprecating existing JSON-LD features and this attempts to do exactly that.\r\n* You can't express JSON documents using the RDF data model - full stop. You can do so w/ JSON-LD's data model, which is why this feature was placed in there in the first place. The RDF data model is incapable of expressing JSON as it stands right now.\r\n* We don't have document-relative IRIs for properties, AFAIK?\r\n* JSON-LD's data model does not have to be completely aligned with RDF's data model, there is no requirement for that to be true in the current Charter. If that had been stated, Digital Bazaar would have objected to the charter.\r\n\r\nWhat am I missing?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419514235> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-419514235"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419514235> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419514235> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419514235> <http://schema.org/startDate> "2018-09-07T17:42:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419514235> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419514235> <http://schema.org/description> "Thanks for the feedback Manu :)\r\n\r\nTo your points...\r\n* The charter also doesn't say that we can't recommend future removal of features. The (accepted) proposal is an editorial note that the 1.1 WG does not believe that there is sufficient (e.g. any) use of the feature to warrant its definition.\r\n* Given that the empty string is not a valid term (see the closed wontfix issue #12 and precursors), we still can't express arbitrary JSON documents with the JSON-LD model. We couldn't in 1.0 either, with the list of lists issue that has been solved. While this would be a useful parity aspect, we don't have it, regardless of this issue.\r\n* I believe that we do have this feature, see https://w3c.github.io/json-ld-syntax/#using-the-document-base-as-the-default-vocabulary, though I could be misunderstanding the concern?\r\n* It does not, however our guiding principle is to keep the two in as much alignment as possible such that round-tripping is possible.\r\n\r\nThe new evidence that would overturn the resolution is showing that two organizations are independently using this feature.  If it's important, then after 5 years of JSON-LD 1.0, there must surely be two independent uses in the wild? Could you point us to some please?\r\n\r\nAnd again, it's not being removed (that would be a breaking change, which we are indeed not empowered to do), it's being flagged as likely to be removed from the specification in the future unless there's evidence at the time to suggest otherwise." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419520767> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-419520767"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419520767> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419520767> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419520767> <http://schema.org/startDate> "2018-09-07T18:06:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419520767> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/419520767> <http://schema.org/description> "> You can't express JSON documents using the RDF data model - full stop. You can do so w/ JSON-LD's data model, which is why this feature was placed in there in the first place. The RDF data model is incapable of expressing JSON as it stands right now.\r\n\r\nDocument-relative terms support the same use case. This was raised by Kingsley, as he often uses them in his examples and couldn’t in JSON-LD. We added “@vocab”: “” to cause the vocabulary base to be taken as the same as the document base. See https://github.com/json-ld/json-ld.org/issues/488.\r\n\r\n> JSON-LD's data model does not have to be completely aligned with RDF's data model, there is no requirement for that to be true in the current Charter. If that had been stated, Digital Bazaar would have objected to the charter.\r\n\r\nThere’s a pretty strong desire by the WG to allow them to be more fully aligned. The primary obstacle to this was the use of Blank Node properties, which the document-relative terms satisfy.\r\n\r\nThere was no known use of this in the wild, but in any case, the proposal doesn’t remove the feature, just marks it as Obsolete, which indeed, it is. 1.0 documents will continue to work, and 1.1 processors should continue to handle these, but the use is discouraged. The RDF WG did something similar for Reification, IIRC.\r\n\r\nThere’s a good reason to be able to say that the JSON-LD datamodel _is_ the RDF datamodel, at least formally. Yes, the JSON syntax forms it’s own effective datamodel, but by obsoleting those elements that prevent it from directly corresponding to the RDF datamodel we form a better basis for JSON-LD. IIRC, it was blank nodes as properties that required us to say it is a _generalized_ RDF Dataset, and not simply an RDF Dataset.\r\n\r\nGoing back to the motivations for allowing blank nodes as properties was an effort to allow easy adoption of JSON-LD by developers not prepared to create vocabulary IRIs to resolve them to. The document-relative term resolution solves exactly the same case, and is consistent with other RDF usage from other syntaxes." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/420138159> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-420138159"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/4> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/420138159> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/420138159> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/420138159> <http://schema.org/startDate> "2018-09-11T03:54:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/420138159> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/420138159> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-07-json-ld).\r\n\r\n- `RESOLVED:  Defer work on JSON literals until specific use cases have been described`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/4\">https://github.com/w3c/json-ld-syntax/issues/4</a><br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418857569\">https://github.com/w3c/json-ld-syntax/issues/4#issuecomment-418857569</a><br/>\r\nBenjamin Young: first issue is number 4. there had been an agreement in past meeting to close but it was brought back up. Further discussion on GitHub and there is now a proposal from Rob to defer. Want to open it back up for further discussion<br/>\r\nProposed resolution: Defer work on JSON literals until specific use cases have been described (Benjamin Young)<br/>\r\nGregg Kellogg: chris weber brought up issue of canonical order of the literal. there is a draft out for JSON canonicalization but it is a burden until algorithms there to do it. This issue is related to the RDF JSON canonicalization. we have this issue with HTML and XML literals.<br/>\r\n… we are laking a compelling use case for this<br/>\r\n… part was to support geo json but we added list of list to support that<br/>\r\nAdam Soroka: to clarify, geo json has no use case for this current issue?<br/>\r\nRob Sanderson: Related to #7 – <a href=\"https://github.com/w3c/json-ld-syntax/issues/7\">https://github.com/w3c/json-ld-syntax/issues/7</a><br/>\r\nGregg Kellogg: list of list allows us to represent geo json but some of the proponents of geo json want to see us go further<br/>\r\nAdam Soroka: happy with the proposal and to see conversation to move forward. We owe it to geo json to see that their issues are represented in our work<br/>\r\nRob Sanderson: while I supported the issue, given the lack of use cases, I support the deferral.<br/>\r\nDavid Newbury: I glad it is a deferral and not a close. but when you need to semanticalize and de-semanticalize json it can be a pain.<br/>\r\nIvan Herman: no strong opinion about literals in json but do want to make sure we do not close it for the wrong reason. understand the canonicalization issue but it is not our responsibility. should we have a more broad RDF canonicalization group.<br/>\r\nRob Sanderson: +1 to ivan.<br/>\r\nAdam Soroka: +1<br/>\r\nDavid I. Lehn: i’ll just note, that similar to empty terms, raw json would be very helpful for obfuscated json-ld<br/>\r\nBenjamin Young: csvw:JSON<br/>\r\nBenjamin Young: did more digging and there is another community that minted a json encoding type. the csv working group has this. The json is not native json but rather just a string but has way to say, this is a json string.<br/>\r\n… need to make sure we have a compelling use case<br/>\r\nRob Sanderson: +1<br/>\r\nBenjamin Young: does anyone want changes?<br/>\r\nProposed resolution: Defer work on JSON literals until specific use cases have been described (Benjamin Young)<br/>\r\nDavid Newbury: +1<br/>\r\nJeff Mixter: +1<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: +1<br/>\r\nBenjamin Young: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nResolution #2: Defer work on JSON literals until specific use cases have been described<br/>\r\nDavid I. Lehn: +1<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421077425> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-421077425"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421077425> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421077425> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421077425> <http://schema.org/startDate> "2018-09-13T16:56:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421077425> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421077425> <http://schema.org/description> "Taking into account the comments above, the [resolution of the WG](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-07-json-ld#resolution3) on 2018-09-07 was to close this issue and refer it to the JSON-LD Community Group for further exploration. This has been done in [issue 677](https://github.com/json-ld/json-ld.org/issues/677)\r\n\r\nThe rationale for this decision is as follows:\r\n * The transformation of data has not been incubated in the CG and was not part of the draft provided as input to the WG. While there isn't an absolute requirement to incubate features in a CG environment first, data transformation rather than simple mapping of names is a significant piece of work that is not declared in the WG charter.\r\n* We don't have sufficient use cases to work on a generalized data transformation engine at this time. Referring to the CG to gather those use cases and requirements allows forward momentum.\r\n* The scope of the current WG is defined as JSON-LD 1.1. It was the unanimous opinion of the WG that data transformation would warrant a 2.0 version. As such we are not chartered to do the work, nor would it be politically viable in the current environment.\r\n* It was agreed that neither JSON-LD contexts nor frames would be the right vehicle for this functionality.\r\n* Given that the surface syntax of GeoJSON (e.g. Features expressed as list of lists) can be accommodated in 1.1, the use case that is within scope for JSON-LD 1.1 for that community is solved. \r\n* This additional requirement of creating non-round-tripping extra information via context definitions introduces significant attack vectors, where data could be added to the graph post-factum via context expansion that was not present in the original.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421079070> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/15#issuecomment-421079070"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/15> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421079070> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421079070> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421079070> <http://schema.org/startDate> "2018-09-13T17:02:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421079070> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421079070> <http://schema.org/description> "On the WG call of 2018-09-07, we [resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-07-json-ld#resolution4) to close this issue, won't fix.\r\n\r\nThe rationale, following that of #7, is that this is data transformation not simple mapping and is out of scope.  Further, the use case has not been validated and out of band discussions on the topic lead us to believe it's no longer desirable.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421080220> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/64#issuecomment-421080220"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/64> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421080220> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421080220> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421080220> <http://schema.org/startDate> "2018-09-13T17:05:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421080220> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421080220> <http://schema.org/description> "On the call of 2018-09-07, the WG [resolved](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-07-json-ld#resolution5) to close this issue won't fix, with the same rationale as #7. The use cases should be discussed in the CG." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421081321> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-421081321"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421081321> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421081321> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421081321> <http://schema.org/startDate> "2018-09-13T17:09:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421081321> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421081321> <http://schema.org/description> "The [resolution](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-07-json-ld#resolution6) on the WG call of 2018-09-07 was to mark the feature as \"obsolete\" meaning that it is still valid for use, but not likely to persist indefinitely.\r\n\r\nMarking as editorial before we can close." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421082031> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-421082031"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421082031> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421082031> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421082031> <http://schema.org/startDate> "2018-09-13T17:11:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421082031> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421082031> <http://schema.org/description> "PROPOSAL: Defer any change until the extent to which technical differences between URL and IRI can be determined, especially any difference between web browser and other stacks." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421084641> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/7#issuecomment-421084641"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/7> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421084641> .
<https://api.github.com/users/sgillies> <http://schema.org/accountId> "sgillies" .
<https://api.github.com/users/sgillies> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/33697?v=4" .
<https://api.github.com/users/sgillies> <http://schema.org/url> "https://github.com/sgillies"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/sgillies> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421084641> <http://schema.org/creator> <https://api.github.com/users/sgillies> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421084641> <http://schema.org/startDate> "2018-09-13T17:19:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421084641> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421084641> <http://schema.org/description> "@azaroth42 thanks for the closing note! It seems like there was just a bit of confusion here earlier. I'm looking forward to removing the outstanding issues note in http://geojson.org/geojson-ld/." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421236344> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/17#issuecomment-421236344"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421236344> .
<https://api.github.com/users/simonstey> <http://schema.org/accountId> "simonstey" .
<https://api.github.com/users/simonstey> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/10495449?v=4" .
<https://api.github.com/users/simonstey> <http://schema.org/url> "https://github.com/simonstey"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/simonstey> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421236344> <http://schema.org/creator> <https://api.github.com/users/simonstey> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421236344> <http://schema.org/startDate> "2018-09-14T05:35:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421236344> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421236344> <http://schema.org/description> "> The implication would be that, when expanding, those single values would be treated as list entries as well, which is just what the current algorithm does. If the default for compaction was otherwise, we could consider `\"@container\": [\"@list\", \"@set\"]` as a way of always compacting to the array form, and default to the non-array form for single items.\r\n\r\n~assuming that we would adopt the non-array form for single item `@list`, the fictious `\"@container\": [\"@language\", \"@list\"]` would basically be equivalent to `\"@container\": \"@language\"` (if the former was permitted by the spec) right?~ nvm, lists are ordered..\r\n\r\n\r\nOn a side note, I wonder how such a change would affect the following rationale given in [9.5 Lists and Sets:](https://w3c.github.io/json-ld-syntax/#lists-and-sets)\r\n> Values of terms associated with an `@set` or `@list` container will always be represented in the form of an array when a document is processed—even if there is just a single value that would otherwise be optimized to a non-array form in compact document form. **This simplifies post-processing of the data as the data is always in a deterministic form.**\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421449810> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65#issuecomment-421449810"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421449810> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421449810> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421449810> <http://schema.org/startDate> "2018-09-14T18:44:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421449810> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421449810> <http://schema.org/description> "@iherman we'll need to get tokens for all three specs (just trying Syntax for now).\r\n\r\n@BigBlueHat and @azaroth42 We'll need a WG decision to point to.\r\n\r\nTravis configuration may need some debugging, but this will cause publication via ENCHIDNA only on branch \"publications\" after other Travis steps have completed.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421604276> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65#issuecomment-421604276"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421604276> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421604276> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421604276> <http://schema.org/startDate> "2018-09-15T17:32:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421604276> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421604276> <http://schema.org/description> "One thought is to run a link-checker docker image as a build step. I experimented with the following:\r\n\r\n    docker run stupchiy/checklink http://w3.org/TR/json-ld11\r\n\r\nProblem is, it can't run against a local file. We could consider running a separate docker image with a web server to serve up index.html, or we could run it against the w3c service, but I'd be concerned if we might run into throttling issues.\r\n\r\n    docker run stupchiy/checklink  https://labs.w3.org/spec-generator/?type=respec&url=https://w3c.github.io/json-ld-syntax/?specStatus=WD;shortName=json-ld11\r\n\r\nIn this case, we'd need to create an indirection through rawgit to access the version from the \"publications\" branch, yet another level of indirection. Nicer to be able to run locally." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421616002> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65#issuecomment-421616002"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421616002> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421616002> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421616002> <http://schema.org/startDate> "2018-09-15T18:51:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421616002> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421616002> <http://schema.org/description> "@gkellogg, to my naive inspection, it looks like that Docker image is running W3C's [`link-checker`](https://github.com/w3c/link-checker/). I just checked, and `link-checker` can run fine on local files. Maybe we can just use our `.travis.yml` to install `link-checker` directly to our Travis VM? It's just a Perl module, and `perl -MCPAN -e 'install W3C::LinkChecker'` did fine for me." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421631905> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65#issuecomment-421631905"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421631905> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421631905> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421631905> <http://schema.org/startDate> "2018-09-15T20:45:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421631905> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/421631905> <http://schema.org/description> "@ajs6f, good to know. Interesting, then, that the docker image doesn’t. I’ll play with that. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144365> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-422144365"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144365> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144365> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144365> <http://schema.org/startDate> "2018-09-17T19:42:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144365> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144365> <http://schema.org/description> "Proposal above was [accepted by the WG](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-14-json-ld#resolution2), on the call on 2018-09-14. Tagging defer until the above is satisfied." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144979> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/17#issuecomment-422144979"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/17> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144979> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144979> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144979> <http://schema.org/startDate> "2018-09-17T19:44:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144979> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422144979> <http://schema.org/description> "[Resolution of the WG](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-14-json-ld#resolution3) on the call on 2018-09-14 was to close this issue, won't fix but without prejudice. There are no use cases known for the compaction side, and the expansion of that data to RDF works as expected already.  If use cases are brought to the WG, then we will re-open the issue and consider them." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422146365> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-422146365"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422146365> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422146365> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422146365> <http://schema.org/startDate> "2018-09-17T19:48:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422146365> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422146365> <http://schema.org/description> "Discussion on [WG call of 2018-09-14](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-14-json-ld#section4-4) led to the conclusion that this is likely a *framing* issue, not a syntax issue. Framing based solutions to be explored.\r\n\r\n(For the sake of issue management, we'll leave the issue here)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422180603> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-422180603"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422180603> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422180603> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422180603> <http://schema.org/startDate> "2018-09-17T21:38:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422180603> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422180603> <http://schema.org/description> "In light of the framing discussion, how about something like a new value for the `@embed` flag that allows the frame to say that it should be put in `@included` rather than inline or omitted?\r\n\r\nThe syntax document would need to define \"@included\" so that it could be aliased to something else, otherwise expansion would try to apply the default vocab to it as a regular term.\r\n\r\nThen the example in the issue would be generated by something like:\r\n\r\nData:\r\n```\r\n{\r\n  \"@context\": {\r\n    \"included\": \"@included\",\r\n    \"id\": \"@id\"\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\nFrame:\r\n```\r\n{\r\n \"items\": [\r\n  {\r\n   \"classification\": { \"@embed\": \"@included\" },\r\n   \"service\": {\"@embed\": \"@included\"}\r\n  }\r\n ]\r\n}\r\n```\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422185629> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-422185629"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422185629> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422185629> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422185629> <http://schema.org/startDate> "2018-09-17T21:58:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422185629> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/422185629> <http://schema.org/description> "I share @BigBlueHat's concerns about the scope of inclusions into the graph from the surrounding HTML as defaults, rather than by explicit reference.  You would need to traverse the DOM all the way up, looking for `lang` and `xml:lang` attributes for each json-ld inclusion. That seems expensive, and outside of the scope of most JSON-LD processors.\r\nSimilarly, what about if I include a <link rel=\"self\"> element in the HTML? Can I use that to override the base URI?\r\n\r\nCan we split the effects of surrounding document structure off into a separate issue, and keep this one as the base URI only?\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423602781> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-423602781"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423602781> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423602781> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423602781> <http://schema.org/startDate> "2018-09-21T16:52:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423602781> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423602781> <http://schema.org/description> "The HTML5 spec calls these [\"data-blocks\"](https://www.w3.org/TR/html5/semantics-scripting.html#data-block) and says the following:\r\n> Setting the attribute to any other value means that the script is a data block, which is not processed. None of the script attributes (except type itself) have any effect on data blocks. Authors must use a valid MIME type that is not a JavaScript MIME type to denote data blocks.\r\n\r\nConsequently, I'd suggest we avoid the intermixing of DOM parsing and unique-to-us data-block handling." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423603041> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-423603041"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423603041> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423603041> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423603041> <http://schema.org/startDate> "2018-09-21T16:53:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423603041> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423603041> <http://schema.org/description> "[HTML5](https://www.w3.org/TR/html5/semantics-scripting.html#data-block) pretty much shuts the door on using the DOM to interpret script elements (data blocks)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423628364> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-423628364"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423628364> .
<https://api.github.com/users/krobi64> <http://schema.org/accountId> "krobi64" .
<https://api.github.com/users/krobi64> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/159039?v=4" .
<https://api.github.com/users/krobi64> <http://schema.org/url> "https://github.com/krobi64"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/krobi64> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423628364> <http://schema.org/creator> <https://api.github.com/users/krobi64> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423628364> <http://schema.org/startDate> "2018-09-21T18:20:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423628364> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423628364> <http://schema.org/description> "Question around this topic: Until we can implement a `did` method for our framework (https://po.et), I was looking to use https://tools.ietf.org/html/rfc2397 as a way to for our users to anonymously insert identity, specifically for the Ed25519 2018 Signature Verification Key. It seems that you are specifically referencing `https` and `http` URL schemes. That is far too limiting." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423632676> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/25#issuecomment-423632676"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/25> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423632676> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423632676> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423632676> <http://schema.org/startDate> "2018-09-21T18:35:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423632676> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423632676> <http://schema.org/description> "@krobi64 that's precisely why many of us would prefer to *keep* the IRI terminology in use in the spec now: https://www.w3.org/TR/json-ld11/#iris\r\n\r\nBy that definition `data:` IRIs/URLs work just fine. Their a bit unusual as standalone identifiers (due to how long they can get), but they certainly work fine as values.\r\n\r\nJSON-LD supports *any* kind of IRI (including URIs, URNs, and URLs) not just `https` and `http` URL schemas (however common those might be)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423693207> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67#issuecomment-423693207"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423693207> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423693207> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423693207> <http://schema.org/startDate> "2018-09-21T23:05:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423693207> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423693207> <http://schema.org/description> "Does the Preview / Diff happen automagically somehow? Should I wait for it to appear?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697525> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67#issuecomment-423697525"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697525> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697525> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697525> <http://schema.org/startDate> "2018-09-21T23:40:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697525> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697525> <http://schema.org/description> "It’s supposed to happen automatically, and may still. You can always see it with [rawgit](\r\nhttps://rawgit.com/w3c/json-ld-syntax/improved-examples/index.htm)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697847> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67#issuecomment-423697847"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697847> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697847> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697847> <http://schema.org/startDate> "2018-09-21T23:43:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697847> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423697847> <http://schema.org/description> "We may want to consider styling for print, which could expand all parts of the examples, and add some sub-example headers." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423796967> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423796967"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423796967> .
<https://api.github.com/users/bblfish> <http://schema.org/accountId> "bblfish" .
<https://api.github.com/users/bblfish> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/124506?v=4" .
<https://api.github.com/users/bblfish> <http://schema.org/url> "https://github.com/bblfish"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bblfish> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423796967> <http://schema.org/creator> <https://api.github.com/users/bblfish> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423796967> <http://schema.org/startDate> "2018-09-23T07:15:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423796967> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423796967> <http://schema.org/description> "I have found the tools I think to show how this ties into RDF Semantics, and find out if there are any real problems with it. So ping me when you get back to this. :-)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423822954> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423822954"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423822954> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423822954> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423822954> <http://schema.org/startDate> "2018-09-23T15:03:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423822954> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423822954> <http://schema.org/description> "@bblfish its in my editor’s queue, it would be great to put down any thoughts you might have. @iherman mentioned some internal use of nodes as predicates for OWL, but no other concrete syntax supports this.\r\n\r\nThe main issue the WG needs to consider is if any code in the wild depends on specific blank node labels for properties, as well as those generated via flattening in non-predicate locations.\r\n\r\nNote that obsoletion is not deprecation, so they remain valid, but the text will change to make them less prominent. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824455> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423824455"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824455> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824455> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824455> <http://schema.org/startDate> "2018-09-23T15:26:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824455> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824455> <http://schema.org/description> "@azaroth42 wrote:\r\n> I believe that we do have this feature, see https://w3c.github.io/json-ld-syntax/#using-the-document-base-as-the-default-vocabulary, though I could be misunderstanding the concern?\r\n\r\nI just looked into this... we don't. It requires the markup to be changed to something like \"#foo\" instead of just using \"foo\". So, we're back to RDF doesn't support expressing JSON documents, which is a big problem.\r\n\r\nThe only way this would work is if we allowed \"@vocab\": \"#\", where the base url would be prepended... which I'm not sure we do. I think @vocab requires an absolute IRI? @gkellogg, do we allow this?\r\n\r\n@azaroth42, you asked for \"new evidence that would overturn the resolution is showing that two organizations are independently using this feature.\" ... that would be every organization currently using JSON-LD that doesn't do JSON-LD processing before putting the document into a document-based store such as MongoDB.\r\n\r\nSo, I'm back to being in opposition of this language in the spec. More specifically:\r\n\r\n> The charter also doesn't say that we can't recommend future removal of features. The (accepted) proposal is an editorial note that the 1.1 WG does not believe that there is sufficient (e.g. any) use of the feature to warrant its definition.\r\n\r\nI challenge this position. We would not have supported a charter that recommended the removal of features, even if in some advisory capacity in the future. As a member of the WG, I insist that this modification is out of scope for the charter.\r\n\r\n> Given that the empty string is not a valid term (see the closed wontfix issue #12 and precursors), we still can't express arbitrary JSON documents with the JSON-LD model. We couldn't in 1.0 either, with the list of lists issue that has been solved. While this would be a useful parity aspect, we don't have it, regardless of this issue.\r\n\r\nThis argument sounds like throwing the baby out with the bathwater. Just because there is a corner case is no reason to throw the feature out in general.\r\n\r\n> I believe that we do have this feature, see https://w3c.github.io/json-ld-syntax/#using-the-document-base-as-the-default-vocabulary, though I could be misunderstanding the concern?\r\n\r\nNo, we don't. That approach requires modification of the term to prepend a \"#' character. JSON-LD was designed to, as much as possible, be \"Add a context and you're done.\" The feature referred to is \"add a context, then rename all of your properties to something that's completely foreign to most JSON developers\".\r\n\r\n> It does not, however our guiding principle is to keep the two in as much alignment as possible such that round-tripping is possible.\r\n\r\nDumbing JSON-LD down because the RDF data model doesn't support a feature that is required to express JSON is a step in the wrong direction. The response should be to fix RDF, not to remove features from JSON-LD that JSON developers rely on. The feature, just to be clear, is document-scoped predicates.\r\n\r\nTo provide an analogy, when airplanes were being invented, we didn't say: \"Well, buses don't have wings, so let's shear the wings off of all of the planes in the name of uniformity\"." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824848> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423824848"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824848> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824848> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824848> <http://schema.org/startDate> "2018-09-23T15:32:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824848> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824848> <http://schema.org/description> "> @azaroth42, you asked for \"new evidence that would overturn the resolution is showing that two organizations are independently using this feature.\" ... that would be every organization currently using JSON-LD that doesn't do JSON-LD processing before putting the document into a document-based store such as MongoDB.\r\n\r\nI'm not quite sure I understand this. Isn't what you're describing just \"putting JSON in a JSON store\"? How does having or not having unnamed properties affect this? Can you perhaps give a concrete example of how this will stop someone from storing JSON-LD 1.1 in a JSON document store?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824960> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423824960"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824960> .
<https://api.github.com/users/bblfish> <http://schema.org/accountId> "bblfish" .
<https://api.github.com/users/bblfish> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/124506?v=4" .
<https://api.github.com/users/bblfish> <http://schema.org/url> "https://github.com/bblfish"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bblfish> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824960> <http://schema.org/creator> <https://api.github.com/users/bblfish> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824960> <http://schema.org/startDate> "2018-09-23T15:34:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824960> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423824960> <http://schema.org/description> "Ok, give me a bit of time, and perhaps I can pop up a document that gives an [Institution Theoretic](https://www.iep.utm.edu/insti-th/#SH3a) view of RDF. In that space it is natural to start with a signature with no blank nodes as basic. Blank nodes just fall into place automatically as existential quantifiers by signature morphism from Σ→Σ+X. But when doing it looks like one automatically gets existential quantification in predicate position too. The question then if that is problematic.  The Encyclopedia of Philosophy article brings up the question as to whether this is a representable substitution.  (If you are interested I can look at that in more detail, but will take me some work to fully understand that and make it easy to understand)\r\nI think I have shown to myself how RDF as an institution works explained in easy language, but it needs to be reviewed by my maths supervisor and a few others before it is worth posting here. But I think it can be explained clearly. Indeed it can make things easier." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423825463> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423825463"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423825463> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423825463> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423825463> <http://schema.org/startDate> "2018-09-23T15:41:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423825463> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423825463> <http://schema.org/description> "@ajs6f wrote:\r\n> I'm not quite sure I understand this. Isn't what you're describing just \"putting JSON in a JSON store\"? \r\n\r\nWe're putting JSON-LD in a JSON store.\r\n\r\n> How does having or not having unnamed properties affect this? \r\n\r\nIn JSON-LD 1.0, the data model could represent doing this. What the JSON-LD 1.1 WG is suggesting is removing a feature in the data model such that the data model can no longer represent this.\r\n\r\n> Can you perhaps give a concrete example of how this will stop someone from storing JSON-LD 1.1 in a JSON document store?\r\n\r\nIt doesn't stop anyone from storing a document in a document store... it's just that the JSON-LD data model is no longer capable of expressing it in the data model. That is, it was clean from a data model perspective in JSON-LD 1.0, but is no longer JSON-LD in whatever version of JSON-LD will completely remove this feature of the data model.\r\n\r\nThe fundamental point here is that the RDF data model can't represent JSON... and the JSON-LD can... and now we're discussing removing that ability from the JSON-LD model because it doesn't exist in RDF, which is the tail wagging the dog." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423826029> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423826029"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423826029> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423826029> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423826029> <http://schema.org/startDate> "2018-09-23T15:50:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423826029> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423826029> <http://schema.org/description> "@msporny-- I'm afraid I still don't understand. I don't see how having a unnamed property creates the situation where you can't put JSON-LD  into a JSON store. I can see how it would prevent you from being able to put arbitrary JSON into, say, an [LDP instance](https://www.w3.org/TR/ldp), but that doesn't seem to be what you are objecting to. Perhaps you can give a concrete example of a JSON-LD 1.0 document you'd like to put into a JSON store (e.g. MongoDB) that, after this change, you couldn't?\r\n\r\nI understand (I think) your point about the different capabilities. What I'm not clear on is what the use case actually is. We have yet to have anyone at all offer an actual concrete use case for unnamed properties. I'm not claiming at all that there are no such cases-- I, for one, would love to hear about them so that we can take them into consideration.\r\n\r\nAs for the question of whether JSON-LD 1.1 must be able to represent all possible JSON constructions, I'll gladly defer to the WG chairs. That's obviously a higher-level question than this one." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836760> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423836760"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836760> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836760> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836760> <http://schema.org/startDate> "2018-09-23T18:24:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836760> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836760> <http://schema.org/description> "Promoting the notion that blank node identifiers are stable, as is implied in the 1.0 semantics, is IMHO just a bad idea. It goes against the whole notion of blank nodes. Specifically, RDF 1.1 Concepts, which is where the notion of blank node identifiers comes from in the first place, specifically says that they are _not_ persistent or portable.\r\n\r\n> **Blank node identifiers** are local identifiers that are used in some concrete RDF syntaxes or RDF store implementations. They are always locally scoped to the file or RDF store, and are not persistent or portable identifiers for blank nodes. Blank node identifiers are not part of the RDF abstract syntax, but are entirely dependent on the concrete syntax or implementation. The syntactic restrictions on blank node identifiers, if any, therefore also depend on the concrete RDF syntax or implementation. Implementations that handle blank node identifiers in concrete syntaxes need to be careful not to create the same blank node from multiple occurrences of the same blank node identifier except in situations where this is supported by the syntax.\r\n\r\nMoreover, blank node identifiers are not stable across many JSON-LD algorithms, and giving the impression that a property may map to a blank node identifier to give it meaning in the data model does not allow it to be manipulated as one would expect (other than expansion and compaction).\r\n\r\nAs it's defined, given a document location and the simple use of `\"@vocab\": \"\"` that properties would need to start with \"#\" to become fragment identifiers, but using term definitions can hide this:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"\",\r\n    \"foo\": \"#foo\"\r\n  },\r\n  \"foo\": \"bar\"\r\n}\r\n```\r\n\r\nThis definitely satisfies the use case, at the expense of specifically defining such otherwise unmapped terms.\r\n\r\nHowever, we could go further. The `\"@vocab\": \"\"` is _the least change that can possibly work_, and we could go further. We could remove the restriction that (other than for \"\"), `@vocab` must evaluate to an absolute IRI and just say that relative IRI values of `@vocab` (or even other term definitions) are resolved against the document base. This would allow a definition such as the following to work:\r\n\r\n```json\r\n{\r\n  \"@context\": {\"@vocab\": \"#\"},\r\n  \"foo\": \"bar\"\r\n}\r\n```\r\n\r\nIn retrospect, I don't know why we didn't try harder in 1.0 to avoid the use of blank nodes for properties. I'm surprised that the RDF 1.1 WG let this through, but I chalk it up to fatigue at the end of the WG and a lack of interest but some that would really care. This is the time to correct this use, and truly make JSON-LD a Linked Data format; perpetuating the use of blank node identifiers as stable parts of a JSON-LD document goes counter to the whole notion of Linked Data." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836920> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-423836920"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836920> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836920> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836920> <http://schema.org/startDate> "2018-09-23T18:27:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836920> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423836920> <http://schema.org/description> "> What the JSON-LD 1.1 WG is suggesting is removing a feature in the data model such that the data model can no longer represent this.\r\n\r\nNot at all, we're talking about marking the feature as \"Obsolete\"; a future WG could decide to deprecate it, but that would be in the 2.0 timeframe. The proposal would describe the feature as obsolete, and de-emphasize the Generalized RDF Data Model aspect of it, but it would continue to be supported both in the syntax and algorithms. This would include a note on how to avoid the use of the feature as described above." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423952567> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67#issuecomment-423952567"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423952567> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423952567> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423952567> <http://schema.org/startDate> "2018-09-24T12:07:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423952567> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423952567> <http://schema.org/description> "I am not sure why the preview does not work. In any case\r\n\r\nhttps://rawgit.com/w3c/json-ld-syntax/improved-examples/index.html\r\n\r\nis the right rawgit reference" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423954217> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-423954217"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423954217> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423954217> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423954217> <http://schema.org/startDate> "2018-09-24T12:14:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423954217> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423954217> <http://schema.org/description> "@BigBlueHat on https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-423602781 : that is not how I interpret this text. What it says is that the HTML spec is completely silent (as it should) what happens in that block.  That does not mean that the specification for that specific mime type cannot specify what it wants.\r\n\r\nIn particular, the `script` DOM element, as all HTML DOM element, has its `baseURI` set. I do not see any spec issues _defining_ the JSON-LD content to reuse that." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423955634> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-423955634"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423955634> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423955634> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423955634> <http://schema.org/startDate> "2018-09-24T12:20:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423955634> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/423955634> <http://schema.org/description> "@azaroth42 per https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-422185629 : it is indeed actually strange to me that the DOM is specified in a way that, while the base URI (which is also to be calculated) is per definition available in the DOM element, this is not true for the language. I have the impression that this could be considered as a bug, but I would leave that to @r12a and his friends to decide...\r\n\r\nWhile I do not consider the resulting extra calculation to be complex (the processor handling embedded JSON has, presumably, access to the DOM, because it has to find the script element; if so the rest is a simple recursion via the `parentElement` DOM attribute), I am fine separating the base URI and the language issues. My concern is to follow the DRY principle for the JSON-LD author who embeds this into an HTML file." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424004657> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67#issuecomment-424004657"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424004657> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424004657> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424004657> <http://schema.org/startDate> "2018-09-24T14:56:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424004657> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424004657> <http://schema.org/description> "S when we add comments or emphasis, we need to turn off the syntax highlighting." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424030881> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/67#issuecomment-424030881"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/67> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424030881> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424030881> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424030881> <http://schema.org/startDate> "2018-09-24T16:07:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424030881> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424030881> <http://schema.org/description> "@gkellogg this looks great, thank you!\r\n\r\n@iherman I [filed an issue for supporting Turtle highlighting](https://github.com/w3c/respec/issues/1063) back in 2017. It seems Respec uses [highlight.js](https://highlightjs.org/) which (still) lacks a Turtle highlighter. If we make one for highlight.js, then Respec can integrate that." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424129619> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/69#issuecomment-424129619"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/69> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424129619> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424129619> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424129619> <http://schema.org/startDate> "2018-09-24T21:22:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424129619> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424129619> <http://schema.org/description> "@iherman The updated graph, now complete with an example in different syntaxes, does illustrate the use of `@graph` at the top level to describe something like a \"bush\". Let me know if you think that it is sufficient, or how you'd like to change the figure." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424208927> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424208927"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424208927> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424208927> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424208927> <http://schema.org/startDate> "2018-09-25T05:09:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424208927> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424208927> <http://schema.org/description> "I wonder what the problem is, there may be some tricky HTML issues...\r\n\r\n- The preview does not work. Unfortunately, the service is not maintained by our systeam, and Toby, who originally did it, does not have time for maintenance either\r\n- I am unable to look at this via rawgit. I tried (both with cdn version and without), but the URL I get does not work.\r\n\r\nAny idea?\r\n\r\n(I am, of course, all in favor of adding those links to the examples!) " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424211545> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424211545"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424211545> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424211545> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424211545> <http://schema.org/startDate> "2018-09-25T05:27:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424211545> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424211545> <http://schema.org/description> "Forget my previous remark about rawgit. It works if one uses the URL of the index.html file (not with the repo as a whole):\r\n\r\nhttps://rawgit.com/w3c/json-ld-syntax/playground-links/index.html" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424240527> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-424240527"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424240527> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424240527> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424240527> <http://schema.org/startDate> "2018-09-25T07:44:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424240527> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424240527> <http://schema.org/description> "@msporny, I try to understand your issue. If I understand it well, but please correct me if I am wrong, you start with a simple JSON:\r\n\r\n```json\r\n{\r\n    \"prop\" : 1234\r\n}\r\n```\r\n\r\nAnd you want to \"just add a context and use it as JSON-LD\", doing something like\r\n\r\n```json\r\n{\r\n    \"@context\" : {\r\n        \"prop\" : \"_:b\"\r\n    },\r\n    \"prop\" : 1234\r\n}\r\n```\r\n\r\nIf this is what you refer to, this will work in JSON-LD. However, _even if_ we had a Generalized RDF spec, i.e., _if_ RDF allowed blank nodes as identifiers for predicates, I would suggest this is a wrong idea. Indeed, if somebody transformed this JSON-LD into:\r\n\r\n```json\r\n{\r\n    \"@context\" : {\r\n        \"prop\" : \"_:x\"\r\n    },\r\n    \"prop\" : 1234\r\n}\r\n```\r\n\r\nThe result would be \"identical\" in terms of (generalized) RDF (using the equivalence of RDF graphs), whereas it would _not_ be the same JSON-LD. Ie, using this bnode trick would be a _wrong_ idea in my view.\r\n\r\nIf indeed this was your goal, this could be achieved by doing something like:\r\n\r\n```json\r\n{\r\n    \"@context\" : {\r\n        \"prop\" : \"urn:uuid:1233456789\"\r\n    },\r\n    \"prop\" : 1234\r\n}\r\n```\r\n\r\nor, following the [RDF 1.1 skolemization](https://www.w3.org/TR/rdf11-concepts/#section-skolemization) approach:\r\n\r\n```json\r\n{\r\n    \"@context\": {\r\n        \"prop\" : \"http://example.com/.well-known/genid/d26a2d0e98334696f4ad70a677abc1f6\"\r\n    },\r\n    \"prop\": 1234\r\n}\r\n```\r\n\r\n(Where `example.org` can be exchanged against anything the author wants.) All these solutions work in JSON-LD 1.0 without further ado, without even touching the `@vocab` features.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424367887> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424367887"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424367887> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424367887> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424367887> <http://schema.org/startDate> "2018-09-25T14:33:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424367887> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424367887> <http://schema.org/description> "Yes, I think I know the source of the invalid JSON-LD.\r\n\r\nWould you see a similarly styled button for this instead, or just a link such as “open in playground”?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424386732> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424386732"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424386732> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424386732> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424386732> <http://schema.org/startDate> "2018-09-25T15:19:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424386732> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424386732> <http://schema.org/description> "@gkellogg I would just use text as for all the other options" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424432116> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424432116"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424432116> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424432116> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424432116> <http://schema.org/startDate> "2018-09-25T17:30:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424432116> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424432116> <http://schema.org/description> "@iherman Changed style to use buttons." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424457392> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424457392"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424457392> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424457392> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424457392> <http://schema.org/startDate> "2018-09-25T18:45:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424457392> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424457392> <http://schema.org/description> "Thanks! As far as I am concerned, we can merge this..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424462492> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424462492"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424462492> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424462492> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424462492> <http://schema.org/startDate> "2018-09-25T19:01:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424462492> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424462492> <http://schema.org/description> "It is a bit odd to have tabs you can flip between and another \"tab\" that is actually an action to open a another site.  Fine for now unless anyone has a better UI idea." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424464655> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424464655"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424464655> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424464655> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424464655> <http://schema.org/startDate> "2018-09-25T19:08:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424464655> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424464655> <http://schema.org/description> "Agreed with @davidlehn about needing consistency among the experience of the tabs. Also, the styles have some issues in the latest Firefox, fwiw." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424473628> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424473628"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424473628> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424473628> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424473628> <http://schema.org/startDate> "2018-09-25T19:37:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424473628> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424473628> <http://schema.org/description> "A UI designer I am not. I would appreciate anyone’s help in styling. \r\n\r\nAs for the separate button for the playground link, this is entirely manipulated in JavaScript, so something else would be easy to propagate. Personally, I found the previous icon taken from json-ld.org reasonable, is it is representative of where the link will take you. When saved, there is an aria label that indicates it’s purpose. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424486874> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424486874"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424486874> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424486874> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424486874> <http://schema.org/startDate> "2018-09-25T20:19:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424486874> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424486874> <http://schema.org/description> "I missed the logo preview, but that does sound nice. Also, I sadly can't take a look at the UI stuff until next week (currently tied up with [event running](http://restfest.org/)), but I'd be happy to then. UX was most of what I did until I got into standards. 😄 🎨 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424524025> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-424524025"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424524025> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424524025> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424524025> <http://schema.org/startDate> "2018-09-25T22:33:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424524025> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424524025> <http://schema.org/description> "@BigBlueHat It's never too late on GitHub! https://rawgit.com/w3c/json-ld-syntax/7abb999a4ae7dd1b8f88d0fedb7617e16e6091fa/index.html." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424738179> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424738179"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424738179> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424738179> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424738179> <http://schema.org/startDate> "2018-09-26T14:32:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424738179> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424738179> <http://schema.org/description> "I have just read the [resolution on the last WG call](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-21-json-ld#resolution4):\r\n\r\n> When establishing the base URI, use the document base URL only and ignore all surrounding data such as xml:base\r\n\r\nand I must admit I would have voted -1, had I been at the call. I have already put my argument into https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-423954217 and I do not want to repeat them. Any JSON-LD processor that understands embedded JSON-LD _have to_ do some level of HTML DOM parsing, and the DOM parser will provide the value of `baseURI` on the `script` element. There is no complication whatsoever using that value.\r\n\r\nAlthough I admit it is rarely used, I would expect that the author of a document with embedded JSON-LD will be surprised that a `<base>` element in the header will not affect the relative URL-s of the embedded JSON-LD. This is not the expected behavior imho." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424762640> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65#issuecomment-424762640"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424762640> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424762640> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424762640> <http://schema.org/startDate> "2018-09-26T15:37:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424762640> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424762640> <http://schema.org/description> "The workflow is based on [How to use Echidna with ReSpec and GitHub](https://github.com/w3c/echidna/wiki/How-to-use-Echidna-with-ReSpec-and-GitHub)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424764186> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424764186"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424764186> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424764186> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424764186> <http://schema.org/startDate> "2018-09-26T15:41:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424764186> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424764186> <http://schema.org/description> "[WG resolution](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-21-json-ld#resolution5) on call of 2018-09-21 was (indeed) to use the document base URL only and ignore all surrounding data such as xml:base.\r\n\r\nThe rationales included the data-block definition seeming to at the very least imply a clean separation, the additional requirements on processing regardless of how complex, and the perceived surprise of mixing data and presentational content." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424769663> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424769663"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424769663> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424769663> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424769663> <http://schema.org/startDate> "2018-09-26T15:56:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424769663> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424769663> <http://schema.org/description> "And now not as chair ...\r\n\r\nOutside of the browser environment, parsing HTML into a DOM is a pain. A regular expression can find script tags in the HTML tag soup and extract those that have the right media type ... but then would not have the surrounding information beyond the tag and its contents. So it could get an attribute on the script tag, but it would be harder to find other elements, and very hard to process the tree to find the closest wrapping element with a particular attribute ... that would need a full DOM based stack. \r\n\r\nThe extent to which Benjamin's reading of the data-block specification is correct or not ... I think we could verify at TPAC. \"None of the script attributes (except `type` itself) have any effect on data blocks.\" seems clear to me that regardless of what attribute values are set on the tag, the interpretation of the contents of the tag are not to be changed *due to those values*. Then the question is the extent to which embedded media types can assert dependence on the embedding media type rather than the other way round ... and I think we need to seek guidance on that.\r\n\r\nI agree with Gregg that the principle of least surprise should be given due attention, and that's a very subjective issue. What is surprising to one person is intuitive to someone from a different background. In this situation I would defer to developers who want to create JSON-LD embedded in HTML ... for whom @danbri seems like the best proxy. Not to try and discuss everything at TPAC, but that seems like something else we could determine in person.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424776458> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424776458"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424776458> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424776458> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424776458> <http://schema.org/startDate> "2018-09-26T16:12:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424776458> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424776458> <http://schema.org/description> "@azaroth42 yes, this is really something to be discussed at TPAC, ie, we should definitely not close the issue here.\r\n\r\nNot as a staff contact:-) I believe using regular expression to extract the script tag is even more of a pain... having the right expression that avoid such pitfalls as having a \r\n\r\n```\r\n<title>this document is about the HTML script element</title>\r\n```\r\n\r\nmay be tricky. I think that any decent programming environment these days have an HTML parser, ie, I would certainly not even dream about doing this in any other way than getting to the DOM (I did implement a [Web Publication Manifest extractor](https://github.com/iherman/WPManifest) and I just used a library to get this done. It was a breeze.)\r\n\r\nLet us add this to the TPAC agenda..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424795036> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424795036"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424795036> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424795036> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424795036> <http://schema.org/startDate> "2018-09-26T17:05:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424795036> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424795036> <http://schema.org/description> ">  I believe using regular expression to extract the script tag is even more of a pain...\r\n\r\nIt's not simply regular expressions that suffer this problem, must HTML processing tools, such as [Nokogiri](http://www.nokogiri.org) and [Gumbo](https://github.com/google/gumbo-parser) do not necessarily create a DOM, but allow you to run CSS or XPath queries to get back results, so `script[type=\"application/ld+json\"]` is an effective way to find the script tags, but tracing back the current effective language and base are non-trivial." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424810439> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424810439"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424810439> .
<https://api.github.com/users/danbri> <http://schema.org/accountId> "danbri" .
<https://api.github.com/users/danbri> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/170265?v=4" .
<https://api.github.com/users/danbri> <http://schema.org/url> "https://github.com/danbri"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/danbri> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424810439> <http://schema.org/creator> <https://api.github.com/users/danbri> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424810439> <http://schema.org/startDate> "2018-09-26T17:53:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424810439> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424810439> <http://schema.org/description> "https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454\r\n\r\nRegex is not a tool that can be used to correctly parse HTML." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424958887> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424958887"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424958887> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424958887> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424958887> <http://schema.org/startDate> "2018-09-27T04:54:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424958887> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424958887> <http://schema.org/description> "@gkellogg,\r\n\r\nwe agreed we would separate the language tag from the base URL, and the current resolution is not on language but base. Which is, in a sense, simpler: if you can get to a script element, then you can also easily find a base element (if it exists). It is not a big deal and, in contrast to the language case, it does not involve the element hierarchy." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424965407> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424965407"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424965407> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424965407> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424965407> <http://schema.org/startDate> "2018-09-27T05:40:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424965407> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/424965407> <http://schema.org/description> "Agreed that `head > base` is easy to find. `xml:base` like `Lang` much more difficult. Ultimately, we need to figure out the intent between HTML 5.2 and DOM." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425185591> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-425185591"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425185591> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425185591> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425185591> <http://schema.org/startDate> "2018-09-27T17:55:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425185591> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425185591> <http://schema.org/description> "Still not there, but it could be possible that the diff stage is holding it up, as it is accessing the existing state of the repo. How to know?\r\n\r\ncc/ @iherman " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425191912> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/66#issuecomment-425191912"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425191912> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425191912> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425191912> <http://schema.org/startDate> "2018-09-27T18:14:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425191912> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425191912> <http://schema.org/description> "Proposal:  Accept the bug, errata 1.0 and fix in 1.1.  We should allow : as a valid character, as it is valid according to the URI RFC (afaicr!)\r\n\r\nR" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425192688> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/66#issuecomment-425192688"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425192688> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425192688> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425192688> <http://schema.org/startDate> "2018-09-27T18:16:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425192688> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425192688> <http://schema.org/description> "👍 . I can think of a few examples of `:`- containing fragments in the wild." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425248124> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/70#issuecomment-425248124"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/70> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425248124> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425248124> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425248124> <http://schema.org/startDate> "2018-09-27T21:24:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425248124> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425248124> <http://schema.org/description> "@BigBlueHat said:\r\n\r\n> Also, the styles have some issues in the latest Firefox, fwiw.\r\n\r\nIt doesn't resize content when programmatically updated, apparently. I updated to give a classname and style with `width: 150px`.\r\n\r\nI'm going to go ahead and merge this, along with the other repos; we can work on other styling issues later." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425254362> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/66#issuecomment-425254362"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425254362> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425254362> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425254362> <http://schema.org/startDate> "2018-09-27T21:49:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425254362> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425254362> <http://schema.org/description> "This will create a few corner cases that need to be addressed, for example, creating a term starting with a \"#\" could create issues:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@base\": \"https://ex.org/\",\r\n    \"u\": {\"@id\": \"urn:u:\", \"@type\": \"@id\"},\r\n    \"#Test\": \"http://ex.com/\"\r\n  },\r\n  \"u\": [\"#Test\", \"#Test:2\"]\r\n}\r\n```\r\n\r\nrenders\r\n\r\n```\r\n[\r\n  {\r\n    \"urn:u:\": [\r\n      {\r\n        \"@id\": \"https://ex.org/#Test\"\r\n      },\r\n      {\r\n        \"@id\": \"http://ex.com/2\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nWe should probably restrict terms from beginning with a \"#\", or at least provide a warning.\r\n\r\nAdditionally, the expand IRI function will need some provision to consider if it is not a compact IRI (given no defined term), then value may be considered to be a relative IRI to the document base.\r\n\r\nThere are certainly more corner cases, and enumerating specific tests would be useful to ensure coverage.\r\n\r\nWhat about \"a:b\", where base includes \"#\"? Would that now expand to a relative IRI?\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425326676> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/66#issuecomment-425326676"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425326676> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425326676> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425326676> <http://schema.org/startDate> "2018-09-28T05:38:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425326676> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425326676> <http://schema.org/description> "Just for the records...\r\n\r\n@azaroth42 said\r\n> as it is valid according to the URI RFC (afaicr!)\r\n\r\nI looked it up in [rfc3986](https://tools.ietf.org/html/rfc3986#section-3.5), which says:\r\n\r\n```\r\nfragment    = *( pchar / \"/\" / \"?\" )\r\n...\r\npchar   = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\r\n```\r\n\r\nIe, `:` is a valid character in a fragment ID, we should not disallow it." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425343420> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-425343420"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425343420> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425343420> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425343420> <http://schema.org/startDate> "2018-09-28T07:09:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425343420> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425343420> <http://schema.org/description> "To be honest, I am without a clue. Although not really in the purview of our system team, we may still ask for help because there may be some experiences with this type of problems.\r\n\r\n@deniak @tripu @plehegar : in short, help:-) The PR preview has ceased to work on the documents on this repo, and we are trying to find out why. I know Tobie does not maintain this code any more, but is there a way to get hold of error messages/reports that give us an idea as for why the system does not work? We could try to take it from there...\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425406786> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-425406786"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425406786> .
<https://api.github.com/users/deniak> <http://schema.org/accountId> "deniak" .
<https://api.github.com/users/deniak> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1696128?v=4" .
<https://api.github.com/users/deniak> <http://schema.org/url> "https://github.com/deniak"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/deniak> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425406786> <http://schema.org/creator> <https://api.github.com/users/deniak> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425406786> <http://schema.org/startDate> "2018-09-28T11:29:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425406786> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425406786> <http://schema.org/description> "Unfortunately, pr-preview is hosted on a server outside W3C and I don't have access to its logs. If @tobie is not maintaining the service anymore, someone has to take over.\r\n\r\nI tried to see if there was a problem during the generation with spec-generator and it worked fine. Same thing for html diff so the problem must be coming from somewhere else." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425472479> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-425472479"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425472479> .
<https://api.github.com/users/tobie> <http://schema.org/accountId> "tobie" .
<https://api.github.com/users/tobie> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/3392?v=4" .
<https://api.github.com/users/tobie> <http://schema.org/url> "https://github.com/tobie"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tobie> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425472479> <http://schema.org/creator> <https://api.github.com/users/tobie> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425472479> <http://schema.org/startDate> "2018-09-28T15:26:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425472479> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425472479> <http://schema.org/description> "I do maintain the code and the service. I just can’t offer pro bono help getting people to set it up or use it or customize it to their needs. I’m happy to take a PR that would better surface error messages to the GitHub UI, or implement it for a fee if you don’t want to do the work yourself, but unfortunately, I can’t really do more than that. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853365> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/66#issuecomment-425853365"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/66> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853365> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853365> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853365> <http://schema.org/startDate> "2018-10-01T10:01:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853365> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853365> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-28-json-ld).\r\n\r\n- `RESOLVED:  Accept the bug, submit errata 1.0 and fix in 1.1 by tightening the definition of a URI scheme`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n4. New Issues<br/>\r\n4.1. Fragment identifiers with “:”<br/>\r\nIvan Herman: link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/66\">https://github.com/w3c/json-ld-syntax/issues/66</a><br/>\r\nRob Sanderson: moving on to issues<br/>\r\n… This was discovered as a bug over the past day<br/>\r\n… We’ve been discussing it, and it’s valid to have : in fragment ids, some we need to fix this in the spec<br/>\r\nGregg Kellogg: I think that issue is that JSON-LD does not have a syntax for compact IRIs vs. URLs like RDFa so you can recognize prefixes vs. what is a URI scheme<br/>\r\n… in this case, this is a bug<br/>\r\n… since the pound sign is not a scheme, and it’s not a defined term<br/>\r\n… if it were, there wouldn’t be a concern.<br/>\r\n… the case we’re running across is that #test and #test:2 the first is a relative URI, since it’s interpreted as a ID<br/>\r\n… so it’s a IRI or a document-relative IRI. The second case, it could be a compact IRI or an absolute IRI<br/>\r\n… by tightening up the language, it must either match a term or the scheme production and a hash test would not match that production<br/>\r\n… but there are other corner cases<br/>\r\n… where there are other places where the hash sign may occur<br/>\r\n… we need to come up with more breaking cases and tests<br/>\r\n… what about a:b where the base includes a hash?<br/>\r\n… a does match the production of the scheme, and could be an absolute IRI<br/>\r\nRob Sanderson: so long as it’s deterministic, but it’s these cases where it’s legal, but not permitted according to the algorithm where there’s the issue<br/>\r\n… for fixing it, have we tried it?<br/>\r\nGregg Kellogg: I haven’t fixed it, but I think it’s straightforward if we tighten up what a URI scheme is<br/>\r\nRob Sanderson: We can fix this in 1.1, but we should also errata 1.0<br/>\r\nGregg Kellogg: I think we should not change the requirements, but highlight the issue<br/>\r\nIvan Herman: has it yet been submitted in the errata list?<br/>\r\nGregg Kellogg: no<br/>\r\nIvan Herman: We should document it<br/>\r\n… editorially, when we have the list of changes, we should make a reference to the errata so we can change 1.0 because it’s a bug<br/>\r\nProposed resolution: Accept the bug, submit errata 1.0 and fix in 1.1 by tightening the definition of a URI scheme (Rob Sanderson)<br/>\r\nIvan Herman: this is explicit in our charter<br/>\r\nGregg Kellogg: +1<br/>\r\nAdam Soroka: +1<br/>\r\nIvan Herman: +1<br/>\r\nRob Sanderson: +1<br/>\r\nDavid Newbury: +1<br/>\r\nJeff Mixter: +1<br/>\r\nDavid I. Lehn: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nResolution #3: Accept the bug, submit errata 1.0 and fix in 1.1 by tightening the definition of a URI scheme<br/>\r\nAdam Soroka: Process: When we submit an errata, are we supposed to do something, or is it an action?<br/>\r\nIvan Herman: just describing it<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853614> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-425853614"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853614> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853614> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853614> <http://schema.org/startDate> "2018-10-01T10:02:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853614> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/425853614> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-28-json-ld).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n4.2. @vocab property expansion<br/>\r\nRob Sanderson: Link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/56\">https://github.com/w3c/json-ld-syntax/issues/56</a><br/>\r\nRob Sanderson: This one is about the expansion of @vocab properties and the issue claims that it is counter-intuitive<br/>\r\n… from my perspective, it goes back to #7 (won’t-fix) that the processing model for @type shouldn’t be able to customized<br/>\r\n… more than allowing @container: @set<br/>\r\n… to avoid monkeying around and overcomplicating<br/>\r\n… the response is that that fixes #7, but you can’t fix this issue with scoped contexts<br/>\r\n… but Gregg has an example that fixes it…<br/>\r\nGregg Kellogg: well…..<br/>\r\n… his feeling is that he’s willing to do things in a context to hide this, but @base is restricted from being in a remote context, and that doesn’t satisfy him<br/>\r\n… this is about discrepancies between vocabularies space and document space, where you can use @vocab: “”<br/>\r\n… and that might get to a point where you’re not surprised, but there’s overlap with Manu’s blank-nodes as properties, where @vocab is a solution, but not a wide enough oe<br/>\r\n… maybe we need to make that a bit wider, make it any relative IRI relevant to the document base<br/>\r\n… in 1.0, you can generate an error with this, and we could make it document relevant, which widens what we can put in vocal, which handles both this and Manu’s request<br/>\r\nRob Sanderson: can you talk through why the first Barney expands this wy?<br/>\r\nGregg Kellogg: if we look at Barney, it’s value is a node definition. In any context, ex2:barney evaluates to the URl<br/>\r\n… But fred has the value, with the value parnet<br/>\r\n… string values are intended to be treated as an IRI within the vocab space, so if barney is the string value of fred, we evaluate barney as vocab-relevant<br/>\r\n… there is no @vocab defined, but barney is a term, so we ill now interpret them as iris, so it’s got a value of ex2:barney<br/>\r\n… so when we evaluate things in the vocabulary space, it will look to terms and compact IRIs<br/>\r\n… so it satisfies the term use case<br/>\r\n… when we look at it as ID, which makes it @id, which is in doc space, and we do not interpret things in that space relative to the vocabularies<br/>\r\n… in document space, it cannot be a bare term, so we don’t evaluate it<br/>\r\n… it could have been barney:, which would work.<br/>\r\n… he asked why ID can’t be treated in the vocab space, and that goes back to our decision<br/>\r\n… why didn’t we want terms to be values?<br/>\r\n… since we allow compact terms?<br/>\r\n… typically, where you see this conflation, you are closer to being in the use case where you’re defining a vocabulary<br/>\r\n… where it does make sense<br/>\r\nRob Sanderson: was that clear?<br/>\r\nIvan Herman: so I’m not ashamed to say, no.<br/>\r\n… It is because it is not complicated, bu what this means for us and readers, is that expansions, and the bifurcations, we should have that in a note and understand it<br/>\r\n… frankly, I don’t have a clear idea how things work<br/>\r\n… the other comment is that we should have a rule that when an issue is put in, and when it has an example, the example should be reduced.<br/>\r\n… from the point of this issue, there are additional things that make things more complicated<br/>\r\nRob Sanderson: +1<br/>\r\nIvan Herman: we should really ask them to make it more simple and to be careful, since much here is not relevant<br/>\r\nAdam Soroka: whatever comes out of this, we might really need a note lays out the spaces around expansion, since the suspicion is that this arises because it’s really hard to understand this<br/>\r\nGregg Kellogg: I think that the API document is fairly consistent is clear about this, and the people who are the most likely to be confused are unlikely to read this<br/>\r\n… so we’re stuck with the JSON vocab, in turtle there are pnames or iris. In JSON, we can’t do that, so we need to discern the intent around meaning<br/>\r\n… thus the bifurcation between the spaces<br/>\r\n… it’s laid out, and it’s easy to get lost, and adding another note in syntax documents.<br/>\r\n… how much detail to be need to get into?<br/>\r\n… we need a primer<br/>\r\n… and we need a champion for that primer<br/>\r\nIvan Herman: I get the problem, and it’s not 1.0, it’s just…terrible.<br/>\r\n… and I don’t think it needs to be in the specification, and a primer would be the ideal place for it.<br/>\r\n… authors will never read the API, and I don’t want to. I just want to put data in JSON-LD<br/>\r\n… that’s why the primer is required.<br/>\r\n… otherwise people will be lost<br/>\r\nJeff Mixter: the explanation is helpful, and it would be helpful to have the example to be recreated to be realistic, and it’s really confusing with freds and barneys<br/>\r\n… it might be better to have real-world examples<br/>\r\nRob Sanderson: a complication with #33<br/>\r\nRob Sanderson: <a href=\"https://github.com/w3c/json-ld-api/issues/33\">https://github.com/w3c/json-ld-api/issues/33</a><br/>\r\nRob Sanderson: It would be nice to have the Uris compact to not just ID, but also to @id. Doesn’t this mean changing the space?<br/>\r\nGregg Kellogg: the way I take this option is to not compact to allow properties, but not values<br/>\r\n… that things would remain in their expanded state.<br/>\r\n… doing this wouldn’t add additional space<br/>\r\n… it’s how you interpret string values. If you’ve got an object, it’s unambiguous<br/>\r\nRob Sanderson: If the context wanted ID: barney to be compacted to id: barney, and another term compacted to a string, then those two otherwise identical lines would have different value spaces<br/>\r\nGregg Kellogg: if you were able to specify the value space of a term, as in the first comment of #33…I think the issues comes down to wanting to specifiy for a property when compacting, you want to compact the term, but not the value.<br/>\r\n… if you do this, it continues to be unambiguous, …something about strings…<br/>\r\nRob Sanderson: is there a proposal?<br/>\r\nGregg Kellogg: do we need a issue to change the rules about @vocab to use relative IRIs in document space<br/>\r\n… I can create that issue<br/>\r\nIvan Herman: I would like to move this to face-to-face<br/>\r\nGregg Kellogg: sure<br/>\r\nRob Sanderson: sure<br/>\r\nAdam Soroka: could we leave a note for the primer?<br/>\r\n… maybe a label?<br/>\r\n… about the spaces?<br/>\r\nGregg Kellogg: we should create an issue for the primer about that<br/>\r\nRob Sanderson: gregg, create the issue about vocabs, adam, about the primer, and we’ll defer this to face-t-face<br/>\r\nAdam Soroka: +1 to that!<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426097278> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/74#issuecomment-426097278"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426097278> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426097278> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426097278> <http://schema.org/startDate> "2018-10-01T23:29:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426097278> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426097278> <http://schema.org/description> "See also w3c/json-ld-api#41." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426104113> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/74#issuecomment-426104113"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426104113> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426104113> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426104113> <http://schema.org/startDate> "2018-10-02T00:10:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426104113> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426104113> <http://schema.org/description> "Adding an example sure causes a gigantic mess for an otherwise small change." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426106968> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/74#issuecomment-426106968"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/74> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426106968> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426106968> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426106968> <http://schema.org/startDate> "2018-10-02T00:27:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426106968> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426106968> <http://schema.org/description> "That’s because we save examples along with their numbers, and rent,Bering changes a lot. It may be more useful to save examples just using their titles." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426476013> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426476013"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426476013> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426476013> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426476013> <http://schema.org/startDate> "2018-10-03T00:39:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426476013> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426476013> <http://schema.org/description> "@tobie the issue isn’t setup, it’s visibility into what went wrong. It was working properly for many PRs until it just stopped working; bother here, on json-ld-api and json-ld-framing. Presumably, there’s something in a log file that might give a clue to what’s going on, but we have no visibility into to these. Short of giving us an idea of why it stopped working, some form of console that could show the status re different repos would be useful for many, I suspect.\r\n\r\nI sympathize with the burden support gives you, but this has rapidly become a required tool for WGs to reply upon, and if not you, then perhaps @deniak or someone in W3C can step in." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426516781> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426516781"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426516781> .
<https://api.github.com/users/tobie> <http://schema.org/accountId> "tobie" .
<https://api.github.com/users/tobie> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/3392?v=4" .
<https://api.github.com/users/tobie> <http://schema.org/url> "https://github.com/tobie"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tobie> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426516781> <http://schema.org/creator> <https://api.github.com/users/tobie> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426516781> <http://schema.org/startDate> "2018-10-03T05:33:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426516781> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426516781> <http://schema.org/description> "There are limitations to what the logs provide (they’re only available 24h) that makes it suboptimal as a debugging strategy. The real solution is surfacing the error messages. Again I’m happy to take a PR for that.  " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426517782> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426517782"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426517782> .
<https://api.github.com/users/tobie> <http://schema.org/accountId> "tobie" .
<https://api.github.com/users/tobie> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/3392?v=4" .
<https://api.github.com/users/tobie> <http://schema.org/url> "https://github.com/tobie"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tobie> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426517782> <http://schema.org/creator> <https://api.github.com/users/tobie> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426517782> <http://schema.org/startDate> "2018-10-03T05:40:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426517782> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426517782> <http://schema.org/description> "That said, I’m happy to give @deniak log access. It mostly won’t solve your problem, though. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537684> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426537684"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537684> .
<https://api.github.com/users/deniak> <http://schema.org/accountId> "deniak" .
<https://api.github.com/users/deniak> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1696128?v=4" .
<https://api.github.com/users/deniak> <http://schema.org/url> "https://github.com/deniak"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/deniak> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537684> <http://schema.org/creator> <https://api.github.com/users/deniak> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537684> <http://schema.org/startDate> "2018-10-03T07:25:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537684> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537684> <http://schema.org/description> "@tobie can you give me access to the server? I can then try to create a new PR to see what's going on." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537873> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426537873"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537873> .
<https://api.github.com/users/deniak> <http://schema.org/accountId> "deniak" .
<https://api.github.com/users/deniak> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1696128?v=4" .
<https://api.github.com/users/deniak> <http://schema.org/url> "https://github.com/deniak"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/deniak> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537873> <http://schema.org/creator> <https://api.github.com/users/deniak> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537873> <http://schema.org/startDate> "2018-10-03T07:26:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537873> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426537873> <http://schema.org/description> "me or @plehegar I guess" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426563262> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426563262"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426563262> .
<https://api.github.com/users/tobie> <http://schema.org/accountId> "tobie" .
<https://api.github.com/users/tobie> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/3392?v=4" .
<https://api.github.com/users/tobie> <http://schema.org/url> "https://github.com/tobie"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/tobie> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426563262> <http://schema.org/creator> <https://api.github.com/users/tobie> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426563262> <http://schema.org/startDate> "2018-10-03T09:03:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426563262> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426563262> <http://schema.org/description> "Alright, so I unfortunately can't give you log access without upgrading to a paid plan. Here's the error message I'm seeing:\r\n\r\n```\r\nw3c/json-ld-syntax/74: opened (Error: 500 Internal Server Error) \r\nOct 01 16:27:16 pr-preview app/web.1:  { error: '\\n?  Sorry, there was an error generating the HTML. Please report this issue!\\n\\u001b[36mSpecification: https://cdn.rawgit.com/w3c/json-ld-syntax/eb61149c86124d4a53ec01f16cd8db132201ad44/index.html?isPreview=true;publishDate=2018-10-01\\u001b[39m\\n\\u001b[36mReSpec version: 23.0.5\\u001b[39m\\n\\u001b[36mFile a bug: https://github.com/w3c/respec/\\u001b[39m\\n\\u001b[36mError: Error: Evaluation failed: undefined\\u001b[39m\\n\\u001b[36m\\u001b[39m', \r\nOct 01 16:27:16 pr-preview app/web.1:    request_url: 'https://labs.w3.org/spec-generator/?type=respec&url=https%3A%2F%2Fcdn.rawgit.com%2Fw3c%2Fjson-ld-syntax%2Feb61149c86124d4a53ec01f16cd8db132201ad44%2Findex.html%3FisPreview%3Dtrue' } \r\n``` \r\n\r\nSeems like spec-generator is acting up, see:\r\n\r\nhttps://labs.w3.org/spec-generator/?type=respec&url=https%3A%2F%2Fcdn.rawgit.com%2Fw3c%2Fjson-ld-syntax%2Feb61149c86124d4a53ec01f16cd8db132201ad44%2Findex.html%3FisPreview%3Dtrue\r\n\r\nI still maintain that the path going forward is to [surface these errors properly in the UI](https://github.com/tobie/pr-preview/issues/8). Again, I'm happy to take a PR for it, or to undertake this work for a fee if no one is willing to do it.\r\n\r\nPR Preview is used by folks outside of W3C, so I can't just transfer the project over to W3C. That said, if W3C wants to run its own instance, PR Preview is OSS, so this option is also on the table." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426603784> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-426603784"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426603784> .
<https://api.github.com/users/deniak> <http://schema.org/accountId> "deniak" .
<https://api.github.com/users/deniak> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1696128?v=4" .
<https://api.github.com/users/deniak> <http://schema.org/url> "https://github.com/deniak"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/deniak> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426603784> <http://schema.org/creator> <https://api.github.com/users/deniak> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426603784> <http://schema.org/startDate> "2018-10-03T11:34:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426603784> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/426603784> <http://schema.org/description> "@tobie thanks for the logs. It appears the issue comes from respec, I'll raise an issue. @gkellogg I'm following up with Marcos. Hopefully it'll be fixed soon.\r\n\r\nI'll try to find time to work on the error feedback and will submit a PR.\r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427021993> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75#issuecomment-427021993"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427021993> .
<https://api.github.com/users/pietervdvn> <http://schema.org/accountId> "pietervdvn" .
<https://api.github.com/users/pietervdvn> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/1466478?v=4" .
<https://api.github.com/users/pietervdvn> <http://schema.org/url> "https://github.com/pietervdvn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pietervdvn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427021993> <http://schema.org/creator> <https://api.github.com/users/pietervdvn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427021993> <http://schema.org/startDate> "2018-10-04T13:38:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427021993> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427021993> <http://schema.org/description> "The same also applies for 2.8.2 and 2.8.5" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427055986> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75#issuecomment-427055986"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427055986> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427055986> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427055986> <http://schema.org/startDate> "2018-10-04T15:10:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427055986> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427055986> <http://schema.org/description> "Order matters, after running through the steps, `@graph@index` and `@graph@index@set` will be in a different sequence in _containers_. If _value_ contains `@index` we prefer that, otherwise, it’s an acceptable term, but at a lower priority." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427057178> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/71#issuecomment-427057178"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/71> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427057178> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427057178> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427057178> <http://schema.org/startDate> "2018-10-04T15:13:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427057178> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427057178> <http://schema.org/description> "Thanks for your help, @deniak. Marcos has a change to ReSpec which should help keep PR Preview keep running in the face of such errors, but surface them." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427195612> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-427195612"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427195612> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427195612> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427195612> <http://schema.org/startDate> "2018-10-04T22:57:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427195612> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427195612> <http://schema.org/description> "There was a proposal to do something like this in json-ld/json-ld.org#426, which went unsupported. The wording for `@type` for nodes is there because of common confusion, but the ability to add things to the graph based on information in the context was unsupported. This was considered again, in a different light, in #19 (see discussion [here](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-09-14-json-ld#section4-4)). Basically, the feeling is that the context should not be used to add information to the graph. If the context were to change, then the content of the associated JSON-LD document could have a radically different meaning.\r\n\r\nFor approaches to change the content of a linked data graph, framing is appropriate. Here, a frame could be created that created a default for `@type` to do what you suggest." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427442980> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-427442980"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427442980> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427442980> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427442980> <http://schema.org/startDate> "2018-10-05T17:36:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427442980> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427442980> <http://schema.org/description> "Agree with Gregg that data transformation (in this case adding an `rdf:type` assertion) is not the job of the context. For precedent, consider #7 and #15. \r\n\r\nPropose close wontfix." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427443993> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-427443993"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427443993> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427443993> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427443993> <http://schema.org/startDate> "2018-10-05T17:40:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427443993> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427443993> <http://schema.org/description> "👍 to wontfix." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427518736> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-427518736"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427518736> .
<https://api.github.com/users/AtesComp> <http://schema.org/accountId> "AtesComp" .
<https://api.github.com/users/AtesComp> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/23365631?v=4" .
<https://api.github.com/users/AtesComp> <http://schema.org/url> "https://github.com/AtesComp"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/AtesComp> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427518736> <http://schema.org/creator> <https://api.github.com/users/AtesComp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427518736> <http://schema.org/startDate> "2018-10-05T22:49:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427518736> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427518736> <http://schema.org/description> "The argument against seem pedantic.  Type is type is type...whether it is applied to simple values or nodes.  The argument against seem to want to throw out everything we've learned about computer science and substitute some other modality for type: \"@type\" in JSON-LD should represent something other that \"type\" in every other well formed language.  Typing something as \"integer\" is no different than typing something as \"widget\".  If adding information to the graph is the issue, then the argument is entirely hypocritical as I present below.  Adding type information to data values IS adding information.  Information is added by simply appending @context.  In all instances I've seen @context used, it is at least transformative which implies some application of knowledge not necessarily present in the raw data, i.e., added information...by the consumer.\r\n\r\nConfusing the issue with RDF (or any other graph specification) and the fact that adding information for type on a node (versus a value) creates an extra triple should have never been considered as many discussions specify JSON-LD and RDF are separate issues.  In fact, JSON-LD will add RDF triples in the form of blank node allocations via \"@container\": \"@list\" and other constructs--that didn't seem to bother anybody.  A list implies the blank nodes are typed as rdf:List and adds rdf:first, rdf:rest, and rdf:nil relate triples.  The fact that consuming a JSON-LD serialization of data should be somehow limit the typing of that data seems entirely contrary to developing JSON-LD in the first place.  Type gives meaning to data in all aspects of Computer Science.  Why should JSON-LD be any different?\r\n\r\nSo, if this false flag argument is indeed the issue, then let us consider how @type also affects data typing in the aspect of \"information added\".  When I type a value given as \"Snoopy\" via @context with \"xsd:string\", the consuming RDF system may simply transform the value to \"Snoopy\"^^xsd:string.  The \"xsd:string\" could have been any type, such as \"myComplexType\".  The point is that any data type uses a class ontology in RDF to represent type--the traditional notion of Class, Object, and Type.  Let us add a language element \"@en\" in a @context via \"@language\": \"en\".  Now \"Snoopy\" is \"Snoopy\"@en.  In either case, have we not explicitly added information?\r\n\r\nIn fact, depending on the RDF consumer, the ingestion may indeed add triples to represent data types and language.  While RDF 1.1 specifies the use of data type and language tags, there is no imperative to force literals to hold data type and language:\r\n```\r\n(node1) -- hasDog --> \"Snoopy\"@en\r\n```\r\ncan be represented as\r\n```\r\n(node1) -- hasDog --> (_:bn) -- rdf:type --> (DogClass)\r\n                         | -- value --> \"Snoopy\"\r\n                         |--> language --> \"en\"\r\n                         `--> datatype --> (xsd:langString)\r\n```\r\nor\r\n```\r\n(node1) -- hasDog --> \"Snoopy\"\r\n(_:s) -- rdf:type --> (rdf:Statement)\r\n  |--> rdf:subject --> (node1)\r\n  |--> rdf:predicate --> (hasDog)\r\n  |--> rdf:object --> \"Snoopy\"\r\n  |--> language --> \"en\"\r\n  `--> datatype --> (xsd:langString)\r\n```\r\nAdding information (as triples, reification, or otherwise) is not and never should have been an issue.  Depending on the storage mechanism, the consumer is free to store data how they see fit.  Then, @context either helps a consumer with that objective or not.  If not, then JSON-LD is lacking--I might as well use JSON and construct independent transformations.\r\n\r\nYou stated:\r\n> If the context were to change, then the content of the associated JSON-LD document could have a radically different meaning.\r\n\r\nYes.  And?  Since the consumer is free to add and manipulate the context, it should be up to the consumer to use the data however they define the context.  If one consumer uses \"xsd:string\" for values and another uses \"widget\", then the associated JSON-LD document could have a radically different meaning.  JSON-LD already allows that and its up to the consumer to decide.  In the face of a producer lacking type on provided data, what is the consumer to do?  Answer: impose type as they see fit.  If adding type to a node requires a triple in RDF, so what?  In another graph specification, it may not.  With RDF data, I can transform the document to add missing node types, so why does JSON-LD resist?\r\n\r\nMy issue is that we are transforming JSON to JSON-LD via @context.  Since the data is raw JSON, it is wholly expected that adding information will be required to \"make sense\" out of the data to support Linked Data.  I cannot rely on the producer to conform to a Frame definition.  In fact, the Frame specification seems to require @type pre-specified in the input in order to match the Frame definitions for output.  I see no example where @type is added due to Frame processing.\r\n\r\nFYI: At https://www.w3.org/2018/jsonld-cg-reports/json-ld-framing/#framing Example 8 looks like it needs review and update.\r\n\r\nSo, even after reading the provided info on @type and Frames, I'm still at a loss to understand the contrary viewpoint.  It seems to me that Frames are specifying a context that produces a transform of typed nodes and their relations--an important issue, but misses the point on the \"type\" issue.  If Frame processing does allow me to assign @type to a node, then allowing @context to add @type to a node should not be an issue either.\r\n\r\nFor Frames, how do we generally add type for untyped nodes when it relies on @type to map input to output?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427608414> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/65#issuecomment-427608414"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/65> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427608414> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427608414> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427608414> <http://schema.org/startDate> "2018-10-06T21:42:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427608414> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427608414> <http://schema.org/description> "The last thing to do is to remove the \"dry-run\" configuration, which we can do after the first time pushing to the \"publications\" branch to verify it's working properly without doing a dry run.\r\n\r\nAlso, it will be cleaner to do a \"Squash and merge\", which I can take care of." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427723853> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-427723853"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427723853> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427723853> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427723853> <http://schema.org/startDate> "2018-10-08T05:17:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427723853> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427723853> <http://schema.org/description> "What you see as an editor's draft is the source in respec, which is not exactly the file that one sees when reading the official draft (ie, the file as stored in `https://www.w3.org/TR/json-ld11` for example). We have added the right flag so that the generated HTML will contain a JSON-LD data block in the header, using the schema.org vocabulary. I think this is exactly what you are looking for.\r\n\r\nWe do not plan to add microdata, though. It would be duplicating the same information as what is in the JSON-LD data block.\r\n\r\nCc @BigBlueHat @azaroth42 @gkellogg " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427735687> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-427735687"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427735687> .
<https://api.github.com/users/kael> <http://schema.org/accountId> "kael" .
<https://api.github.com/users/kael> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2463?v=4" .
<https://api.github.com/users/kael> <http://schema.org/url> "https://github.com/kael"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kael> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427735687> <http://schema.org/creator> <https://api.github.com/users/kael> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427735687> <http://schema.org/startDate> "2018-10-08T06:51:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427735687> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427735687> <http://schema.org/description> "Thanks, I didn't look in that version though. Yes, that's what I'm looking for.\r\n\r\nTL;DR: Concretely, I was thinking to using structured data to:\r\n- generate TypeScript definitions directly from a spec IDL embedded in JSON-LD (fetched over HTTP and parsed with a tool like _jsonld.js_ or _node-microdata_) ;\r\n- generate core IDL functions from the defined algorithms (we're not there yet) ;\r\n- generate some \"common documentation\" including core concepts, with their definitions and relations with others ;\r\n- generate the spec as a goodie.\r\n\r\nSpecifications have the same pattern, and I believe the https://schema.org/TechArticle is not enough to reflect the structure of specifications. Specifications contain:\r\n- metadata ;\r\n- references to other specifications ;\r\n- core concepts definitions ;\r\n- IDL by IDL, function by function defintion, usages, limits and examples ;\r\n- IDL defintions (\"the code is the law\");\r\n- what else ?\r\n\r\nThus, I was thinking to having a way to highlight, emphasize, these patterns ; and make them _\"machine-readable\"_.\r\n\r\nCore concepts could be defined with OWL (if I understand it correctly), perhaps for IDL too, and all embedded in JSON-LD.\r\n\r\nRelations could be done using microdata in the HTML code (although not sure, considering there could be some redundancy).\r\n\r\nAlthough having a way to automatically generate code from a specification could be used by a malicious author to embed, say, a fake random numbers generator, it could also be a way to mutualize efforts by, in the end, having potentially the best practices and feedbacks included \"natively\" in the spec and hence in the code.\r\n\r\nThere exists some related works like [xml2rfc](https://xml2rfc.tools.ietf.org/), [SchemaOrg:APIReference](https://schema.org/APIReference), the [Apache Software Foundation DOAP file](https://projects.apache.org/create.html)  (seems their website is partially broken currently) and their [DOAP Extensions: Standards](https://web.archive.org/web/20150710000623/https://projects.apache.org/docs/standards.html) which adds reference, in a DOAP file, to the specifications used in the published software, the \"capabilities\" of the software.\r\n\r\nPerhaps there's already a vocabulary for specifications that'd allow to model them in a detailed and \"machine-readable\" fashion, I got to investigate.\r\n\r\nAll of that to say that JSON-LD (and microdata) specifications could include some advanced usage of what they define.\r\n\r\n**Addendum**: Could _jsonld.js_ and _node-microdata_ use the JSON-LD specifications to model their core behaviour and structure, in their _index.d.ts_ file, for example ?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427775348> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-427775348"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427775348> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427775348> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427775348> <http://schema.org/startDate> "2018-10-08T09:43:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427775348> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427775348> <http://schema.org/description> "@kael, with my geek hat on I understand what you would like to have. However, these structures, vocabularies, etc, are either not yet existent or are not stable. I'm afraid it is not in the charter of the JSON-LD Working group to define those, nor can it possibly modify the publication style and rule of W3C Recommendations when defining, e.g., WebIDL. This group is only responsible for the syntax...\r\n\r\nI would hope that, at some point, such structures, vocabularies, etc., will be defined and possibly combine with the W3C publishing rules, at which time a future version of a JSON-LD document could adopt them. But this specific Working Group would have difficulties going beyond what we have now...\r\n\r\nThat being said, our editor, @gkellogg, may have some further ideas...\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427840819> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-427840819"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427840819> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427840819> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427840819> <http://schema.org/startDate> "2018-10-08T13:49:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427840819> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427840819> <http://schema.org/description> "@kael thanks for posting this! I love what you're working to create/produce, but as @iherman mentioned, this particularly Working Group is focused on the JSON-LD 1.1 version changes, and only tangentially on the tooling (though we'd all like to see many more tools!).\r\n\r\nWhat you describe sounds *very* much like what the [ScholarlyHTML Community Group](https://www.w3.org/community/scholarlyhtml/) was/is/will-be attempting to build as a future revision of a [ScholarlyHTML](https://w3c.github.io/scholarly-html/) format. It uses a mix of JSON-LD and RDFa to create a combined understanding of a scholarly article.\r\n\r\nThere's no reason a similar approach couldn't be applied to specifications! It just needs time and code. 😉 \r\n\r\nIf you're interested in pursuing that, I'd recommend you:\r\na) join the [ScholarlyHTML Community Group](https://www.w3.org/community/scholarlyhtml/) and present your hopes/dreams/plans\r\nb) fork [Respec](https://github.com/w3c/respec) (what we use to generate the JSON-LD spec) and play with adding RDFa to the various sections of its output.\r\nc) keep the ScholarlyHTML group updated on what you're building/attempting to build interest in your project (and to get help hopefully!).\r\n\r\nLastly, I'd recommend digging into [RDFa](http://rdfa.info/) in place of microdata as you'll find it's capabilities are much more on par with JSON-LD's and you'll consequently be far less constrained when modeling your vocabularies (or utilizing any existing ones).\r\n\r\nThanks for posting this!\r\n🎩 \r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427888147> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-427888147"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427888147> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427888147> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427888147> <http://schema.org/startDate> "2018-10-08T15:57:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427888147> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427888147> <http://schema.org/description> "Example 8 looks correct to me. Could you be more explicit about the issue that you're seeing please?\r\n\r\nFor the question on how to add data via frames, please have a look at the use of [`@default`](https://www.w3.org/TR/json-ld11-framing/#default-content) \r\n\r\nAdding arbitrary data has been considered problematic due to the automatic inclusion of referenced contexts over the network, that open the door for attacks via data injection.  Imagine if your [fridge](https://www.w3.org/WoT/) resolved a context that had been hijacked and used it to inject new malicious services or display spam as warnings.\r\n\r\nThe data types and languages are to achieve parity with other RDF syntaxes -- JSON doesn't support `@en` or `^^xsd:string` and hence needs accommodation. Rather than force every langString to be explicit, the convenience added in JSON-LD 1.0 is to put it in the context. That does not open the door for arbitrary triples, nor does the syntax parity for rdf:List.  Note, please, that other ordering syntaxes were rejected in #15 as out of scope.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427894898> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75#issuecomment-427894898"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427894898> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427894898> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427894898> <http://schema.org/startDate> "2018-10-08T16:17:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427894898> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/427894898> <http://schema.org/description> "Agree with @gkellogg. Propose close, not an issue :)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428075230> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-428075230"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428075230> .
<https://api.github.com/users/kael> <http://schema.org/accountId> "kael" .
<https://api.github.com/users/kael> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2463?v=4" .
<https://api.github.com/users/kael> <http://schema.org/url> "https://github.com/kael"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kael> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428075230> <http://schema.org/creator> <https://api.github.com/users/kael> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428075230> <http://schema.org/startDate> "2018-10-09T06:27:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428075230> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428075230> <http://schema.org/description> "@BigBlueHat Actually I'm working on something else, it's a side idea though, based also, first, on my experience with Erlang [typing](http://erlang.org/doc/reference_manual/typespec.html) and [static analysis](https://learnyousomeerlang.com/dialyzer), like trying to automatically extract [XML Schemas from XMPP spec](https://xmpp.org/extensions/xep-0060.html#schemas) and generate data types from them, and then to generate automated tested using _\"Property based testing\"_ with [PropEr](http://proper.softlab.ntua.gr/) a QuickCheck-like.\r\n\r\nI believe the subject can be split into two topics though: adding \"human-oriented\" content (the specification) and \"machine-oriented\" content (the IDL). I've been searching a bit and came across SKOS and something perhaps a bit esoterical called the [Unified Foundational Ontology](http://ontology.com.br/) which defines _\"OntoUML\"_, _«  a pattern-based and ontologically well-founded version of the Unified Modeling Language (UML) »_. There's also the [HTTP Vocabulary in RDF 1.0](https://www.w3.org/TR/HTTP-in-RDF10/) and [WebIDL](https://www.w3.org/TR/WebIDL-1/) as related works. Looking at the [2144 contexts](http://prefix.cc/context), there doesn't seem to be any for specifications.\r\n\r\n##### 1. Schema:Specification\r\n\r\nI believe specifications should have their own vocabulary. There's already:\r\n\r\nhttps://schema.org/TechArticle\r\nhttps://schema.org/APIReference\r\nhttps://schema.org/SoftwareSourceCode\r\nhttps://schema.org/SoftwareApplication\r\n\r\nhttps://schema.org/Specifications looks like a yet undiscovered element of the SchemaOrg Periodic Table.\r\n\r\nBut until that, perhaps SKOS could be used with `Schema:TechArticle`. I've edited a [version of the JSON-LD 1 draft with SKOS using microdata](https://github.com/kael/json-ld-syntax/compare/master...kael:microdata-version), with `skos:Concept`, `skos:definition`, `skos:example`, `skos:note`, `skos:ChangeNote`, `Schema:articleBody` and `Schema:Code`. I should try also with the [DOAP Standards](https://web.archive.org/web/20150710000623/https://projects.apache.org/docs/standards.html) extension (assuming it'd be considered an accepted reference).\r\n\r\n@iherman What you think ? Would you have to re-charter to enhance the structure of the spec ? Is it definitely out of the scope ?\r\n\r\n##### 2. Schema:WebIDL (approximative naming)\r\n\r\nI realize this is much more complex that I had thought, and it'd probably require a spec about writing specs with JSON-LD and/or microdata, written itself with JSON-LD and/or microdata.\r\n\r\nAssuming there were a JSON-LD context for WebIDL, it could be combined with the [Memento Timemap](http://timetravel.mementoweb.org/w3c/timemap/json/https://www.w3.org/TR/json-ld/) of the specification, it'd be possible to extract the WebIDL for each revision of the spec, and having TypeScript related types associated with a version, and not incrementally updated without consideration of the version of the spec.\r\n\r\nBut one important limitation with TypeScript is that there's only one _\"number\"_ type, typing is not precise enough (yet ?), which makes the idea not really doable for now, although having IDL embedded in JSON-LD could still be of interest." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428101575> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-428101575"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428101575> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428101575> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428101575> <http://schema.org/startDate> "2018-10-09T08:13:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428101575> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428101575> <http://schema.org/description> "@kael, I am sorry if I sound unfriendly, but I believe this issue should be moved elsewhere (maybe to the repository of the JSON-LD CG?). As we said, this work, and its implementation, _cannot_ be done in the Working Group, and this repository should be kept free of non-WG issues...\r\n\r\n@azaroth42 is the JSON-LD CG a suitable place for this?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428106969> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-428106969"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428106969> .
<https://api.github.com/users/kael> <http://schema.org/accountId> "kael" .
<https://api.github.com/users/kael> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2463?v=4" .
<https://api.github.com/users/kael> <http://schema.org/url> "https://github.com/kael"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kael> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428106969> <http://schema.org/creator> <https://api.github.com/users/kael> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428106969> <http://schema.org/startDate> "2018-10-09T08:31:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428106969> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428106969> <http://schema.org/description> "@iherman Sure, noted.\r\n\r\nAt least, you have an example of what an enhanced specification would look like and how it could be used.\r\n\r\nCheers." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428308854> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-428308854"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428308854> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428308854> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428308854> <http://schema.org/startDate> "2018-10-09T18:54:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428308854> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/428308854> <http://schema.org/description> "The security concerns @azaroth42 notes are the key constraint on using `@context` (since those can be remotely referenced) to expand meaning rather than simply describe it.\r\n\r\nDoes Framing solve for your use case adequately? If not, that may be the better spec to target for feature/fix requests: https://github.com/w3c/json-ld-framing/issues\r\n\r\nThanks for raising these questions regardless!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384153> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75#issuecomment-429384153"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384153> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384153> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384153> <http://schema.org/startDate> "2018-10-12T16:29:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384153> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384153> <http://schema.org/description> "From WG call: @gkellogg to consider whether additional text could be valuable to explain how to read the algorithm steps." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384323> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75#issuecomment-429384323"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384323> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384323> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384323> <http://schema.org/startDate> "2018-10-12T16:30:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384323> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429384323> <http://schema.org/description> "Consider informative notification for how the container matching works." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429429415> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/82#issuecomment-429429415"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429429415> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429429415> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429429415> <http://schema.org/startDate> "2018-10-12T19:06:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429429415> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429429415> <http://schema.org/description> "@gkellogg is there anything specific you'd like to see improved here? Or just \"better\"? 😄 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429470885> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/82#issuecomment-429470885"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/82> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429470885> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429470885> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429470885> <http://schema.org/startDate> "2018-10-12T21:43:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429470885> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429470885> <http://schema.org/description> "Generally, just better." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510229> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/75#issuecomment-429510229"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/75> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510229> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510229> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510229> <http://schema.org/startDate> "2018-10-13T04:30:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510229> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510229> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-12-json-ld#section3-1).\r\n\r\n- `RESOLVED:  Mark #75 as editorial, for Gregg to consider whether additional text is needed to explain how to read the algorithm steps`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/75\">https://github.com/w3c/json-ld-syntax/issues/75</a><br/>\r\nRob Sanderson: first one seems like a misunderstanding about the algorithm. Greg clarified in the issue. no issue and we can close<br/>\r\nGregg Kellogg: maybe more descriptive overview could be helpful<br/>\r\nIvan Herman: the comment came in 8 days ago and the response came in 8 days ago as well. We should probably wait 1 week when we have issue from external members.<br/>\r\nRob Sanderson: close or make note about editorial changes?<br/>\r\nAdam Soroka: +1 to editorial.<br/>\r\nGregg Kellogg: make it editorial and look to make sure the description is more robust<br/>\r\nIvan Herman: marked as editorial and will add reference to the notes<br/>\r\nRob Sanderson: we can close without further discussion<br/>\r\nProposed resolution: Mark #75 as editorial, for Gregg to consider whether additional text is needed to explain how to read the algorithm steps (Rob Sanderson)<br/>\r\nGregg Kellogg: +1<br/>\r\nRob Sanderson: +1<br/>\r\nJeff Mixter: +1<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: +1<br/>\r\nBenjamin Young: +1<br/>\r\nTim Cole: +1<br/>\r\nResolution #2: Mark #75 as editorial, for Gregg to consider whether additional text is needed to explain how to read the algorithm steps<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510282> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-429510282"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510282> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510282> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510282> <http://schema.org/startDate> "2018-10-13T04:31:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510282> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/429510282> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-12-json-ld#section3-2).\r\n\r\n- `RESOLVED:  Mark #76 as editorial for Gregg (et al) to consider pathways between specs such as API to Framing`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: I think this falls into the out of scope category.<br/>\r\n… close with a will not fix with other issue as precedence. kick back to community group for how this should be handled in the future<br/>\r\nGregg Kellogg: no need to kick it to the community group. This can be done with framing.<br/>\r\nRob Sanderson: the desire was to not have explicit but rather implicit defs<br/>\r\n… i.e. adding triples via the context<br/>\r\nAdam Soroka: note that once again this issue revolves around type of dataype and type of resource. We are not going to change this. We need to document this very clearly to help prevent this type of misunderstanding<br/>\r\nIvan Herman: agree with Adam and additionally framing seems more like presenting the data based on a template. But since framing can be used for transformation then it must be emphasized much more than it currently is.<br/>\r\nBenjamin Young: ditto on Ivan<br/>\r\n… need to better describe framing and what it is and what it can do<br/>\r\n… this desire from the issue is not the first time we have heard this issue. We should look at them and ask if framing can do this, why are people not finding it?<br/>\r\n… this problem will not go away<br/>\r\nTim Cole: tend to agree that framing is powerful for data transformation. But framing conflates a bunch of processing and slows things down in general. Might want to consider that and debate if we should pull things apart a bit<br/>\r\nGregg Kellogg: Add content using @default<br/>\r\nRob Sanderson: want to clarify that my understanding of framing is that adding data to the graph is by @reverse properties and with @default but these do not allow you to randomly move data around.<br/>\r\n… we could be clearer about this but also be opinionated about what it should do and what we are willing to add<br/>\r\n… adding a bunch of stuff is not ideal. Keep it simple and focused<br/>\r\nAdam Soroka: agree with Ben and impression is that we see this so often because framing is newer and there is less uptake<br/>\r\n… is it out of our arena to introduce a document that demonstrate how to do what Tim’s student wanted to do?<br/>\r\nGregg Kellogg: to the last point, we could/should add this to the framing document. We should also add some to the API document that separates transformation and points them to the framing doc<br/>\r\n… about how far we go, we could imagine framing as more of query language. There was push back - it is for framing. Framing is not that.<br/>\r\n… there is a upcoming W3C workshop about standardizing graph data<br/>\r\nRob Sanderson: do we put in a reference to framing or should we just close it?<br/>\r\nBenjamin Young: I asked about that issue and I think we should point arrows between specs. I am planning some work and would like help with encouraging and pointing people to the right spec<br/>\r\nRob Sanderson: give a few days more and mark it as editorial<br/>\r\nProposed resolution: Mark #76 as editorial for Gregg (et al) to consider pathways between specs such as API to Framing (Rob Sanderson)<br/>\r\nGregg Kellogg: +1<br/>\r\nJeff Mixter: +1<br/>\r\nRob Sanderson: +1<br/>\r\nTim Cole: +1<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: +2<br/>\r\nAdam Soroka: +1<br/>\r\nBenjamin Young: +1<br/>\r\nResolution #3: Mark #76 as editorial for Gregg (et al) to consider pathways between specs such as API to Framing<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430039496> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/76#issuecomment-430039496"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/76> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430039496> .
<https://api.github.com/users/AtesComp> <http://schema.org/accountId> "AtesComp" .
<https://api.github.com/users/AtesComp> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/23365631?v=4" .
<https://api.github.com/users/AtesComp> <http://schema.org/url> "https://github.com/AtesComp"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/AtesComp> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430039496> <http://schema.org/creator> <https://api.github.com/users/AtesComp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430039496> <http://schema.org/startDate> "2018-10-15T22:43:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430039496> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430039496> <http://schema.org/description> "As a final response, I must point out that the issue for adding a triple for describing a object's type is not \"arbitrarily adding triples\" (sub, pred, obj) as they are restricted to a given subject and a controlled predicate (type).  The only arbitrary point is the object which **must be interpreted as a class**.  This in no way exposes a system to adding arbitrary ontological statements or any other statements for that matter.  Type's purpose **is** to describe meaning, not expand it.  Untyped data is the definition of meaningless.\r\n\r\nAs for the security concerns and opening attacks via data injection, I'll point out that those types of attacks would be most likely reserved to the \"data\", i.e., the literals, since a system would rely on the literals for command and control.  In other words, the actor would be providing (injecting) the JSON data directly.  However, manipulating type would be exceptionally harder and problematic in a hacking context as an actor usually relies on established type to inject manipulative data in a manner that suits the objective.  Changing type to something the actor prefers would suggest that an actor 1) has other intimate knowledge of the system and 2) would also be able to inject ontology modification or additions to employ the ability to set type (you are likely already PWNED).  This implies an actor would be able to import ontology somehow.  If the actor can do that, way more damaging things can be done.  Nothing about the issue proposed suggest that this would be the case.\r\n\r\nAs such, @context allows for a bad actor to manipulate a literal's datatype class...this door is open.  So without a deeper discussion on what constitutes a security concern for adding type to objects and a specific context for any attack on the model, the argument amounts to unjustified FUD.  Provide a discussion in another issue that demonstrates an attack pattern using this model.  I would certainly like to read and discuss actual attack vectors via this process to secure my own implementations.  Anyone want to pick up a Blackhat presentation on hacking knowledge graphs via JSON-LD?\r\n\r\nTo address parity, I must then ask why rdf:List was used (a collection) as opposed to an rdf:Bag (a container)?  I can see pros and cons for both, but in the absence of definitive JSON construct, it seems that an rdf:Bag (unordered array) would be closer to the represented data than a rdf:List.  Since blank nodes are created for several of the JSON-LD constructs, typing them (via @set or @list, maybe?) would be very useful (rdf:Seq, rdf:Bag, rdf:Alt, or other defined class).  Maybe there could be a setting allowing the consumer to choose between such constructs.\r\n\r\nI do accept that Framing may fit the need.  If JSON-LD requires a producer to explicitly supply type for sharing, then they must also have intimate domain knowledge for how the consumer uses the data.  Otherwise, a two stage ingestion is required by the consumer.  If Framing is that process, so be it.  It would be nice to see examples on how @type might be added via Framing in the Framing documentation.  I understand the use of @default, but this also requires other matching criteria to apply @type.  Using Framing, how would @type be applied to generated blank nodes?  These are the basic questions inquiring minds want to know.\r\n\r\nThanks for your time." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430188469> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-430188469"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430188469> .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430188469> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430188469> <http://schema.org/startDate> "2018-10-16T10:37:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430188469> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430188469> <http://schema.org/description> "After reading the spec again I found a note that suggested the following\r\n\r\n```\r\n{ \"@context\": [{\"@version\": 1.1}, \"http://domain.org/context1.jsonld\", ... ] , ... }\r\n```\r\n\r\nhowever the playground-dev does not like it. It complains with\r\n``` \r\njsonld.ProcessingModeConflict: @version: 1.1 not compatible with json-ld-1.0\r\n```\r\n\r\nIs this an issue in the spec or the deployed tools on the playground?\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430287914> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-430287914"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430287914> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430287914> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430287914> <http://schema.org/startDate> "2018-10-16T15:41:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430287914> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430287914> <http://schema.org/description> "@bertvannuffelen make sure you're using the 1.1/dev playground: https://json-ld.org/playground-dev/\r\n\r\nThe link to that is probably too subtle...\r\n\r\nThis example works fine there, fwiw:\r\n```json\r\n{ \"@context\": [{\"@version\": 1.1}, \"http://schema.org/\" ] , \"name\": \"me\" }\r\n```\r\n\r\nHowever, that same code works fine in the 1.0 playground also.\r\n\r\nDo you have a complete example you could post?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430301317> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-430301317"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430301317> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430301317> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430301317> <http://schema.org/startDate> "2018-10-16T16:17:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430301317> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430301317> <http://schema.org/description> "@bertvannuffelen In the past, such an error was generated, and you would only see this error on playground-dev. The playground should be updated, and at this point, I think the default playground should be for the 1.1 work, to avoid confusion.\r\n\r\ncc/ @davidlehn " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430324537> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/84#issuecomment-430324537"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430324537> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430324537> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430324537> <http://schema.org/startDate> "2018-10-16T17:25:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430324537> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430324537> <http://schema.org/description> "@bertvannuffelen We don't have any such mechanism, and nothing is planned. Presumably, this would like something like the following:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"structuredIdentifier\": {\"@path\": [\"domain:identifier\", \"domain:structuredIdentifier\"]}\r\n  },\r\n   \"structuredIdentifier\": {\r\n     \"namespace\" : \"http://data.domain.org/id/concept/\",\r\n     \"localid\": \"1\",\r\n     \"version\": \"v20\"\r\n   } \r\n}\r\n```\r\n\r\nBut, I personally don't see us adding paths in 1.1, certainly not without overwhelming evidence of this pattern being used widely." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430337834> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/84#issuecomment-430337834"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430337834> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430337834> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430337834> <http://schema.org/startDate> "2018-10-16T18:02:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430337834> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430337834> <http://schema.org/description> "I agree with @gkellogg. \r\n\r\nSuch a feature would be a major design change, introducing a feature that doesn't have a direct equivalent in RDF. This would be a major change, possibly of interest for a 2.0 version, but not for a minor uodate, which is 1.1. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430431923> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-430431923"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430431923> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430431923> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430431923> <http://schema.org/startDate> "2018-10-16T23:06:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430431923> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430431923> <http://schema.org/description> "Sorry, this fell out of my working memory.\r\n\r\nReSpec did use RDFa previously, but this was actively hated by the non-linked-data community. We added in something that was pretty much equivalent using JSON-LD and some schema.org classes and properties with the argument that this could improve SEO, but of course, it could do more. This could, of course, be improved by a PR to the schema.org project.\r\n\r\nI'd eventually like the `doJsonLd` to become the default for ReSpec, but it probably needs to remain fairly focused. More would be cool, but should be managed using a separate configuration option. Motivating use cases would also be useful.\r\n\r\nThese are not really JSON-LD issues, but more generally those needed or useful for spec editors. I think this could use its own CG and try to get support from ReSpec and Bikeshed communities. If there's sufficient interest, that would be the best way to move forward. If not, then the work wouldn't be likely to gain wide use in any case." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430485165> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/78#issuecomment-430485165"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/78> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430485165> .
<https://api.github.com/users/kael> <http://schema.org/accountId> "kael" .
<https://api.github.com/users/kael> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/2463?v=4" .
<https://api.github.com/users/kael> <http://schema.org/url> "https://github.com/kael"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kael> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430485165> <http://schema.org/creator> <https://api.github.com/users/kael> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430485165> <http://schema.org/startDate> "2018-10-17T04:25:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430485165> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430485165> <http://schema.org/description> "Thanks for the answer.\r\n\r\nRegarding incentive to write RDF augmented specs, I guess if a popular tool started to make use of JSON-LD & Microdata, it'll motivate authors to add more of them.\r\n\r\nIn the meantime, I'm using the `\"w3p\": \"http://www.w3.org/2001/02pd/rec54#\"` context as a hint to label W3C docs as specifications - some SKOS-like layer would be awesome, but well. Perhaps, the IETF, the XSF and some other specs committees will start also to make use of JSON-LD & microdata.\r\n\r\nAnd on the other side of the chain, _Read The Doc_, the API doc generator has a trace of [APIReference](https://github.com/rtfd/readthedocs.org/issues/4770#issuecomment-430337224) although the current generated API docs use https://schema.org/Article.\r\n\r\nSo hopefully it's only a matter of time before we get more docs with more precise contexts than https://schema.org/Article & https://schema.org/TechArticle.\r\n\r\nAnd regarding _\"TypeScript definitions ready RDF extractable IDL\"_, I guess it'll happen in the next decade or something.\r\n\r\nIndeed it's not really a JSON-LD matter, but it really looked like one of the spec where to demonstrate how useful JSON-LD & Microdata can be.\r\n\r\nKeep up the good work. :+1: \r\n\r\nCheers." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430729589> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-430729589"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430729589> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430729589> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430729589> <http://schema.org/startDate> "2018-10-17T18:04:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430729589> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430729589> <http://schema.org/description> "Rebasing, so inline comments may be lost." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430791254> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-430791254"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430791254> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430791254> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430791254> <http://schema.org/startDate> "2018-10-17T21:11:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430791254> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430791254> <http://schema.org/description> "I've started a non-browser-based data block extractor projects at @WileyLabs fwiw:\r\nhttps://github.com/WileyLabs/data-block-extract\r\n\r\nThe implementation uses [Cheerio](http://cheerio.js.org/) which is a node.js implementation of the jQuery API, but it is not itself a DOM implementation.\r\n\r\nHope it's useful!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430810058> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-430810058"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430810058> .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430810058> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430810058> <http://schema.org/startDate> "2018-10-17T22:21:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430810058> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430810058> <http://schema.org/description> "Hi,\r\n\r\nhere is an example which generates the error:\r\n\r\n```\r\n{ \"@context\": [\r\n              \"http://schema.org\",\r\n                               \r\n              { \"@version\": 1.1,\r\n                 \"creatie\":{\r\n			         \"@id\":\"http://www.w3.org/ns/prov#qualifiedGeneration\",\r\n			         \"@type\":\"http://www.w3.org/ns/prov#Generation\"\r\n                                  \r\n                }}],\r\n                \r\n                \r\n   \"@id\": \"http://exampledomain.com/123\",\r\n   \"creatie\": {\r\n    \"tijdstip\": \"2002-01-11T15:25:22Z\"\r\n    \r\n              }\r\n}\r\n``` \r\n\r\nI run it on the dev playground. \r\n\r\nThe example also illustrates a possible unwanted side effect when reusing external context files which are not in your control.\r\n\r\nSuppose the client is running an engine capable of version 1.1, but defaulting to version 1.0 intepretation.\r\nThe first external context in the list has not specified a version, therefore the engine will interprete this under 1.0. \r\n\r\nBased on that interpretation, the client draws some conclusions.\r\n\r\nThen the external context file is updated with the annotation version 1.1 (no other change). \r\nThe client as it is capable to handle version 1.1, it will perform 1.1 interpretation now. \r\nAnd it might lead to another conclusion. \r\n\r\nAlthough nothing has changed in the code, and all input has been accepted by the client, such change might pass unnoticed for a while.\r\n\r\nkr,\r\n\r\nBert" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430813721> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/84#issuecomment-430813721"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430813721> .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430813721> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430813721> <http://schema.org/startDate> "2018-10-17T22:38:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430813721> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/430813721> <http://schema.org/description> "Fine, with me. \r\n\r\nTo elaborate the usecase: it occurs when one would like to annotate a json structure which can be seen as an abbreviation / condensed formof the vocabulary the context has been based on.\r\n\r\nAnd that is not so seldom as it seems. In case one exploits generic vocabularies e.g like the EU semic core-vocabularies, and one creates an api for an dataset having data about such a vocabulary, then the dataset owner might decide to agree on more specific and specialised constraints.\r\nFor instance, in the context of an open data catalogue application,  the owner of the catalogue could impose the rule that for a dataset the contactpoint is an email-adres. This would be reflected in the catalogue API for a dataset http://opendata.org/dataset/1 as \r\n```\r\n{ ...\r\n\"contactpoint\": \"contactme@org.com\"\r\n...}\r\n```\r\nThe DCAT vocabulary, however,  states that a contactpoint is a VCard:Kind class, which has a mbox property to hold the email adres.  \r\n\r\nIt would be great that it was possible to write a context file that would realise that, but I do agree this brings more complexity to the mapping language. Nevertheless, it would enable the reuse of much more vocabularies while allowing APIs to be compact.\r\n\r\n\r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431095137> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431095137"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431095137> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431095137> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431095137> <http://schema.org/startDate> "2018-10-18T17:29:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431095137> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431095137> <http://schema.org/description> "As I said, the dev playground is out of date. Try it on [my distiller](http://rdf.greggkellogg.net/distiller?command=expand&format=jsonld&output_format=jsonld) where it works properly.\r\n\r\n> Although nothing has changed in the code, and all input has been accepted by the client, such change might pass unnoticed for a while.\r\n\r\nYes, we considered this; originally, 1.1 needed to be set in the first context encountered, but that proved problematic. The main things that would be interpreted differently is if a term can be used as a prefix, which has very subtly different rules. Otherwise, it should do no harm. Was there some specific misinterpretation you had in mind?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431115794> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431115794"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431115794> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431115794> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431115794> <http://schema.org/startDate> "2018-10-18T18:33:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431115794> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431115794> <http://schema.org/description> "I'm not sure the latest jsonld.js will fix this.  My latest development code still fails on the expansion tp001 and tp002 tests.  I think I looked into it and had difficulty figuring out the fix.  I'll take a look again soon." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431176031> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431176031"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431176031> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431176031> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431176031> <http://schema.org/startDate> "2018-10-18T21:50:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431176031> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431176031> <http://schema.org/description> "For this issue, it should just be relaxing the version check. Now, you can move from 1.0 to 1.1, where before it was an error." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431179849> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431179849"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431179849> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431179849> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431179849> <http://schema.org/startDate> "2018-10-18T22:04:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431179849> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431179849> <http://schema.org/description> "Thanks Bert! I think the description around multiple versions could be added under https://www.w3.org/TR/json-ld11/#json-ld-1-1-processing-mode for greater clarity and visibility, thus an editorial issue." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431181447> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/18#issuecomment-431181447"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/18> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431181447> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431181447> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431181447> <http://schema.org/startDate> "2018-10-18T22:10:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431181447> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431181447> <http://schema.org/description> "On WG call of 2018-10-12, we [resolved to close](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-12-json-ld#resolution4) the issue without further change. \r\n\r\nIn particular, we do not process rdf terms with any more precedence than other ontologies. Witness the processing differences for `rdf:type` and `@type`. As such `[]` and `rdf:nil` is not in scope for managing.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302249> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431302249"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/85> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302249> .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302249> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302249> <http://schema.org/startDate> "2018-10-19T09:25:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302249> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302249> <http://schema.org/description> "@ all, thanks for picking this up. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302768> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/84#issuecomment-431302768"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302768> .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/accountId> "bertvannuffelen" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1999213?v=4" .
<https://api.github.com/users/bertvannuffelen> <http://schema.org/url> "https://github.com/bertvannuffelen"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/bertvannuffelen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302768> <http://schema.org/creator> <https://api.github.com/users/bertvannuffelen> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302768> <http://schema.org/startDate> "2018-10-19T09:27:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302768> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431302768> <http://schema.org/description> "I agree with the labels. It is up to me to close?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431313734> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/84#issuecomment-431313734"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/84> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431313734> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431313734> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431313734> <http://schema.org/startDate> "2018-10-19T10:06:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431313734> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/431313734> <http://schema.org/description> "@bertvannuffelen what is good to have is your approval, which is here, thank you. I will close." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432982821> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-432982821"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432982821> .
<https://api.github.com/users/simonstey> <http://schema.org/accountId> "simonstey" .
<https://api.github.com/users/simonstey> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/10495449?v=4" .
<https://api.github.com/users/simonstey> <http://schema.org/url> "https://github.com/simonstey"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/simonstey> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432982821> <http://schema.org/creator> <https://api.github.com/users/simonstey> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432982821> <http://schema.org/startDate> "2018-10-25T09:34:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432982821> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432982821> <http://schema.org/description> "> Would sealing be a context-level-only feature? IOW, do you propose allowing some terms in a context to be sealed but not others?\r\n\r\nalternatively, one could also split the context into one sealed part and an unsealed one, and just import both right?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432983547> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-432983547"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432983547> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432983547> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432983547> <http://schema.org/startDate> "2018-10-25T09:36:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432983547> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/432983547> <http://schema.org/description> "I imagine so, although the interweaving might be difficult... I'd have to work through some examples." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433038839> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/87#issuecomment-433038839"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433038839> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433038839> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433038839> <http://schema.org/startDate> "2018-10-25T12:53:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433038839> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433038839> <http://schema.org/description> "This approach would also potentially relate to scoped contexts." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433071102> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/33#issuecomment-433071102"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/33> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433071102> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433071102> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433071102> <http://schema.org/startDate> "2018-10-25T14:22:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433071102> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433071102> <http://schema.org/description> "@danbri we're discussing this tomorrow at TPAC (per [our current schedule](https://docs.google.com/document/d/1qTLztv7nqbYuUsZbwhPhOyG5tHTJrTt9tGKWnD5Xa5A/edit#heading=h.cuj1fpex2b35)). Your input here would be helpful as we look toward \"upgrading\" existing JSON-LD." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433203331> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/86#issuecomment-433203331"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433203331> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433203331> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433203331> <http://schema.org/startDate> "2018-10-25T20:58:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433203331> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433203331> <http://schema.org/description> "See also: https://github.com/w3c/json-ld-syntax/issues/9" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362067> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-433362067"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362067> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362067> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362067> <http://schema.org/startDate> "2018-10-26T10:21:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362067> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362067> <http://schema.org/description> "Here is the minimal example that has the problem area focused on only:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"fred\": {\r\n      \"@id\": \"http://a.b.c\",\r\n      \"@type\": \"@vocab\"\r\n    },\r\n    \"barney\": {\r\n      \"@id\": \"abc:def\"\r\n    }\r\n  },\r\n  \"fred\": \"barney\"\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362291> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-433362291"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362291> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362291> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362291> <http://schema.org/startDate> "2018-10-26T10:22:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362291> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433362291> <http://schema.org/description> "See also http://tinyurl.com/y78bzssn\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433559660> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/88#issuecomment-433559660"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433559660> .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433559660> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433559660> <http://schema.org/startDate> "2018-10-26T22:27:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433559660> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433559660> <http://schema.org/description> "Those references are from the `terms.html` common terminology file.  It makes sense when used in other docs, but yeah, it's weird when it causes self references.  Looks like there's an API reference in there too so the API doc has a similar issue.  Probably need some pre-processor or conditional code to deal with this." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433596928> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/37#issuecomment-433596928"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/37> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433596928> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433596928> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433596928> <http://schema.org/startDate> "2018-10-27T06:56:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433596928> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433596928> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-25-json-ld#section3-1).\r\n\r\n- `RESOLVED:  Mark bnode as property as a Feature At-Risk for the next WD, with a view towards marking as Obsolete with a warning in 1.1`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n3.1. Consider obsoleting use of blank nodes for properties and “generalized RDF” #37<br/>\r\nRob Sanderson: the first block of issues is around JSON syntax vs JSON-LD.<br/>\r\n… obsoleting the use of blank nodes for properties.<br/>\r\nIvan Herman: link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/37\">https://github.com/w3c/json-ld-syntax/issues/37</a><br/>\r\nRob Sanderson: we’ve discussed this and resolved it as accepted<br/>\r\n… after which Manu objected, on the grounds that our charter does not permit us to deprecate extant features<br/>\r\nIvan Herman: I’d prefer to actually discuss this with Manu himself<br/>\r\nRob Sanderson: Manu has delegated all the JSON-LD stuff to Dave Longley (who is not present at this time)<br/>\r\nIvan Herman: we can close it again, but Manu will just reopen it again<br/>\r\n… I believe that his justification was basically wrong<br/>\r\nDan Brickley: Can this be used for property graph -style usage<br/>\r\n… in which properties can have properties?<br/>\r\nIvan Herman: JSON-LD doesn’t have that structure by itself, so you would have to rely on the RDF side, and it wouldn’t be valid there.<br/>\r\nGregg Kellogg: If RDF supports that in the future (and work is ongoing there) and it was understood to be the correct way to do it, you could do it<br/>\r\nDan Brickley: Wouldn’t be good to take something out when in a year it might be very handy?<br/>\r\nLeonard Rosenthol: How do you define deprecation? In ISO, we say “Don’t write it, but you can read it”<br/>\r\nIvan Herman: There is, afaik, a formal definition for deprecation at W3C, but we don’t have it at our fingertips.<br/>\r\n… we’ll check into that<br/>\r\nGregg Kellogg: One of the issues with deprecation is w.r.t. to semantic versioning. 1.0 vs. 1.1 vs. 2.0. We’re at 1.1, not 2.0.<br/>\r\n… we would still, by deprecating, be taking it out eventually, and Manu would probably object to that.<br/>\r\n… I’d rather add descriptive notes using “SHOULD NOT” language<br/>\r\nBenjamin Young: I work on a graph system, levelgraph.io capable of provenance for each triple, but none of that survives into JSON-LD.<br/>\r\nBenjamin Young: <a href=\"https://www.w3.org/Data/events/data-ws-2019/cfp.html\">https://www.w3.org/Data/events/data-ws-2019/cfp.html</a><br/>\r\nBenjamin Young: we do need to address that, to make it possible for those systems to use JSON-LD<br/>\r\nDan Brickley: earlier literals as subjects discussion, <a href=\"https://www.w3.org/2001/sw/wiki/Literals_as_Subjects\">https://www.w3.org/2001/sw/wiki/Literals_as_Subjects</a><br/>\r\nPierre-Antoine Champin: Recently, some proposals have come out showing research into the “use bnodes to add properties to properties” technique. And there are “spaces” in the SPARQL rec that allow, e.g. literals as subject. This is all generalized RDF, but is that the thing to which you want to round trip?<br/>\r\nDan Brickley: for the record, property graphs have drivers for a lot of databases beyond neo4j<br/>\r\nDan Brickley: <a href=\"http://tinkerpop.apache.org/\">http://tinkerpop.apache.org/</a> lists 24 graph data systems with some kind of property graph interface<br/>\r\nIvan Herman: property graphs are great, but this WG should not have an issue for encoding property graphs in JSON-LD<br/>\r\n… that’s a 2.0 thing.<br/>\r\n… maybe in a year.<br/>\r\n… but discussion now is very premature, not appropriate for this WG<br/>\r\n… my problem with bnodes as properties is demonstrated by Manu’s reaction: one is liable to believe that one has solved a problem when the solution is, in fact, wrong.<br/>\r\n… Manu is using the preservation of bnode labels from scope to scope as a feature.<br/>\r\n… it’s not. It’s a particularity of some implementations.<br/>\r\n… he’s using a syntactical quirk as support to solve another problem.<br/>\r\n… usages of bnode-predicates is only possible within RDF/OWL derivation<br/>\r\n… certainly not a technique that anyone should be using in data, we should stick to what is in RDF<br/>\r\n… after the upcoming Berlin workshop, perhaps this could be discussed for 2.0, but not now.<br/>\r\nDan Brickley: I am hearing the word “deprecate”, and that is scary for something with the audience of Google.<br/>\r\n… we could put versioning into resources we control (e.g. the schema.org context), but we won’t do that if it’s liable to irritate or confuse millions of people<br/>\r\n… we don’t use the bnode-property thing ourselves, at Google.<br/>\r\n… but schema.org folks have real interest in qualifying graph edges, so if this could help with that…<br/>\r\nIvan Herman: there are other ways to do that<br/>\r\nDan Brickley: that would be fine.<br/>\r\nDan Brickley: we originally objected to the charter for this group, because we felt it was justified in terms of success for which Google bore responsibility. And the google-promoted schema.org rollout is powered by millions of sites who don’t follow w3c latest developments religiously. It would unfortunate to start deprecating what they do, so quickly.<br/>\r\n… we don’t want to injure our users!<br/>\r\nIvan Herman: the CG would normally be the place where these things are discussed<br/>\r\nGregg Kellogg: the CG is not very live now<br/>\r\n… I wouldn’t want to cut off property graphs. let’s put it on the side and deal with it at a later date<br/>\r\n… specifically after being informed by the upcoming workshop<br/>\r\n… bnodes-as-properties was not meant in support of property graphs<br/>\r\n… it was more about worries that demanding an IRI for every property would be a bridge too far for many developers.<br/>\r\n… I support Ivan’s point that the use Manu suggests is technically wrong<br/>\r\n… it’s a bad idea. there is an expectation from users that labels won’t change, but we don’t want to reinforce that<br/>\r\nIvan Herman: the canonicalization algorithm would change those labels anyway<br/>\r\nGregg Kellogg: there are toggles for doing that, but usually people say that canonicalized datasets are text strings, not abstract syntax<br/>\r\nBenjamin Young: This issue is for people who write contexts, not content (not instances), this is about a much smaller community than everyone who publishes JSON-LD<br/>\r\n… the confusion that can result from bnode labels not being preserved does need to be recognized and dealt with<br/>\r\n… we need to make sure that people understand what’s happening and why they need stable identifiers, perhaps in the forthcoming primer<br/>\r\nIvan Herman: we gave examples of this happening in the rec, and we shouldn’t have done that<br/>\r\nRob Sanderson: the original JSON-LD 1.0 use case would be covered by being able to use relative IRIs for @vocab<br/>\r\n… we should continue as we have chosen, using the term “obsolete” as HTML does—to mean “you can use this, but conforming processors will throw a warning”<br/>\r\n… and we can ask Manu and danbri whether this really is used in the wild.<br/>\r\nDan Brickley: Pretty sure it isn’t.<br/>\r\n… but hard to say for sure.<br/>\r\nIvan Herman: Should we close?<br/>\r\nDan Brickley: We could put a “feature at risk” on it.<br/>\r\nGregg Kellogg: That would be good because future people who aren’t represented in this discussion could object<br/>\r\nDan Brickley: Can we adjust the language to not tell people they’re WRONG, but that this has implications for what you can do with your JSON-LD?<br/>\r\nIvan Herman: It is just wrong.<br/>\r\nBenjamin Young: It may be wrong from a OWA perspective. “Culturally” wrong.<br/>\r\nGregg Kellogg: We can’t pretend that this was experimental. We didn’t mark it as such.<br/>\r\n… there’s a good bit of explanatory text about this in 1.0. We could certainly remove that.<br/>\r\nProposed resolution: Mark bnode as property as a Feature At-Risk for the next WD, with a view towards marking as Obsolete with a warning in 1.1 (Rob Sanderson)<br/>\r\nGregg Kellogg: A suggested URN-based replacement for this would be good.<br/>\r\nRob Sanderson: +1<br/>\r\nBenjamin Young: URNs can be as fragile as bnodes, but there is a whole world of identifiers out there<br/>\r\nIvan Herman: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: Every resolution is temporary for a week, so we can do this and still have discussion with Manu et al.<br/>\r\nGregg Kellogg: +1<br/>\r\n<b>paul:</b> +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nAdam Soroka: +1<br/>\r\nLuc Audrain: [abstain]<br/>\r\nDan Brickley: +0.666_<br/>\r\nResolution #1: Mark bnode as property as a Feature At-Risk for the next WD, with a view towards marking as Obsolete with a warning in 1.1<br/>\r\nPierre-Antoine Champin: I don’t think the JSON-LD spec is the right place to solve the bnode-property question<br/>\r\nRob Sanderson: Since we have danbri for now, let’s move some relevant issues up from the afternoon<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597039> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-433597039"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597039> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597039> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597039> <http://schema.org/startDate> "2018-10-27T06:58:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597039> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597039> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-25-json-ld#section3-2).\r\n\r\n- `ACTION:  Rob Sanderson to create issues for ContextList and DocumentLoader editorial changes`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: the issue from my POV is that it would be nice to have a feature that let’s context be “sealed” or “frozen”<br/>\r\n… this lets people identify an immutable context<br/>\r\n… this could prevent a huge amount of people retrieving context over the wire<br/>\r\nDan Brickley: cf <a href=\"https://www.w3.org/RDF/Group/Schema/openissues.html#c12\">https://www.w3.org/RDF/Group/Schema/openissues.html#c12</a> “Closed 19980707 - deferred until 1.1; M+S to supply a mandatory extensions mechanism” (“We would like to define a mechanism for ‘sealing’ an RDF Class, so that it becomes illegal to make certain RDF statements involving it. This is loosly analagous to the notion of ‘final’ classes in Java / OO programming. …”)<br/>\r\nRob Sanderson: as well as preventing people from overriding term expansion<br/>\r\n… since choosing an expansion is “last in wins”<br/>\r\nIvan Herman and Gregg Kellogg: Those are two different issues!<br/>\r\nRob Sanderson: <a href=\"https://github.com/w3c/json-ld-syntax/issues/9\">https://github.com/w3c/json-ld-syntax/issues/9</a> is the first part of what I was describing<br/>\r\n… immutability<br/>\r\nBenjamin Young: Immutable header <a href=\"https://tools.ietf.org/html/rfc8246\">https://tools.ietf.org/html/rfc8246</a><br/>\r\nRob Sanderson: I believe there is no argument about this being a good functionality—the question is just, how do we do this in practice?<br/>\r\n… is this an HTTP thing?<br/>\r\nIvan Herman: We are overloading the term “frozen”.<br/>\r\nDan Brickley: Similar metaphors, but not the same.<br/>\r\nBenjamin Young: There is an identifier-based approach, and for schema.org the semantics have changed<br/>\r\n… over time<br/>\r\nDan Brickley: well, it’s always meant schema.org, but we have resolved it in different ways, because of the history<br/>\r\n… we have just kept adding terms, and the context just keeps growing<br/>\r\nGregg Kellogg: You might be able to pare it down with @vocab<br/>\r\nDan Brickley: It’s rarely been the case that we don’t have to touch it for a long period of time<br/>\r\n… and there’s constantly things to fix<br/>\r\nBenjamin Young: That’s the POV that this identifier will always get you the most up-to-date, “best” version of the resource<br/>\r\n… but for the way I work, which uses separate context documents for different versions, would behave completely differently<br/>\r\n… so one proposal is to bake version into the identifier, and another is to seal the context<br/>\r\nDan Brickley: Not too worried about that part of the problem: It’s not inconceivable that we might maintain a couple of high-value vocabs, but much of schema.org isn’t used now<br/>\r\n… and for the sealed context question, another approach– perhaps allow to specify import order and thereby prevent inappropriate overrides<br/>\r\nGregg Kellogg: looking at the mechanism by which a processor can be encouraged to not constantly be fetching context,<br/>\r\n… . HTTP has cache-control, and we suggest using it, but that doesn’t seems to be enough.<br/>\r\n… so can we add some of the HTTP semantics right inside the context?<br/>\r\n… e.g. “this is valid for this time, do not refetch within that time”<br/>\r\n… processing tools could even throw on an inappropriate retrieval<br/>\r\n… we’d also like to be able to “preload” contexts (prefill a cache).<br/>\r\nDan Brickley: We are reliving the XML Catalog discussions from couple decades back, <a href=\"https://en.wikipedia.org/wiki/XML_catalog\">https://en.wikipedia.org/wiki/XML_catalog</a><br/>\r\nIvan Herman: I am afraid of conneg and HTTP headers, which are great, BUT many users cannot control them<br/>\r\n… relying on that is attractive to a spec, but may not be a good solution<br/>\r\n… so gkellogg’s suggest is uglier than relying on HTTP headers, but way more secure<br/>\r\n… the schema.org example shows us that many context cannot be sealed.<br/>\r\n… the “freezing” (no bad overrides) things—I’m guilty of that myself<br/>\r\n… we do that on top of schema.org in publishing<br/>\r\nDan Brickley: We’re fine with that!<br/>\r\nIvan Herman: sealing a popular context could create problems for that<br/>\r\nDan Brickley: Sure, we can do conneg. But it’s frustrating as a vocab provider. For the rest of the site we are moving to pure static hosting.<br/>\r\n… we would like our work as vocab providers to end with creating files<br/>\r\nLeonard Rosenthol: Other vocabulary providers have a different approach. In our defns and vocabs, we have a policy that says<br/>\r\n… once this is stable, any future version must be backwards-compatible<br/>\r\n… can’t remove fields, can’t change value types, etc.<br/>\r\n… in part because we didn’t want to deal with versioning<br/>\r\n… but we also maintain a registry, so at any time anyone can go and get a schema<br/>\r\n… so we get some of the benefits (e.g. we don’t have to do unneeded fetches)<br/>\r\n… we don’t have to worry about the versioning because of the policy<br/>\r\nDan Brickley: two things where I’ve been raising concerns around @context<br/>\r\n… when you’re a search engine, you may not have all the resources in hand at once<br/>\r\n… also, @context doesn’t work for IoT, where devices are resource-constrained<br/>\r\n… they don’t want to be fetching stuff across the network<br/>\r\n… not sure whether “frozen” or “sealed” is the right metaphor<br/>\r\n… but the assumption that fetching a @context is trivial isn’t necessarirly a good one<br/>\r\n… 1.1 should not force many fetches, e.g. because of privacy concerns<br/>\r\nIvan Herman: understood, but how do we avoid the problem?<br/>\r\nDan Brickley: We shouldn’t allow the difficulty of the problem to prevent us from facing it.<br/>\r\nRob Sanderson: We’ll be talking to the IoT folks this afternoon.<br/>\r\nLeonard Rosenthol: Why (other than parsing) do you need to fetch contexts?<br/>\r\n<b>others:</b> Can’t interpret the data at all w/o the context<br/>\r\nLeonard Rosenthol: Doesn’t mean that you have to fetch it, does it?<br/>\r\nDan Brickley: We ran into this with RDF/XML—we forced you to put all the semantics into the instance. Made the syntax much disliked.<br/>\r\nBenjamin Young: <a href=\"https://json-ld.org/spec/latest/json-ld-api-best-practices/#cache-context\">https://json-ld.org/spec/latest/json-ld-api-best-practices/#cache-context</a><br/>\r\nDan Brickley: JSON-LD went the other way, It isn’t even the semantics (in terms of the rdfs/owl model), it is very basic graph structure issues. Does “foo”:”bar” expand to “bar” or <a href=\"http://..../bar\">http://..../bar</a> URI<br/>\r\nBenjamin Young: There is to be a best-practice document, which can discuss these issues.<br/>\r\n… the docs may say you can fetch all the time, but the tools understand how bad an idea that is.<br/>\r\nBenjamin Young: I manually solve this problem, and it’s sort of like what we would want<br/>\r\n… but we haven’t encouraged people to create workflows that are safe in that way<br/>\r\n… users don’t necessarily even know that they should know HTTP at the depth needed for control caching<br/>\r\nLuc Audrain: in Publishing, we are using JSON-LD to build metadata about books, and push it to webpages. We have, today, standards like ONIX, which are in use all over the world. But we know we have qualifications on our metadata. E.g. we might send a link to a cover image. When the book goes on sale, we might change the image to include the new price. We assume people refetch to get the updated image. It’s a similar problem. It would be nice if we could provide this.<br/>\r\nRob Sanderson: That’s at a different level, the level of instances. They will always require refetching. That’s not quite within our work.<br/>\r\n<b>paul:</b> Can someone define the term “sealed”?<br/>\r\n… who makes that decision?<br/>\r\nRob Sanderson: the publisher would decide that.<br/>\r\n… that’s the feature that prevents overrides.<br/>\r\n… for the other feature (content-addressable contexts)…<br/>\r\n… to the extent that we want to include HTTP-type features to control/prevent fetching<br/>\r\n… What is the extent to which we should go, to make that easy for devs?<br/>\r\nDan Brickley: In RDFS, W3C Working Draft 14 August 1998 <a href=\"https://www.w3.org/TR/1998/WD-rdf-schema-19980814/\">https://www.w3.org/TR/1998/WD-rdf-schema-19980814/</a> we wrote “”\"”Since an RDF Schema URI unambiguously identifies a single version of a schema, RDF processors (and Web caches) should be able to safely store copies of RDF schema graphs for an indefinite period. The problems of RDF schema evolution share many characteristics with XML DTD version management and the general problem of Web resource versioning.”<br/>\r\nDan Brickley: “Is is expected that a general approach to these issues will presented in a future version of this document, in co-ordination with other W3C activities. Future versions of this document may also offer RDF specific guidelines: for example, describing how a schema could document its relationship to preceding versions.””””<br/>\r\nIvan Herman: there is an analogy that might inspire us<br/>\r\n… it’s like the way that CSS handles fonts<br/>\r\n… they have an indirection. I define a font symbol, to which I can attach URIs or filenames<br/>\r\n… the processor picks the first that is available.<br/>\r\n… . so e.g. I could perhaps make a list, with my file of schema.org first, then the network address.<br/>\r\n… . that’s what CSS does—they have the same problem (in their case huge font files)<br/>\r\n… how could we shoehorn this into the syntax?<br/>\r\nLeonard Rosenthol: You’d have to change the meaning of @context<br/>\r\nGregg Kellogg: The fact that there is a practice in CSS is good.<br/>\r\n… piggybacking on an existing pattern in CSS will make arch review easier<br/>\r\nDan Brickley: it may be worth talking to the CSS folks to see how that feature is working out in practice<br/>\r\nRob Sanderson: Seems like something we could put into the API spec.<br/>\r\n… if cache management was part of the API<br/>\r\n… as opposed to reimplementing another document loader<br/>\r\nIvan Herman: -> <a href=\"https://www.w3.org/TR/css-fonts-3/#font-face-rule\">https://www.w3.org/TR/css-fonts-3/#font-face-rule</a> Font face rule in CSS<br/>\r\nLeonard Rosenthol: The problem w/ putting it into the API is that you’ve got to think of the various devices on which it might run– what about embedding devices, e.g.?<br/>\r\n… the API must be flexible enough to let clients control the amount of caching that takes place.<br/>\r\nSimon Steyskal: <a href=\"https://drafts.csswg.org/css-font-loading-3/\">https://drafts.csswg.org/css-font-loading-3/</a> ?<br/>\r\nGregg Kellogg: The API spec does permit that—we only spec the relevant behavior<br/>\r\nIvan Herman: There are some nice examples from the CSS doc linked above<br/>\r\nDan Brickley: Is anyone here tracking the WebPacakging work?<br/>\r\n… seems to address the problem of leaking URLs<br/>\r\n… i.e. queries from Google<br/>\r\n… it’s also about what happens when you don’t retrieve from the resource’s identifier, but from somewhere else, which is the same problem<br/>\r\n… different timescales to cultural heritage, bu the same underlying problem!<br/>\r\nIvan Herman: Yes, but IIUC not something to change in the spec<br/>\r\nBenjamin Young: the thing that is “hiding” in the WebPackage is that you don’t get the content from the content owner.<br/>\r\n… there is no way to discover the webpackage from the live URL<br/>\r\nDan Brickley: There are many ways to get content. How you get content is a different question from JSON-LD– we don’t have to solve it.<br/>\r\n… we might look at this in terms of parser APIs. How do parsers report the timeliness of their operations?<br/>\r\n… we might want to say that JSON-LD doesn’t mandate the only parser APIs—to create some space in which to expand/eplore<br/>\r\n… I want the schema.org contexts to be available into the future…<br/>\r\nHarold Solbrig: The ShEx spec states that to be valid JSON ShEx, the context must have a specific URI<br/>\r\n… that muddles the identity of the operation with the identity of a resource involved therewith<br/>\r\n… what do we do with contexts that may never resolves?<br/>\r\nGregg Kellogg: For ShEx on the web, we established a media type. Then we gave rules for that media type.<br/>\r\nRob Sanderson: Seems like there’s a general feeling that there are many possible solutions to this issue, and baking something into the specs might be shortsighted.<br/>\r\nDan Brickley: the more I think about it, the more I like the idea of the poor parser just reporting what it did, weaknesses and all<br/>\r\nIvan Herman: We could almost verbatim copy what CSS did<br/>\r\n** Gregg gkellogg** and Leonard Rosenthol: but that would break extant parsers<br/>\r\nIvan Herman: No, we could add more syntax for this purpose, not change @context<br/>\r\nDan Brickley: Who uses this<br/>\r\nIvan Herman: Whoever publishes data.<br/>\r\nDan Brickley: That’s tens of millions of sites, thousands of which will be hacked….<br/>\r\nBenjamin Young: it’s different from fonts—you have fallbacks in that case, and @context is more central to JSON-LD than fonts are to CSS<br/>\r\n— BREAK —<br/>\r\nBenjamin Young: it would be good to have a decision around the approach<br/>\r\n… cache loading into the instance (eg. font-face), http-level info (in the context doc)<br/>\r\nGregg Kellogg: there is some precedent on http changes<br/>\r\nRob Sanderson: or we can change things at the API level (since we have doc loading there)<br/>\r\n… so that library writers bear the cost<br/>\r\nGregg Kellogg: one thing we could do is change the doc loader about how it looks for the context - eg. prescribe the specifics - as well as specific support for “side lookups”<br/>\r\n… that would lead to greater consistency<br/>\r\n… doc loading is in the specs<br/>\r\nBenjamin Young: API spec area about Document Loading <a href=\"https://w3c.github.io/json-ld-api/#remote-document-and-context-retrieval\">https://w3c.github.io/json-ld-api/#remote-document-and-context-retrieval</a><br/>\r\nRob Sanderson: can we promote (make more obvious) the doc loader in the API doc?<br/>\r\n… perhaps make it a top level item?<br/>\r\nGregg Kellogg: this comes back to best practice. Algos described in API.<br/>\r\n… our practice has been to put a thin veneer over the APIs but didn’t do that for doc loader. But we could<br/>\r\n… there is a non-normative features section that we could also use. (eg. “do it this way”)<br/>\r\n… we could describe that sources of contexts may require excessing loading (etc.)<br/>\r\n… what does WOT do?<br/>\r\nRob Sanderson: don’t forget privacy/security<br/>\r\nGregg Kellogg: there are things we expect them to do (from a syntax perspective), and they won’t read the API doc<br/>\r\nBenjamin Young: the section “remote doc…” could easily be renamed. (and I like everything y’all were saying)<br/>\r\n… also want to make sure we highlight the security./privacy stuff (not just about “remote”)<br/>\r\n… also a bunch of work in best practices to explain this. (and nothing in syntax)<br/>\r\nAdam Soroka: do we want to talk about other situations where we retrieve docs? or is it just context?<br/>\r\nGregg Kellogg: there is also a section on expansion which talks about remote IRIs and documents.<br/>\r\nAdam Soroka: so maybe we should not just put this in terms of context<br/>\r\nGregg Kellogg: but you might not want the entire JSON-LD doc reloaded each time either, so cache-control would be useful there too. (does this belong in the body)<br/>\r\nBenjamin Young: my data shouldn’t be that smart (about caching)<br/>\r\nRob Sanderson: the data carries ontology and not necessary processing<br/>\r\n… to ivan’s point about fallbacks. Today there is a callback (which shouldn’t need to change) and the list of things to retrieve (which we would)<br/>\r\n… unless there is a way for the doc loader to get a list of URLs to work from (in order of precedence)<br/>\r\nIvan Herman: I produce my data an want to publish it, and I have a local context file and will point to it first and then a remote version.<br/>\r\nGregg Kellogg: context-path/reference, it could interact with the doc loader<br/>\r\nIvan Herman: but we need a syntax too<br/>\r\nAdam Soroka: do the things got to an existing doc loader or do they find a doc loader?<br/>\r\n… the doc loader is smarter<br/>\r\nGregg Kellogg: an array of strings is fairly simple to understand<br/>\r\nAdam Soroka: but what if there are other policies that control the order the array is processed<br/>\r\nGregg Kellogg: we still have a year+ to figure otu details<br/>\r\nBenjamin Young: we need a proposal to work from<br/>\r\nLeonard Rosenthol: azaroth : question for ivan<br/>\r\nBenjamin Young: in what situations would the data provider want to provide the “context set:” rather than the processor?<br/>\r\nIvan Herman: if I set up a WoT in my home, I have to manage them. I might include a local copy of schema.org there to avoid them all having to reach outside the network.<br/>\r\nGregg Kellogg: but that’s an http proxy<br/>\r\nIvan Herman: but it might also fall into caching model<br/>\r\nGregg Kellogg: webpackaging and activity streams could also help to improve caching<br/>\r\nAdam Soroka: even a refrigerator might have a filesystem where I know what the URLs on it are, so I can point to those as local cached copies<br/>\r\nRob Sanderson: 15m done.<br/>\r\n… there is agreement that we want to promote the doc loader in the API spec into something more visible and point to it from other docs (esp. about privacy/security)<br/>\r\n… we have discussed the idea of “context list” (ordered lists of contexts) where the loader can try to find things from these multiple items<br/>\r\n… but we need requirements and use case to help understand what to specify and where to put it<br/>\r\nAdam Soroka: also be sure to include the horizontal bits too<br/>\r\nRob Sanderson: do we need a resolution?<br/>\r\nIvan Herman: just leave it open<br/>\r\nBenjamin Young: can we take an action?<br/>\r\nGregg Kellogg: lets use some issue(s) to track ideas<br/>\r\nAction #2: Rob Sanderson to create issues for ContextList and DocumentLoader editorial changes<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597098> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-433597098"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597098> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597098> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597098> <http://schema.org/startDate> "2018-10-27T06:59:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597098> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597098> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-25-json-ld#section3-3).\r\n\r\n- `RESOLVED:  Defer #20 for TAG review for cross-specification issues of signing on the web ; confer with security regarding SRI and credentials regarding LDS vs byte hashing`\r\n- `ACTION:  Rob Sanderson to create context signature issue, related to #20`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: back to issue 20<br/>\r\n… sealed contexts<br/>\r\n… introduced in the CG by dave longley in June<br/>\r\nGregg Kellogg: so the idea is that there is something in the context that says if a given context refers to something else that tries to override a known term<br/>\r\n… that there is a way to prevent the overriding (but w/o stopping processing)<br/>\r\n… one example, a context with a list of other contexts the others can’t overrride<br/>\r\n… how do we cause overriding to take place when you absolutely need to? context:null?<br/>\r\n… scoped contexts should do the same thing<br/>\r\nIvan Herman: who would freeze the context?<br/>\r\nGregg Kellogg: author<br/>\r\nAdam Soroka: perhaps to avoid caching problems?<br/>\r\nGregg Kellogg: but that’s not what it means<br/>\r\n… but they do work together<br/>\r\nIvan Herman: there is something in my forgotten past that is making me unhappy about this<br/>\r\nAdam Soroka: the use case that gkellogg mentioned is a good one<br/>\r\nIvan Herman: once I have nulled things, I can do what I want anyway<br/>\r\n… for an example, when there is something missing in schema.org we either come up with a our own term or we use a context to override<br/>\r\n… but it’s not a very elegant solution, but it works and solves a need.<br/>\r\nGregg Kellogg: but you could just as well solve it by creating a new term but then schema.org isn’t going to recognize it<br/>\r\nBenjamin Young: the sealed context goes against compaction<br/>\r\nGregg Kellogg: no it does not.<br/>\r\nBenjamin Young: if you look on the playground this isn’t what I see…so maybe there is a difference between spec and implementation?<br/>\r\nGregg Kellogg: the sealed context is relevant in expansion<br/>\r\n… by treating the input as always being expanded<br/>\r\n… also algos start from expanded form<br/>\r\nRob Sanderson: I want to question the nuclear option<br/>\r\n… if that is allowed, then why would that be useful instead of just specifying new context?<br/>\r\nGregg Kellogg: the reason to do it is that you don’t want to inherit things outside your scope<br/>\r\nRob Sanderson: if have a context that wipes out all the previous ones, then everything form that point is known<br/>\r\nGregg Kellogg: you can also set a single term to null<br/>\r\n… as a way to undefine a single term<br/>\r\nAdam Soroka: given ivan’s example, where I want to change the value type of a known term…that is quite different from completely overriding a term with completely different semantics.<br/>\r\n… we should be sure that all use cases are addressed with the same solution<br/>\r\nGregg Kellogg: in the case of schema.org, we want to make it legitimate to avoid loading contexts<br/>\r\nDan Brickley: and be sure to differentiate search from other cases<br/>\r\nGregg Kellogg: verifiable claims wants sealed, but we’re not sure why<br/>\r\nBenjamin Young: VC relies on LD signatures, and sealing ensures that the output graph (which is what is signed) is always the same.<br/>\r\nGregg Kellogg: but if they were defined in the scope of the client<br/>\r\nIvan Herman: which is why nuclear works<br/>\r\n… they need a controlled environment and so they want to ensure that any previous state doesn’t impact the sig contexts<br/>\r\nBenjamin Young: but their user data goes lower and the sig is the higher tree<br/>\r\n… .they are the first context not the last<br/>\r\nDan Brickley: w.r.t. signature over this, there are some old experiments around signing schemas (links near <a href=\"https://www.w3.org/2011/rdf-wg/wiki/TF-Graphs-UC/FOAF_Use_Case#Signed_RDF\">https://www.w3.org/2011/rdf-wg/wiki/TF-Graphs-UC/FOAF_Use_Case#Signed_RDF</a> somewhere)<br/>\r\nAdam Soroka: is this a real concern?<br/>\r\nAdam Soroka: actually this is real, just ? whether sealed contexts can fix it<br/>\r\nGregg Kellogg: yes, if you could somehow (maliciously) change the context earlier on, then all breaks down<br/>\r\nDan Brickley: this could introduce some serious problems with nuclear overriding needed things<br/>\r\nDan Brickley: not feeling it. this doesn’t seem to align with the rest of the web and its use of JSON-LD<br/>\r\nIvan Herman: this seems to be useful from the security/sig concerns<br/>\r\nBenjamin Young: but if you expanded everything then you wouldn’t have the problem<br/>\r\nIvan Herman: but can I add signatures to a context? verifying authenticity of a context<br/>\r\nAction #3: Rob Sanderson to create context signature issue, related to #20<br/>\r\nGregg Kellogg: if we have a signature on a given context, has integrity, etc. - but that’s different from a new context<br/>\r\nAdam Soroka: both could be valid or one/both could be malicious<br/>\r\nIvan Herman: the whole thing is a security thing that has to be built on top of JSON-LD<br/>\r\nBenjamin Young: since the people that wanted it aren;’t here, so let’s not touch it right now. If we get it wrong, it will make things worse<br/>\r\n… we need some use cases<br/>\r\nLeonard Rosenthol: If we’re worried about signing things, we should do it consistently.<br/>\r\n… there’s a mechanism in HTML to verify a linked resource - sub resource integrity - can we apply that there as well?<br/>\r\nBenjamin Young: <a href=\"https://www.w3.org/TR/SRI/\">https://www.w3.org/TR/SRI/</a><br/>\r\nBenjamin Young: <a href=\"https://w3c-dvcg.github.io/http-signatures/\">https://w3c-dvcg.github.io/http-signatures/</a><br/>\r\nDan Brickley: (there’s some relationship between the subresource integrity and webpackging . that I don’t totally understand)<br/>\r\nLeonard Rosenthol: also resource integrity might be useful here as well<br/>\r\nDan Brickley: signing of HTML+JSON, HTML+Microdata, HTML+RDFa, HTML+SVG, CSS, Javascript, Typescript, WebAssembly, GLSL, blahblah … should all have a common!<br/>\r\nBenjamin Young: <a href=\"https://github.com/WICG/webpackage\">https://github.com/WICG/webpackage</a><br/>\r\nDan Brickley: what happens when we come to a future TPAC and everyone has their own signatures :(<br/>\r\n… integrity and signatures isn’t the scope of this group<br/>\r\nGregg Kellogg: this seems like something for HTML or Web Platform<br/>\r\nBenjamin Young: put some links in the chat for various other options<br/>\r\n… LD signatures might be part of DID but they are debating it there<br/>\r\n… so let’s kick the can over to them and see what happens.<br/>\r\nIvan Herman: that being said, SRI is so simple that we might consider how we could use it for contexts.<br/>\r\n… it certainly doesn’t solve anything, but it would be useful<br/>\r\nBenjamin Young: the may be some issues about exactly what are you validating/checking.<br/>\r\n… there are some known issues, but we may be able to work around those with some specific info about JSON-LD<br/>\r\nLeonard Rosenthol: SRI is just hashing a “binary stream”<br/>\r\nLeonard Rosenthol: we need an action item to create an issue around use of SRI<br/>\r\nGregg Kellogg: thinks we discussed this last TPAC<br/>\r\nIvan Herman: how would the syntax work?<br/>\r\nGregg Kellogg: yes, we’d have to work on that<br/>\r\nProposed resolution: Defer #20 for TAG review for cross-specification issues of signing on the web ; confer with security regarding SRI and credentials regarding LDS vs byte hashing (Rob Sanderson)<br/>\r\nLeonard Rosenthol: +1 to proposal<br/>\r\nIvan Herman: +1<br/>\r\nRob Sanderson: +1<br/>\r\nBenjamin Young: +1<br/>\r\nAdam Soroka: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nBenjamin Young: <a href=\"https://www.w3.org/TR/2014/WD-SRI-20140318/\">https://www.w3.org/TR/2014/WD-SRI-20140318/</a><br/>\r\nBenjamin Young: wanted to point out that RFC as well which is much better than the current SHA expression as used in SRI<br/>\r\n… not our problem and lots of solutions<br/>\r\nHarold Solbrig: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nResolution #2: Defer #20 for TAG review for cross-specification issues of signing on the web ; confer with security regarding SRI and credentials regarding LDS vs byte hashing<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597171> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-433597171"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597171> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597171> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597171> <http://schema.org/startDate> "2018-10-27T07:00:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597171> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597171> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-25-json-ld#section3-4).\r\n\r\n- `RESOLVED:  Defer and kick up to the TAG for comment as to a view from the web architecture perspective`\r\n- `ACTION:  azaroth and bigbluehat to reach out to the TAG re #20`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: 23 is a long thread…<br/>\r\nLeonard Rosenthol: ivan : the reason it is relevant, so far embedded JSON in HTML is not standardized (non-normative section)<br/>\r\nRob Sanderson: one thing to do is to make it nomative in HTML. Great!<br/>\r\n… but what is the base URL for data in the JSON(-LD) portion<br/>\r\nRob Sanderson: Previous resolution was: <a href=\"https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424764186\">https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-424764186</a><br/>\r\nRob Sanderson: simple solution is to say its the enclosing document<br/>\r\n… but the clean solution would be related to the base element from the HTML (“ base URL of the HTML containing the script element must be used as a base for the JSON-LD snippet”)<br/>\r\n… we don’t care how it gets established, just that it is coming from the DOM (which is well defined)<br/>\r\n… downside is that a JSON-LD would also require an HTML parser<br/>\r\n… do we do the simple version, which is not complete in my view<br/>\r\n… or do we do the full blown embedded version?<br/>\r\nGregg Kellogg: wasn’t there some conflict in the HTML spec about data blocks?<br/>\r\nDan Brickley: (allusion to <a href=\"https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags\">https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags</a> )<br/>\r\nIvan Herman: even if there is, it’s up to them to sort it out<br/>\r\n… whatever the base value in the DOM tells me what is the base value of the contained content<br/>\r\n… danbri since you are one of the biggest users of the embedded use case<br/>\r\n… we’d like your help to help us decide<br/>\r\nDan Brickley: if you can help me find some simple cases, I’d be happy to run this through our parsers<br/>\r\n… and see how that goes<br/>\r\n… we run ours through a headless browser for a few seconds<br/>\r\n… but that doesn’t necessarily mean we’re using the DOM<br/>\r\nLeonard Rosenthol: so, there’s using JSON-LD in any embedded context<br/>\r\n… and there’s also the specific case of embedding in PDFs<br/>\r\n… and the same issue applies<br/>\r\n… so I think we need a consistent mechanism<br/>\r\n… so we need a way to understand how all base URIs are calculated<br/>\r\n… regardless of embedding<br/>\r\n… that said, I think ivan’s suggestion that getting the base from the DOM is reasonable<br/>\r\nBenjamin Young: danbri I have run a few examples but the base isn’t taken into account by the tools that I have available<br/>\r\nGregg Kellogg: is that true for RDFa?<br/>\r\nBenjamin Young: I don’t believe so<br/>\r\n… if I start with an HTML page, put in some JSON, and then try to resolve stuff and the base is wrong<br/>\r\n… but if we change it automatically, that could be a compatibility issue<br/>\r\n… I did some experiments to see how it would work<br/>\r\n… it is a change to the past and complicates the present.<br/>\r\nBenjamin Young: we also have the email use case with a different base<br/>\r\n… MSFT has their own support in outlook for JSON-LD<br/>\r\nDan Brickley: are we aware of other uses cases for base in script?<br/>\r\nGregg Kellogg: turtle is defined as allowing to be expressed there<br/>\r\n… but it does not state anything about base<br/>\r\nLeonard Rosenthol: the default type of script is JavaScript<br/>\r\nIvan Herman: turtle is as underdefined as JSON-LD is for now<br/>\r\n… we are in a sense the only one I know of where this issue arrises within a recommendation track manner<br/>\r\nLeonard Rosenthol: what about CSS?<br/>\r\n… that calculates base using the DOM base<br/>\r\nIvan Herman: true, but I have another<br/>\r\n… gkellogg help me out<br/>\r\n… isn’t it correct that in RDFa that the base effects the results?<br/>\r\nGregg Kellogg: yes. or xml:base<br/>\r\n… but that is specifically within the HTML context<br/>\r\n… and microdata also<br/>\r\nIvan Herman: but that also means that if I look at it from schema.org<br/>\r\n… then the RDFa and the JSON-LD can’t inherit the same base<br/>\r\nGregg Kellogg: but it’d be the same situation with RDF/XML, etc.<br/>\r\n… and I’d wager that schema.org/search-engines are not in a place to support any of this right now<br/>\r\nGregg Kellogg: I’d like to bring up @lang<br/>\r\n… the element inherits a language<br/>\r\n… from the surrounding document<br/>\r\n… are their cases where that effects the CSS or other inlined non-markup content?<br/>\r\n… this is where we would say RDF syntax is clear<br/>\r\n… if it has a language, it’s a string<br/>\r\n… and gets @lang<br/>\r\n… but that is explicitly running within the DOM<br/>\r\nIvan Herman: how these inherit is clearly defined in RDFa<br/>\r\n… here it’s not defined and unclear<br/>\r\n… but to the user there may be expectations about inheriting from the context<br/>\r\nGregg Kellogg: I guess my feeling is different<br/>\r\n… especially if you’re using some sort of HTML editor<br/>\r\n… putting lang=”jp” or whatever on the document does effect all the content in it–and would effect RDFa<br/>\r\n… but to put a code block in there, than now is effected by the language properties by where its embedded<br/>\r\n… to have that behavior change<br/>\r\n… if I process it raw, but now if I put it in an HTML document and process it there<br/>\r\n… that would not meet peoples expectations<br/>\r\nBenjamin Young: people’s expectations…at Wiley our goal is to create a single merged graph from a single publication<br/>\r\n… in none of this work, did anyone express a desire or interest to deal with either base or lang inheritance<br/>\r\n… because it is scary!! It is so unclear as to the rules esp. when combining stuff from all other the place<br/>\r\n… and no one would be happy!<br/>\r\n… in my CMS life, things come from all other place and get reused in various uses which may also be multiple languages and expectations aren;’t clear<br/>\r\n… the way things work now is happily stupid<br/>\r\nRob Sanderson: I wanted to talk about “least surprise”<br/>\r\n… first danbri, I wanted to talk about microdata, rdfa, and json-ld in the same page<br/>\r\nDan Brickley: I wish we did<br/>\r\nRob Sanderson: so let’s assume you do, which of these proposals would you want?<br/>\r\n… do you want base/lang/etc mixed across all of them?<br/>\r\n… or is it type-local where the JSON-LD document must restate its own values for those?<br/>\r\nDan Brickley: so, I did a quick look around stackoverflow, etc.<br/>\r\n… well, they never say URI, but we know they mean it deep in their heart<br/>\r\n… so, if we were a bit more careful about specifying some of this it would be clearer for them<br/>\r\n… people do have a trend toward wanting to type less to get the same result<br/>\r\n… just as we were trying to get the near-twins microdata and RDFa to get along<br/>\r\n… then JSON-LD came along<br/>\r\n… one of the reasons publishers like JSON-LD is that you can inject different bits from everywhere<br/>\r\n… and it’s kinda carnage<br/>\r\n… and a really fabulous HTML page written by the indieweb community could be amazing<br/>\r\n… and then you could inject some JSON-LD from whereever–however horible<br/>\r\n… but it wouldn’t effect your beautiful HTML<br/>\r\n… and that leans it toward being a self-contained block<br/>\r\n… if you want to be explicit, put full URLs in<br/>\r\n… which you may at least want to do when your testing<br/>\r\nIvan Herman: that’s worse than what we propose<br/>\r\n… if the block is resolved against the URL of the document or from the base of a containing document<br/>\r\nLeonard Rosenthol: for PDF in terms of how things work today<br/>\r\n… PDF derives it from those of HTML<br/>\r\n… if it’s from a file system, it the URI from the file system<br/>\r\n… if it’s from the Web, then it’s that URL<br/>\r\n… from which it was served<br/>\r\n… if you fetched it with a script, then it’s from that context<br/>\r\n… and it has it’s own base tag<br/>\r\n… which works just as HTML’s<br/>\r\n… embedded JSON-LD acts like a linked resource<br/>\r\n… so the base is the base of that thing–we don’t inherit it from the parent document<br/>\r\n… not saying that’s right or wrong<br/>\r\n… it’s just how it is today<br/>\r\nBenjamin Young: There is no precedence for anything in HTML (e.g s script block) inheriting from the larger doc<br/>\r\n… it may be interesting to explore that, but it’s not a JSON-LD thing, it’s a markup thing.<br/>\r\n… HTML says, “Anything in a data block is just text content”<br/>\r\nDan Brickley: Bound to mention WebComponents and custom elements here. In the same territory.<br/>\r\n… JSON-LD could very well show up inside those guys<br/>\r\n… suspicion is that they’re using some kind of inheritance. If we don’t do that here, convergence in time gets harder<br/>\r\nBenjamin Young: WebComponents are different, the base is about “where is this running?” not “where is this downloaded?”<br/>\r\n… they use the current page, now.<br/>\r\n… Javascript modules might change this<br/>\r\n… JS and HTML are really a unit now. It’s a different relationship than between HTML and JSON-LD<br/>\r\nIvan Herman: Perhaps this gets kicked up to TAG?<br/>\r\n… this is a Web Architecture issue.<br/>\r\nBenjamin Young: Okay to punt!<br/>\r\nGregg Kellogg: That’s what they are for.<br/>\r\nDan Brickley: see <a href=\"https://developers.google.com/web/updates/2015/03/creating-semantic-sites-with-web-components-and-jsonld\">https://developers.google.com/web/updates/2015/03/creating-semantic-sites-with-web-components-and-jsonld</a> for some experiments from Google a few years back, exploring some of the schema/jsonld/webcomponents possibilities.<br/>\r\nBenjamin Young: <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#data-block\">https://www.w3.org/TR/html5/semantics-scripting.html#data-block</a><br/>\r\nIvan Herman: We have to answer this qustion to make embedded JSON-LD normative<br/>\r\nProposed resolution: Defer and kick up to the TAG for comment as to a view from the web architecture perspective (Rob Sanderson)<br/>\r\nIvan Herman: and the HTML spec doesn’t answer this qquestion<br/>\r\nAdam Soroka: +1<br/>\r\nRob Sanderson: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nLeonard Rosenthol: +1<br/>\r\nIvan Herman: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nBenjamin Young: +1!!!<br/>\r\nResolution #3: Defer and kick up to the TAG for comment as to a view from the web architecture perspective<br/>\r\nIvan Herman: if a feature that wasn’t normative becomes normative, then yes, things will change<br/>\r\nBenjamin Young: but JSON-LD’s greatest usage right now is the non-normative use!<br/>\r\n… and we shouldn’t break what’s running.<br/>\r\n… I want this to make more sense, but this is too dramatic a change too quickly.<br/>\r\nAction #4: azaroth and bigbluehat to reach out to the TAG re #20<br/>\r\nDan Brickley: so <a href=\"https://www.w3.org/TR/json-ld/#embedding-json-ld-in-html-documents\">https://www.w3.org/TR/json-ld/#embedding-json-ld-in-html-documents</a> is basically 4 lines of spec plus an example. We got a lot of deployment out of it, at least…<br/>\r\nIvan Herman: I will not object to closing this, but the TAG discussion should be recorded as part of this discussion<br/>\r\nDan Brickley: The problems at Google with this kind of thing are dwarfed by the basic data quality probems<br/>\r\nDan Brickley: parting request: could someone help me get a minimal pair of examples for the HTML base (and language) decision, that I can share with Google colleagues<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597223> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-433597223"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597223> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597223> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597223> <http://schema.org/startDate> "2018-10-27T07:02:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597223> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597223> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-25-json-ld#section3-5).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nDave Longley: we wanted to talk about onboarding allies from the JSON world<br/>\r\n… a number of W3C specs have adopted JSON-LD, to get extensibility and interoperability<br/>\r\n… however, a number of non-RDF people are only going to use this data as plain JSON<br/>\r\n… not apply any JSON-LD algorithm<br/>\r\n… Most of those standards require that their context is the first one in the @context list;<br/>\r\n… and have the rule that terms from their context should not be overridden.<br/>\r\n… Result: plain JSON interpretation will differ from JSON-LD interpretation.<br/>\r\nRob Sanderson: if the JSON-only processor does not use the context at all, where’s the risk?<br/>\r\nDave Longley: E.g. Verifiable Credentials defines a ‘description’ field;<br/>\r\n… if someone uses an additional context redefining ‘definition’ to mean something else,<br/>\r\n… a pure-JSON tool will still interpret that as the VC description field.<br/>\r\n… The ‘sealed context’ feature is required to make JSON-LD-based formats robust,<br/>\r\n… reducing the gap btw JSON and JSON-LD.<br/>\r\n… JSON people understand how JSON-LD can help interoperability,<br/>\r\n… rather than having anyone defining their own schema,<br/>\r\n… but they don’t have an RDF background.<br/>\r\nIvan Herman: the idea of a ‘sealed context’ is to prevent people from overriding terms in the first context.<br/>\r\n… Wouldn’t it break the expectation of someone publishing their own data with their own vocabulary?<br/>\r\nDave Longley: this only applies in the case you are using a array of contexts<br/>\r\nChristopher Allen: In constructing VC examples or DID examples,<br/>\r\n… I ran in problem linked to the underlying graph model, that only Dave or Manu could explain.<br/>\r\n… In VC, I want to be able to put some metadata of my own,<br/>\r\n… something that’s not standardized or even ready for standardization,<br/>\r\n… how do we put it in a way that we are not messing up other things?<br/>\r\nDave Longley: many people don’t get that curly braces in JSON-LD mean that you are talking about a node,<br/>\r\n… and attributes are about the links in this graph;<br/>\r\n… those people tend to produce data that make no sense for people who understand those principles.<br/>\r\nBenjamin Young: I came to JSON-LD from an RDF-aware background<br/>\r\n… I want to make things clearer,<br/>\r\n… but not at the price of hiding completely the graph model from Web developers.<br/>\r\nAdam Soroka: +1 to bigbluehat<br/>\r\nBenjamin Young: Anecdote: in some plain-JSON formats, the same attribute ‘name’ does not expect the same type at different levels of the tree. You don’t have that in JSON-LD.<br/>\r\nChristopher Allen: We are at a jey point where a lot of people are using JSON-LD.<br/>\r\n… We don’t want them to decide that they will just do JSON and forget about the LD.<br/>\r\nGregg Kellogg: would the solution be a set of best practices?<br/>\r\nIvan Herman: Question: who is expected to seal a context? The author of the context or the author of the data?<br/>\r\nDave Longley: This is an open question.<br/>\r\n… The notion of sealed context is one way to hide the graph model .<br/>\r\n… Best practices, and anything that makes people aware that there is something beyond JSON, is a non-starter.<br/>\r\nBenjamin Young: for you, sealed context only apply for arrays of contexts?<br/>\r\nDave Longley: yes, in all the use cases that I know of.<br/>\r\n… If someone publishes a new context which extends another one,<br/>\r\nDave Longley: they can decide to override terms of the inherited context.<br/>\r\n… As this would be a totally differen thing from the POW of pure-JSON.<br/>\r\nIvan Herman: Would it make sense to introduce a JSON datatype?<br/>\r\n… I could put a bunch of JSON in the JSON-LD, that would be interpreted as an RDF literal with the JSON datatype.<br/>\r\nBenjamin Young: but then you would have problems for signing, because you couldn’t determine the exact value of that literal (re. new lines, spaces…).<br/>\r\nDave Longley: yes, that raises a number of other issues.<br/>\r\nBenjamin Young: One use case in VC is to be able to express an inner graph, with its own context,<br/>\r\n… without compromising the outer graph with the VC metadata.<br/>\r\n… In the old days, we would have used namespaces.<br/>\r\n… Why not use “vc:” in front of the terms you want to keep uncompromised?<br/>\r\nDave Longley: The prefix wouldn’t survive some JSON-LD applications,<br/>\r\n… and would produce something different from the POV of plain-JSON.<br/>\r\nRob Sanderson: Is it the expension that’s the issue? Or the compaction as well?<br/>\r\n… Is it only about the label or the rest of the definition (e.g. “@type”: “@list”)?<br/>\r\nDave Longley: the full term definition has to be a constant.<br/>\r\nIvan Herman: in the first round, let’s stick to sealing contexts, not individual term definitions<br/>\r\n… What we are trying to do is to add a “modifier” on the “@context” link.<br/>\r\nAdam Soroka: The notion of wrapping is important in this use case.<br/>\r\n… Is “sealing” not a special case of prioritization,<br/>\r\n… which might have more complex requirements?<br/>\r\nDave Longley: ActivityPub also have requirements for priority.<br/>\r\n… Their answer is “if you nee priorities, use full-fledged JSON-LD”<br/>\r\nDave Longley: re. WC, we could ask people to include their own @context,<br/>\r\n… but that could not work in all cases.<br/>\r\nBenjamin Young: pchampin suggested earlier to required that the sealed context be in the end,<br/>\r\n… so it will effectively not be overridden with the current rules.<br/>\r\nGregg Kellogg: yes, but putting the extension before the extended context would be odd<br/>\r\nRob Sanderson: if terms are marked sealed, and the extension redefines that term,<br/>\r\n… the overridden term will not be sealed, which can be detected by a validator<br/>\r\n… This could mitigate the problem.<br/>\r\nIvan Herman: what if we have two sealed contexts in the list?<br/>\r\nDave Longley: then we would also need order priority…<br/>\r\nPierre-Antoine Champin: seems to me we’re discussing two different things with multiple contexts<br/>\r\n… extensions<br/>\r\n… which are aware of the sealed context<br/>\r\n… and it would therefore be carefully designed to not conflict<br/>\r\n… the other scenario is a “wrapping” one<br/>\r\n… where the contained statements are expected to not match the wrapper<br/>\r\nBenjamin Young: regarding the wrapping scenario, JSON-LD has graph containers.<br/>\r\nDave Longley: VC is using that.<br/>\r\nBenjamin Young: could we solve the problem by adding some mechanism at the graph containers level.<br/>\r\nDave Longley: that would only work in named graph. That might solve my problem, but may be not others’ (activity streams).<br/>\r\nBenjamin Young: following pchampin’s idea that there are two different categories, may be two different solutions are the way to go.<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/87\">https://github.com/w3c/json-ld-syntax/issues/87</a><br/>\r\nIvan Herman: to wrap up, the options that we considered are<br/>\r\n… 1/ modify the semantics of graph containers<br/>\r\n… 2/ having a “sealed”: true attribute in the context<br/>\r\n… 3/ having a “sealed”: true within term definitions<br/>\r\n… 4/ having the equivalent of a “rel=” attribute on the “@context” link<br/>\r\nGregg Kellogg: when you seal, are you sealing the local context or the active context?<br/>\r\nGregg Kellogg: seal and integrity should be treated separately<br/>\r\nBenjamin Young: why not just go for putting the sealed context in the end?<br/>\r\nGregg Kellogg: because the following contexts will usually rely on the definitions in the first (sealed) context.<br/>\r\n… e.g. after importing the schema.org context, I know I can use the xsd prefix.<br/>\r\nRob Sanderson: ref: <a href=\"https://iiif.io/api/presentation/3.0/#45-linked-data-context-and-extensions\">https://iiif.io/api/presentation/3.0/#45-linked-data-context-and-extensions</a><br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597288> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-433597288"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597288> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597288> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597288> <http://schema.org/startDate> "2018-10-27T07:03:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597288> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597288> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-26-json-ld#section2).\r\n\r\n- `RESOLVED:  add @datatype for use with value nodes that would be a synonym only in those situations for @type`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nIvan Herman: can @container be used with @type to separate string, dates, etc?<br/>\r\n… if so that is again an argument to deconflate all the meanings of @container<br/>\r\nGregg Kellogg: might make sense but isn’t very useful<br/>\r\n… the datatype for all variations would be rdf:HTML, so you wouldn’t be able to also work by languages<br/>\r\nIvan Herman: right. but even gkellogg had to think about whether you can use @type with @container, which tells us that we need to simplify<br/>\r\n… a container-mapping for @dataype — it’s not clear whether it would be useful<br/>\r\nRob Sanderson: if rdf:Literal is the datatype…<br/>\r\n… if you had some HTML, some strings, maybe you can sort it out then<br/>\r\nIvan Herman: so mapping via datatype is questionable<br/>\r\nGregg Kellogg: I understand the proposal to be a new keyword @datatype to be used in contexts to signal datatypes, as @type does today<br/>\r\n… letting us mark that usage of @type as obsolete<br/>\r\nIvan Herman: even today, you could use it via aliasing.<br/>\r\nGregg Kellogg: compaction wouldn’t do what you want if you did that<br/>\r\nIvan Herman: we have an example from Publishing WG where the alias would be useful, and round tripping not necessary<br/>\r\nProposed resolution: add @datatype for use with value nodes that would be a synonym only in those situations for @type (Rob Sanderson)<br/>\r\nRob Sanderson: +1<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: +1<br/>\r\nHarold Solbrig: +0<br/>\r\nSimon Steyskal: +1<br/>\r\nGregg Kellogg: +0.5<br/>\r\nAdam Soroka: Assuming bigbluehat is +1<br/>\r\nResolution #2: add @datatype for use with value nodes that would be a synonym only in those situations for @type<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597475> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/72#issuecomment-433597475"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/72> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597475> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597475> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597475> <http://schema.org/startDate> "2018-10-27T07:06:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597475> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597475> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-26-json-ld#section3).\r\n\r\n- `RESOLVED:  Allow IRIs to be constructed by string concatenation with multiple @vocabs, with appropriate security consideration section`\r\n- `ACTION:  Rob Sanderson to make a security consideration issue re relative IRI concatenation`\r\n- `ACTION:  Rob Sanderson to create security consideration re javascript URIs and relative IRIs`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nGregg Kellogg: in JSON-LD, vocab-relative and document-relative IRIs are resolved differently. we’ve already looked at this problem<br/>\r\n… and offered the ability to set @vocab=\"\"<br/>\r\n… which allows vocab to be resolved against the document base<br/>\r\n… motivated at least in part because in other RDF formats, that distinction doesn’t exist<br/>\r\n… so there was a parity issue against other serializations<br/>\r\n… this issue goes further, and lets @vocab get set to any relative URI, which would then be evaluated against the document base<br/>\r\n… the proposal includes that if a @vocab is already set and a new relative @vocab comes along, one simply string-appends the new one to the old one<br/>\r\nRob Sanderson: in the case of a base that came from HTTP with a # on the end, that would get lost<br/>\r\nGregg Kellogg: this also addresses the problem that Manu raised in the context of blank-node-properties.<br/>\r\nRob Sanderson: if you set vocab to ../# and you had example.org/ns then you get example.org/ns../#<br/>\r\nIvan Herman: as an editorial matter we must make very clear that this is string concatenation, not IRI concatenation<br/>\r\n<b>rob:</b> are there good rules for determining relative vs. absolute IRIs?<br/>\r\nIvan Herman: Look for the scheme<br/>\r\nIvan Herman: I am almost sure that the URI spec defines that very clearly<br/>\r\nRob Sanderson: but this could be a security problem if a malicious actor sets a CURI prefix of “http” to some malicious address<br/>\r\nIvan Herman: also the same thing with base<br/>\r\nGregg Kellogg: We can’t really know<br/>\r\nRob Sanderson: we can just advise people of the security concerns<br/>\r\nAction #1: Rob Sanderson to make a security consideration issue re relative IRI concatenation<br/>\r\nIvan Herman: do we check for “acceptable” scheme?<br/>\r\n… what about Javascript URIs (bookmarklets)<br/>\r\nRob Sanderson: “@vocab”: “javascript:”<br/>\r\nAction #2: Rob Sanderson to create security consideration re javascript URIs and relative IRIs<br/>\r\nGregg Kellogg: we don’t now check for defined schemes<br/>\r\nBenjamin Young: it’s the responsibility of the document loader to worry about this<br/>\r\n… it could just choose not to resolve troubling URIs<br/>\r\nIvan Herman: so you put together a URI from the JSON-LD (could happen in many ways).<br/>\r\n… at that level, do we add a security check?<br/>\r\nBenjamin Young: that’s the job of the person using the URI<br/>\r\nRob Sanderson: Or rather \"@vocab\": \"javascript:document.alert('hi!');\"<br/>\r\nBenjamin Young: this isn’t a job for the syntax<br/>\r\n… e.g. data: can hide anything<br/>\r\n… data: URIs<br/>\r\nGregg Kellogg: this could be used for maliciousness, but it’s on the users of the URIs to be careful<br/>\r\nRob Sanderson: we don’t do path expansion, we’re doing string concat here. so we won’t catch a lot of stuff<br/>\r\nBenjamin Young: but the advantage of string concat is that it supports non-pathy URIs<br/>\r\nGregg Kellogg: @vocab is used only for properties<br/>\r\n<b>several:</b> and generally people don’t dereference properties, and nothing in our algorithms says that they should<br/>\r\nGregg Kellogg: we can modify the API to return only URIs of some form.<br/>\r\nBenjamin Young: we can say “we never use these URIs, so there’s no concern w/i JSON-LD, but if users choose to use them, the usual concerns about URIs from the wild apply”<br/>\r\nGregg Kellogg: we might consider softening the current restrictions in 3.6.3<br/>\r\n… to use IRI expansion and not string concatenation<br/>\r\nRob Sanderson: \"@vocab\": \"<a href=\"http://example.org/ns/\"\">http://example.org/ns/\"</a> and then \"@vocab\": \"/\"<br/>\r\nRob Sanderson: currently you get \"<a href=\"http://example.org/ns//\"\">http://example.org/ns//\"</a> which is unexpected for relative IRIs<br/>\r\nRob Sanderson: And the expectation would be \"<a href=\"http://example.org/\"\">http://example.org/\"</a><br/>\r\nIvan Herman: are we making the distinction between the two kinds of resolution disappear?<br/>\r\nGregg Kellogg: still the issue of concatenation vs. IRI resolution<br/>\r\nGregg Kellogg: how do I establish @vocab, vs. how do I use it?<br/>\r\nIvan Herman: if we are in @vocab we do string concat, it’s clean<br/>\r\n… and users just have to know about that<br/>\r\n… let’s don’t mingle concatenation and IRI resolution<br/>\r\nGregg Kellogg: we’re only interested in resolving `@vocab when it is relative, that’s all<br/>\r\nIvan Herman: You’re right, but that’s about implementing the system<br/>\r\n… I’m talking about end users<br/>\r\n… if we just have string concat for @vocab, that’s clean, I understand that<br/>\r\n… even if we do IRI resolution instead over here<br/>\r\n… somewhere else. but any problems with doubled slashes, etc., are users problems to deal with<br/>\r\nRob Sanderson: if we went all the way to have @vocab itself computed and vocab terms resolved via IRI resolution, it breaks things<br/>\r\n… so lets stick cleanly to string concatenation<br/>\r\nGregg Kellogg: Ok, but these are different use cases.<br/>\r\nIvan Herman: there is an actual regexp to recognize absolute IRIs, so we can rely on that<br/>\r\nHarold Solbrig: doesn’t the CURI spec speak to this?<br/>\r\nGregg Kellogg: we don’t use CURIEs, either<br/>\r\nHarold Solbrig: why are we using something else?<br/>\r\nGregg Kellogg: every RDF serialization uses its own way to discuss short URIs<br/>\r\n… (gkellogg then names more than you would think he could off the top of his head)<br/>\r\nRob Sanderson: we can’t necessarily construct all legit IRIs, but most of what we can’t is unusual enough not to be problematic<br/>\r\n… if we stick with string concat, we avoid this<br/>\r\n… if you construct stupid @vocabs, that’s your problem<br/>\r\nProposed resolution: Allow IRIs to be constructed by string concatenation with multiple @vocabs (Rob Sanderson)<br/>\r\nProposed resolution: Allow IRIs to be constructed by string concatenation with multiple @vocabs, with appropriate security consideration section (Rob Sanderson)<br/>\r\nAdam Soroka: +1<br/>\r\nGregg Kellogg: +0.9<br/>\r\nRob Sanderson: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nAdam Soroka: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nBenjamin Young: +1<br/>\r\nResolution #3: Allow IRIs to be constructed by string concatenation with multiple @vocabs, with appropriate security consideration section<br/>\r\nIvan Herman: +1<br/>\r\nBenjamin Young: the Chaucer quote fwiw <a href=\"https://english.stackexchange.com/questions/139073/meaning-of-if-gold-rust-what-shall-the-iron-do\">https://english.stackexchange.com/questions/139073/meaning-of-if-gold-rust-what-shall-the-iron-do</a><br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597517> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-433597517"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597517> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597517> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597517> <http://schema.org/startDate> "2018-10-27T07:07:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597517> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597517> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-26-json-ld#section4).\r\n\r\n- `RESOLVED:  Make #56 editorial to add a \"@type\":\"@vocab\" example and otherwise no change`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nGregg Kellogg: the concern is that the same term expands differently in different places<br/>\r\n… gkellogg then describes the example in the issue<br/>\r\nRob Sanderson: the example has two triples in it:<br/>\r\nBenjamin Young: triples from the playground from the first example in #56<br/>\r\nBenjamin Young: &lt;<a href=\"http://example1.com/barney>\">http://example1.com/barney></a> <rdf:value> \"the sidekick\" .<br/>\r\nBenjamin Young: _:b0 <<a href=\"http://example1.com/fred>\">http://example1.com/fred></a> <<a href=\"http://example1.com/barney>\">http://example1.com/barney></a> .<br/>\r\nBenjamin Young: _:b0 <<a href=\"http://example1.com/fred>\">http://example1.com/fred></a> <<a href=\"http://example2.com/barney>\">http://example2.com/barney></a> .<br/>\r\nIvan Herman: I would say that in the second case (barney is a string) it’s the defn of barney that comes in<br/>\r\n… nothing to do with that fred is defined by vocab<br/>\r\nGregg Kellogg: no, it does have to do with<br/>\r\n… our rules are intentionally different for different kinds of values<br/>\r\n… the complaint is that the rules for resolving IRIs vary<br/>\r\n… in the example the value space of fred is vocab<br/>\r\n… the fact that there is an entry in the vocab space for barney means nothing when we use barney as an ID.<br/>\r\nAdam Soroka: that’s the two different spaces<br/>\r\nGregg Kellogg: unless it happens to be used in a CURI<br/>\r\nIvan Herman: this is confusing<br/>\r\nGregg Kellogg: in 1.0 there is a distinction between the vocabulary (properties, types) and values, which come from the document.<br/>\r\n… if you have a term in the vocab with a name that is used as instance data, in each position they are resolved differently.<br/>\r\nBenjamin Young: a remix of the example of #56 using 2 contexts in <a href=\"http://tinyurl.com/y7wpjogw\">http://tinyurl.com/y7wpjogw</a><br/>\r\nGregg Kellogg: we’re getting back into deep history of 1.0 here. Qe felt there are good reasons to make this distinction, but we may have been wrong, of course<br/>\r\nAdam Soroka: ivan is now showing examples on the projector, see <a href=\"http://tinyurl.com/yclwe2ax\">http://tinyurl.com/yclwe2ax</a><br/>\r\nGregg Kellogg: when you have a doc, you ascribe meaning by bring properties and types to it.<br/>\r\n… but you would want to resolve relative value URIs differently than vocab terms<br/>\r\nRob Sanderson: but this kind of problematic situation shouldn’t arise<br/>\r\nBenjamin Young: sometimes you don’t get a choice<br/>\r\nRob Sanderson: you should be able to avoid it by inverting the order of multiple contexts, if they colliding in this way between them<br/>\r\nIvan Herman: in the first example with barney, <a href=\"http://example1.com/\">http://example1.com/</a> is used for base and the first appearance of fred<br/>\r\nGregg Kellogg: the fact that barney is a term in the context doesn’t affect value expansion<br/>\r\nIvan Herman: if I change the base, various changes result<br/>\r\n… we could pare down the example<br/>\r\nBenjamin Young: this could confuse naive devs<br/>\r\nRob Sanderson: you should never get this to begin with<br/>\r\n… what would be the use of interpreting barney as the same thing in the example<br/>\r\n… you wouldn’t construct that data.<br/>\r\nBenjamin Young: [uses his hands to construct a list of annotations]<br/>\r\n… one past use case we’ve gotten is when you start with a list of ids,then you reference down into a list of inclusions.<br/>\r\n… the use case from which this current issue came is gathering that up into a packaged graph with lots of graphs about the same stuff<br/>\r\nRob Sanderson: <a href=\"http://tinyurl.com/yb3olq5y\">http://tinyurl.com/yb3olq5y</a><br/>\r\nBenjamin Young: in JSON-LD we are constantly using many contexts, that raises the likelihood of this<br/>\r\nAdam Soroka: more discussion about whether or not this situation can realistically arise<br/>\r\nRob Sanderson: the data in the OP example is meaningless<br/>\r\nAdam Soroka: ivan brings more examples to the projector<br/>\r\nIvan Herman: here is a minimal situation to display the problem<br/>\r\nIvan Herman: A simpler version of the example:<br/>\r\n{<br/>\r\n<b>\"@context\":</b> {<br/>\r\n<b>\"fred\":</b> {<br/>\r\n<b>\"@id\":</b> \"<a href=\"http://a.b.c\",\">http://a.b.c\",</a><br/>\r\n<b>\"@type\":</b> \"@vocab\"<br/>\r\n},<br/>\r\n<b>\"barney\":</b> {<br/>\r\n<b>\"@id\":</b> \"abc:def\"<br/>\r\n}<br/>\r\n},<br/>\r\n<b>\"fred\":</b> \"barney\"<br/>\r\n}<br/>\r\n(see <a href=\"http://tinyurl.com/y78bzssn)\">http://tinyurl.com/y78bzssn)</a><br/>\r\nAdam Soroka: agreement that ivan’s new example minimally demonstrates the problem<br/>\r\nGregg Kellogg: why does one want to create terms with '@type':\"@vocab\" to begin with?<br/>\r\nIvan Herman: we should have a very clear example of this and explanation of this in the docs<br/>\r\nGregg Kellogg: I think we have examples<br/>\r\nIvan Herman: with lots of explanation<br/>\r\nGregg Kellogg: we have a document space and a vocab space, and the only time document terms get resolved in vocab space is in compact IRIs<br/>\r\n… and when the term used as the property is defined as '@type':\"@vocab\"<br/>\r\nBenjamin Young: this example wasn’t contrived—it came out of extant tooling<br/>\r\nAdam Soroka: disagreement about how responsible users are to avoid these kinds of colisions when using other people context’s<br/>\r\nIvan Herman: Patrick (the OP) is a very expert user. What about the less-expert users?<br/>\r\n… it’s a return to what I earlier said: what if I am semweb literate, and I come to this, and I can’t make my graph work sanely in JSON-LD<br/>\r\nBenjamin Young: even with Patrick’s expertise he hit this problem, and not by trying to develop a curious example<br/>\r\n… it was normal work<br/>\r\nGregg Kellogg: this might stem from divergent missions<br/>\r\n… surprising that someone trying to turn Turtle into JSON-LD doesn’t find that obvious<br/>\r\nIvan Herman: might need to push this into the primer<br/>\r\n… the doc as is tried to make it usable for JSON devs<br/>\r\n… we may need to write from the other direction<br/>\r\n… for RDF folks coming to JSON<br/>\r\nRob Sanderson: in Patrick’s defense, there is no good example for this<br/>\r\nGregg Kellogg: I can try to write this up<br/>\r\n… one concern: we are still getting to “own” JSON-LD<br/>\r\n… we all need to get to an adequate mastery level to be able to talk about this<br/>\r\n… we could try assigning issues to people who raise them<br/>\r\nProposed resolution: Make #56 editorial to add a \"@type\":\"@vocab\" example (Rob Sanderson)<br/>\r\nAdam Soroka: +1<br/>\r\nProposed resolution: Make #56 editorial to add a \"@type\":\"@vocab\" example and otherwise no change (Rob Sanderson)<br/>\r\nRob Sanderson: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nBenjamin Young: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nAdam Soroka: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nResolution #4: Make #56 editorial to add a \"@type\":\"@vocab\" example and otherwise no change<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597582> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-433597582"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597582> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597582> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597582> <http://schema.org/startDate> "2018-10-27T07:08:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597582> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597582> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-26-json-ld#section6).\r\n\r\n- `RESOLVED:  Add text to Iana Considerations explicitly allowing the request of a context or frame document, plus security consideration on whitelist, plus tests`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: we can use space separated lists of URIs, so the profile=”” parameter can contain both the compaction, etc. defined URIs<br/>\r\n… as well as a JSON-LD context or frame URI<br/>\r\n… however, these URIs might collectively get quite long<br/>\r\nAdam Soroka: if you specify a URI don’t you want it to be compacted?<br/>\r\nRob Sanderson: it could be a frame<br/>\r\nGregg Kellogg: or a bomb<br/>\r\nBenjamin Young: or a cat photo<br/>\r\nAdam Soroka: do we want to have a default use like it’s assumed it’s a context URI?<br/>\r\nIvan Herman: what would this look like in practice?<br/>\r\nRob Sanderson: I’ll write it up…one second…<br/>\r\nRob Sanderson: ACCEPT: application/ld+json;profile=\"<a href=\"http://w3.org/ns/anno.jsonld\"\">http://w3.org/ns/anno.jsonld\"</a><br/>\r\nRob Sanderson: this would say, “I want this request compacted according to this context”<br/>\r\nGregg Kellogg: if that JSON-LD URL returns a context<br/>\r\nBenjamin Young: don’t dereferences things found in profile params<br/>\r\n… because proxies<br/>\r\nGregg Kellogg: right, security concerns/needs should be expressed<br/>\r\nBenjamin Young: we used the entire string as the “media type” for Web Annotation<br/>\r\n… with no expressed intent or idea of dereferencing that context URI<br/>\r\nAdam Soroka: I’m not too worried about big headers<br/>\r\n… if you’re going to be this particular about it, then that’s a “cost” you’ll face<br/>\r\nRob Sanderson: and the multiple URIs in profile=”” is not a problem?<br/>\r\nAdam Soroka: no, I think that’s fine<br/>\r\nRob Sanderson: if you don’t care if you’re flattened or compacted, then don’t state it and use the context for whichever you’re returning<br/>\r\nBenjamin Young: is there priority among these strings?<br/>\r\n… or do they just work as flags?<br/>\r\nRob Sanderson: they’re just flags<br/>\r\nAdam Soroka: do we want q=”” parameters for this?<br/>\r\nRob Sanderson: I’d say it’s an error condition to have multiple contexts given<br/>\r\nBenjamin Young: is the intent to continue–as Web Annotation did–as a single opaque string?<br/>\r\n… or are we switching on each piece?<br/>\r\n… mostly it’s a question for me about upgrading existing Web Annotation servers (and the like)<br/>\r\n… so are they opaque “whole” strings? or are we taking them apart in some way?<br/>\r\nRob Sanderson: so, in the case of compaction at least, we could have a default that maps to compaction<br/>\r\n… which is how profile=”” is used in the cases that we know<br/>\r\nGregg Kellogg: are you going to help write these tests?<br/>\r\nRob Sanderson: sure. I’ll help write those tests<br/>\r\n… and the paragraph/dependencies<br/>\r\nGregg Kellogg: and at the moment we don’t have complete HTTP header tests…but need those<br/>\r\nRob Sanderson: I know someone (bigbluehat) who’s done this already<br/>\r\nBenjamin Young: we’re continuing the Web Annotation validation/testing tooling work at <a href=\"http://annotator.apache.org/\">http://annotator.apache.org/</a><br/>\r\nGregg Kellogg: so, there are a few HTTP tests now<br/>\r\n… they were originally in an .htaccess file<br/>\r\n… but right now it’s left up to the implementations to act as if the headers were expressed in the responses or not<br/>\r\n… the test suite should ideally run off a W3C mirror that implement these .htaccess<br/>\r\nBenjamin Young: curious which bits you needed in .htaccess<br/>\r\nGregg Kellogg: there’s a remote access manifest in the API<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-api/blob/master/tests/remote-doc-manifest.jsonld\">https://github.com/w3c/json-ld-api/blob/master/tests/remote-doc-manifest.jsonld</a><br/>\r\nGregg Kellogg: for example <a href=\"https://github.com/w3c/json-ld-api/blob/master/tests/remote-doc-manifest.jsonld#L34\">https://github.com/w3c/json-ld-api/blob/master/tests/remote-doc-manifest.jsonld#L34</a><br/>\r\n… this one tests a application/jldTest content type<br/>\r\n… which in this case should fail<br/>\r\n… others here deal with redirects<br/>\r\n… also, another for the Link header <a href=\"https://github.com/w3c/json-ld-api/blob/master/tests/remote-doc-manifest.jsonld#L84\">https://github.com/w3c/json-ld-api/blob/master/tests/remote-doc-manifest.jsonld#L84</a><br/>\r\n… for all of these we’re analyzing the JSON-LD result<br/>\r\n… so we probably want similar ones analyzing the HTTP headers themselves<br/>\r\nProposed resolution: Add text to Iana Considerations explicitly allowing the request of a context or frame document, plus security consideration on whitelist, plus tests (Rob Sanderson)<br/>\r\nRob Sanderson: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nAdam Soroka: +1<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: +1<br/>\r\nResolution #5: Add text to Iana Considerations explicitly allowing the request of a context or frame document, plus security consideration on whitelist, plus tests<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597665> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-433597665"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597665> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597665> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597665> <http://schema.org/startDate> "2018-10-27T07:10:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597665> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597665> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-26-json-ld#section7-1).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n7.1. What is ‘base’ for an embedded json-ld? (redux)<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-syntax/issues/23\">https://github.com/w3c/json-ld-syntax/issues/23</a><br/>\r\nRob Sanderson: the overall req is that for relative URIS, we must have a way to resolve them to absolute URIs.<br/>\r\n… JSON-LD that is provided by itself, this only refers to the URI of the doc.<br/>\r\n… so resolution is easy.<br/>\r\nRob Sanderson: but you can also embed JSON-LD w/in HTML<br/>\r\n… there are various ways to determine the base of an HTML doc<br/>\r\n… our issue is when we are resolving rel URIs inside a JSON-LD doc inside an HTML doc<br/>\r\n… should we rely on that base or should we rely on the JSON-LD base (as it would otherwise be used)?<br/>\r\nIvan Herman: the base attribute in the DOM is inherited by the &lt;script/> element that contains the JSON-LD<br/>\r\nHadley Beeman: use case?<br/>\r\nIvan Herman: every schema.org doc (in JSON-LD) is embedded. Billions of pages contain this.<br/>\r\nDan Brickley: Case 1: <a href=\"https://gist.github.com/danbri/0168ebcd731493ee88c20407e6cdb8bf\">https://gist.github.com/danbri/0168ebcd731493ee88c20407e6cdb8bf</a> raw: <a href=\"https://gist.githubusercontent.com/danbri/0168ebcd731493ee88c20407e6cdb8bf/raw/bff3ae0bed3fac72972bf1ccccd4137517111bc4/gistfile1.txt\">https://gist.githubusercontent.com/danbri/0168ebcd731493ee88c20407e6cdb8bf/raw/bff3ae0bed3fac72972bf1ccccd4137517111bc4/gistfile1.txt</a> HTML includes a div setting a base. vs Case 2: <a href=\"https://gist.github.com/danbri/b04d835ebf227f8994001b304ac59acf\">https://gist.github.com/danbri/b04d835ebf227f8994001b304ac59acf</a> <a href=\"https://gist.githubusercontent.com/danbri/b04d835ebf227f8994001b304ac59acf/raw/3cbea88cd905665cd158b5988b1a8839362e4f57/gistfile1.txt\">https://gist.githubusercontent.com/danbri/b04d835ebf227f8994001b304ac59acf/raw/3cbea88cd905665cd158b5988b1a8839362e4f57/gistfile1.txt</a><br/>\r\nDan Brickley: I forgot to relative-ize some URLs<br/>\r\nHadley Beeman: what are you going to do with the absolute URI?<br/>\r\nRob Sanderson: the point is to get to RDF, which works on absolute URI<br/>\r\nDan Brickley: We just want to make links!<br/>\r\nBenjamin Young: the dom tree inherits that base tag, and the base tag also supplies the base URI for the HTML doc<br/>\r\n… the prevailing encouragement is to ignore the DOM<br/>\r\nRob Sanderson: the counterexamples are Microdata or RDFa. RDFa uses all the base URIs.<br/>\r\n… they use the DOM, both of them<br/>\r\nGregg Kellogg: it would be nice if all these things agreed<br/>\r\nBenjamin Young: we already have explicit base for JSON-LD<br/>\r\nHadley Beeman: how much is JSON-LD content vs. machine-parseable behavior?<br/>\r\n… it’s not easy<br/>\r\nBenjamin Young: Is the JSON-LD integrated in the doc, or is the doc just a carrier?<br/>\r\nGregg Kellogg: you might have multiple script blocks.<br/>\r\nDan Brickley: I redid the testcases: <a href=\"https://gist.github.com/danbri/0168ebcd731493ee88c20407e6cdb8bf\">https://gist.github.com/danbri/0168ebcd731493ee88c20407e6cdb8bf</a> vs <a href=\"https://gist.github.com/danbri/b04d835ebf227f8994001b304ac59acf\">https://gist.github.com/danbri/b04d835ebf227f8994001b304ac59acf</a> (see raw links for … raw links)<br/>\r\nHadley Beeman: it’s content vs. structured data<br/>\r\n… danbri and are have been discussing this<br/>\r\nHadley Beeman: my instinct is to prefer that data that is machine-readable before human-readable shouldn’t be tied up with the DOM<br/>\r\n… but I’d like to discuss with my TAG colleagues to avoid breaking other things<br/>\r\nDan Brickley: 3 points about this<br/>\r\nDan Brickley: 1. Google at least, likely other search engines, extract JSON-LD after running headless browsers.<br/>\r\nDan Brickley: 2. Here’s a headless browser called from python (firefox), which ignores <base href> and just pulls out <script>. It would be good for this not to get too much more complex.<br/>\r\nDan Brickley: 3. The big appeal of JSON-LD was its standalone nature.<br/>\r\nBenjamin Young: this might be a good thing for RDF 2.0, but it would not be in a <script/> tag<br/>\r\n… but a data block right now doesn’t inherit from the DOM<br/>\r\nHadley Beeman: if you come from the part of the Web where most stuff is in the DOM, then this would be natural for JSON-LD<br/>\r\n… the desire to integrate in the future makes sense,<br/>\r\n… but not doing that suddenly now<br/>\r\nDan Brickley: 1. we don’t want to get involved with browsery hell as a search engine.<br/>\r\n… but what we do now is fragile<br/>\r\n… but it’s easy for publishers<br/>\r\n… we say that it works, but we’re not pushing it as the right thing to do<br/>\r\n… 2. JSON-LD took off because it was self-contained<br/>\r\n… unlike other structured data formats<br/>\r\n… that self-contained character is the clincher here<br/>\r\n… only do relative URIs if you know what you’re doing<br/>\r\nGregg Kellogg: these bleeds into other specs that might use <script> blocks<br/>\r\n… how should rel URIs be interpreted there?<br/>\r\n… I suspect that they should be resolved against the document URI<br/>\r\nBenjamin Young: same deal if you have a CMS that is sticking metadata into pages—you should absolute-ize the URIs<br/>\r\n… which we can do already in JSON-LD<br/>\r\nHadley Beeman: Create an issue on this please <a href=\"https://github.com/w3ctag/design-reviews\">https://github.com/w3ctag/design-reviews</a><br/>\r\nGregg Kellogg: if we have input, we should give that to the TAG<br/>\r\nBenjamin Young: could result in changes to the datablock spec<br/>\r\n… or telling specs to advertise what they do here<br/>\r\n… ultimately, if you don’t absolutize the URIs, you are entangling your data with the package<br/>\r\nBenjamin Young: <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#data-block\">https://www.w3.org/TR/html5/semantics-scripting.html#data-block</a><br/>\r\nHadley Beeman: you used the word “package”<br/>\r\nBenjamin Young: let me say “conveyance” instead<br/>\r\nDan Brickley: ..ooOO( if json ld is parsing from a.html and there’s an iframe of b.html, … do we have anything to say?)<br/>\r\nDan Brickley: what is the story with multiple script blocks?<br/>\r\nBenjamin Young: we have other issues, but without this we can’t get to the others<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597729> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-433597729"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597729> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597729> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597729> <http://schema.org/startDate> "2018-10-27T07:11:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597729> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433597729> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-10-26-json-ld#section7-2).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: equally or more cross-working-group to the last one<br/>\r\n… VC et al have security concerns around contexts that must be led by a server before the server can understand the JSON-LD<br/>\r\nBenjamin Young: you don’t have to fetch this every time you need it, you will cache contexts, etc.<br/>\r\n… which comes around to how contexts (as web resources) change with time<br/>\r\n… naming on the Web—easy?<br/>\r\n… each of the communities using the tech can resolve these things. we need the TAG to advice on the nuances of things<br/>\r\n… like content hashes, etc.<br/>\r\nRob Sanderson: you can solve it at 3 diff layers: HTTP, where you can last-modified, etags, etc.<br/>\r\n… in the doc itself, which can declare versioning<br/>\r\n… or in the URI, e.g. http/example.com/v2<br/>\r\nDan Brickley: but do you need a context at all?<br/>\r\nGregg Kellogg: you can put it into the instance doc itself, but it still exists.<br/>\r\nBenjamin Young: {\"@context\": {\"@vocab\": \"<a href=\"http://example.com/\"},\">http://example.com/\"},</a> \"name\": \"made up vocab\"}<br/>\r\nGregg Kellogg: The notion is that JSON-LD provides the context within which to interpret your JSON<br/>\r\n… strings sometimes are dates sometimes IRIs, sometimes something else<br/>\r\n… you need to both distinguish between these things but also allow for idiomatic JSON<br/>\r\nBenjamin Young: which creates _:doc-id &lt;<a href=\"http://example.com/name>\">http://example.com/name></a> \"made up vocab\" (in triples—where “doc-id” is completely random)<br/>\r\nGregg Kellogg: the context explains some of the things that API docs might explain<br/>\r\nDan Brickley: I had thought that the context could be derived in some other way<br/>\r\nBenjamin Young: you can.<br/>\r\nAdam Soroka: (from an HTTP header)<br/>\r\nDan Brickley: is this wrong then?<br/>\r\nDan Brickley: { \"@vocab\": \"<a href=\"https://schema.org/\",\">https://schema.org/\",</a> \"@type\": \"Volcano\", \"sameAs\": \"<a href=\"https://www.wikidata.org/wiki/Q2586153\",\">https://www.wikidata.org/wiki/Q2586153\",</a> \"name\": \"Zuidwal volcano\", \"description\": \"The Zuidwal volcano is an extinct volcano in the Netherlands at more than 2 km (6,600 ft) below ground ...\"}<br/>\r\nBenjamin Young: latest syntax spec <a href=\"https://w3c.github.io/json-ld-syntax/\">https://w3c.github.io/json-ld-syntax/</a><br/>\r\nRob Sanderson: the TAG issue for guidance is — this caching question is much broader that JSON-LD.<br/>\r\n… many systems do this kind of “apply one resource to another to clarify”<br/>\r\n… e.g a CSS stylesheet—if it changes over time the rendered HTML will look very different<br/>\r\n… in a knowledge graph context, that kind of change is much more dangerous<br/>\r\n… guidance for mitigating those concerns in the spec rather than leaving it up to broader discussion about change over time on the web<br/>\r\nBenjamin Young: Link header looks like: Link: <context.jsonld>; rel=\"<a href=\"http://www.w3.org/ns/json-ld#context\";\">http://www.w3.org/ns/json-ld#context\";</a> type=\"application/ld+json\"<br/>\r\nHadley Beeman: so remote change can affect local things—how is this different from old concerns about linking?<br/>\r\nDan Brickley: the WoT folks chose a syntax that requires this additional context resource—that’s what causes this to be different<br/>\r\n… as long as you need the context doc to interpret and act on the data, you have opened this security hole<br/>\r\nHadley Beeman: so what about caching?<br/>\r\nAdam Soroka: WoT operates on much longer timescales — years in many cases.<br/>\r\nDan Brickley: one thing we care about is being a planet-scale search engine, the other is about lightbulbs in your home<br/>\r\nBenjamin Young: you can’t change what happens in the lightbulb without changing the context used for data there<br/>\r\n… you can update when you update the code<br/>\r\n… the URI of the context really is a URI (an identifier), not a location, but it ends up being used as one<br/>\r\nHadley Beeman: I still hear this either being “we have to solve the problems of building the IoT” or “the network knows something about me because of what I looked at”<br/>\r\n… which are both larger problems<br/>\r\nDan Brickley: no, it’s different — because now the lightbulb is not a user agent, but it is broadcasting info about you<br/>\r\nBenjamin Young: our API spec says you can implement document loading any way you want, yay!<br/>\r\n… but that doesn’t really solve the problem<br/>\r\n… we have this elsewhere, e.g. clickjacking<br/>\r\n… the answer is Single Domain policies, which is utterly inflexible and unwebby<br/>\r\n… we want to have ids that can be safely resolved<br/>\r\n… we would like a webby trust model<br/>\r\nHadley Beeman: if we do that, we say this is no longer a user agent (the light bulb)<br/>\r\n… you are making an explicit decision that has privacy remifications—you need to be aware of that<br/>\r\nDan Brickley: (mitigation sketches being: parser reports, and web packaging for out-of-band context bundles with integrity checks, e.g. via homehubs etc)<br/>\r\nDan Brickley: I am unaware of any context that is useful and has gone unchanged for more than a few weeks<br/>\r\n… we’re stuck between refreshing and getting the best new stuff<br/>\r\n… and broadcasting your interests on the web<br/>\r\n… but if not, you get out of date<br/>\r\n… one thing would be for parsers to report what they’re done<br/>\r\nRob Sanderson: (and we carry on)<br/>\r\nRob Sanderson: (everyone disagrees about the weeks lifecycle, e.g. activitystreams, annotations, ldp, etc)<br/>\r\nDan Brickley: there are a lot of use cases for web packaging, this might connect with that<br/>\r\n… your home env might have gotten this through some kind of bundled thing at lower frequencies.<br/>\r\nBenjamin Young: you could have an API for updating the lightbulb<br/>\r\n… but that can’t work from a pull side, because you can’t guarantee that the identifier will resolve the same way on the open web over time<br/>\r\n… bringing us to blockchains, hashing, etc.<br/>\r\n… there are lots of potential solutions on the list<br/>\r\n… web packaging is one potential solution<br/>\r\nRob Sanderson: do you understand the issue well enough for us to send a ticket to TAG?<br/>\r\nHadley Beeman: what’s the header for this?<br/>\r\nBenjamin Young: maybe “integrity”<br/>\r\nHadley Beeman: please write this up with use cases<br/>\r\n… because otherwise we’re staying hypothetical<br/>\r\nBenjamin Young: there is no requirement to do remote context dereferencing<br/>\r\n… but people will<br/>\r\nDan Brickley: there are the specs, then there are ways you relay operate<br/>\r\n… with JSON-LD, if you do it wrong, people flame you on the mailing list<br/>\r\n… social pressure has forced us to become a component in a larger system—not cool!<br/>\r\nDan Brickley: we’d like people to get what they are expecting when they get contexts<br/>\r\nBenjamin Young: many communities have this same problem<br/>\r\n… with many different solutions<br/>\r\n… that’s what makes it a TAG deal<br/>\r\n… another big JSON-LD deployment is Mastodon (uses Activity Streams)<br/>\r\nAdam Soroka: .. they haven’t updated their context for a long time<br/>\r\nBenjamin Young: but it still works<br/>\r\n… which is what makes this a Publishing WG problem—publishing that is broken because a system went down somewhere isn’t publishing as publishers understand it<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433718122> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/89#issuecomment-433718122"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/89> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433718122> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433718122> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433718122> <http://schema.org/startDate> "2018-10-28T16:02:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433718122> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433718122> <http://schema.org/description> "Closed by https://github.com/w3ctag/design-reviews/issues/312 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433754023> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/88#issuecomment-433754023"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433754023> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433754023> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433754023> <http://schema.org/startDate> "2018-10-28T23:49:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433754023> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/433754023> <http://schema.org/description> "Yes, as @davidlehn said, references are placed because they exist within terms used between the different specs. This will take some figuring out how to eliminate them from the spec itself." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434088550> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/88#issuecomment-434088550"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434088550> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434088550> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434088550> <http://schema.org/startDate> "2018-10-29T21:32:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434088550> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434088550> <http://schema.org/description> "Note that the discussion is about a spec referencing itself, but the title is about referencing a previous version.\r\n\r\nThe bits referencing the previous version are:\r\n\r\n> **processing mode**\r\n> The processing mode defines how a JSON-LD document is processed. By default, all documents are assumed to be conformant with JSON-LD 1.0 [JSON-LD]. By defining a different version using the `@version` member in a context, or via explicit API option, other processing modes can be accessed. This specification defines extensions for the `json-ld-1.1` processing mode.\r\n\r\nand\r\n\r\n> `@version`\r\n> Used in a context definition to set the processing mode. New features since JSON-LD 1.0 [JSON-LD] described in this specification are only available when processing mode has been explicitly set to `json-ld-1.1`.\r\n\r\nThis aspect is debatable. The fact that specs shouldn't reference themselves, is not. I've created w3c/respec#1862 to resolve.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434722150> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-434722150"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434722150> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434722150> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434722150> <http://schema.org/startDate> "2018-10-31T15:03:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434722150> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434722150> <http://schema.org/description> "@azaroth42 I've been reviewing the explainer you wrote for https://github.com/w3ctag/design-reviews/issues/312\r\n\r\n#### [Scenario 1: xml:base attribute on script tag](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#scenario-1-xmlbase-attribute-on-script-tag)\r\nThe `xml:base` has been limited to XML-only processing of HTML documents: https://www.w3.org/TR/html/dom.html#the-xmlbase-attribute-xml-only Consequently, we should probably remove it from this explainer, and *possibly* have a separate section for XML-included JSON-LD...but that should be a separate issue/discussion (informed by this one...but separated).\r\n\r\n#### [Scenario 2: base given in link[@rel=canonical] element](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#scenario-2-base-given-in-linkrelcanonical-element)\r\nThis scenario is a bit misleading. Using `<link rel=\"canonical\">` has no effect on relativity of URLs, and is only meant to effect index's identifying a \"canonical\" source of the primary *document*--i.e. it has no effect on associated resources. Consequently, it's not related to this issue. See [RFC 6596](https://tools.ietf.org/html/rfc6596) for more info.\r\n\r\nAlso in this section there's a phantom `base` attribute (probably a copy/paste fail?) in the example. It should be removed as there isn't a `base` attribute in HTML.\r\n\r\n#### [Scenario 3: base attribute in ancestor tags](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#scenario-3-base-attribute-in-ancestor-tags)\r\nDitto from Scenario 1. Propose removing as unrelated to HTML-based processing.\r\n\r\n#### [Scenario 4: attributes mutated by javascript](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#scenario-4-attributes-mutated-by-javascript)\r\nThere's a section for this scenario in the HTML5 spec: [2.5.3. Dynamic changes to base URLs\r\n](https://www.w3.org/TR/html/infrastructure.html#dynamic-changes-to-base-urls). Upon change it only effects `href` and `cite` attribute effects/display. It has no immediate effect on `src` (else all the embedded images, iframes, etc would need to be refreshed).\r\n\r\nGiven that JSON-LD has both `src`-like \"inclusion\" requirements (re: `@context` dereferencing) and `href`-like linking (re: `@id`, etc), determination would have to be made about when a `base` change effects which one and when. For instance, if `base.href` were changed via script, would a JSON-LD processor be expected to re-retrieve any relative `@context` URLs? would it only effect the `@id`'s (etc)?\r\n\r\nHere's an example JSON-LD file showing such a scenario:\r\n```json\r\n{\r\n  \"@context\": \"../contexts/person.jsonld\",\r\n  \"@id\": \"bigbluehat\",\r\n  \"name\": \"me\"\r\n}\r\n```\r\n\r\n#### [Scenario 5: iframes](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#scenario-5-iframes)\r\nWhile I too enjoy that bit of spec quotation, the example doesn't map to that spec text--which is about the [`srcdoc` attribute](https://www.w3.org/TR/html/semantics-embedded-content.html#an-iframe-srcdoc-document) and not about [`src`](https://www.w3.org/TR/html/semantics-embedded-content.html#ref-for-nested-browsing-contexts%E2%91%A3).\r\n\r\nThe `base.href` *does* have effect on `<iframe srcdoc='<img src=\"logo.jpg\">'></iframe>` embedded HTML, but *does not* have effect on the contents of `page-with-logo.html`'s base URL handling if included via `<iframe src=\"page-with-logo.html\"></iframe>` (where `page-with-logo.html` contains the same `<img src=\"logo.jpg\">` code). The `srcdoc` content will load using the [parent browsing context](https://www.w3.org/TR/html/browsers.html#parent-browsing-context) `base.href` value and the `src` content will use the `base.href` calculated within the [nested browsing context](https://www.w3.org/TR/html/browsers.html#nested-browsing-contexts).\r\n\r\nAdditionally...\r\n> The srcdoc attribute, if present, must have a value using the HTML syntax...\r\n> \r\n\r\nConsequently, writing `<iframe srcdoc='{\"@context\": \"../relative/context.jsonld\"}'></iframe>` would result in that `{...}` text being displayed to the user as if it were HTML text content.\r\n\r\nSo. I'd propose either removing this section or heavily revising it to make it clearer which iframe usage scenario is being described...and to what end.\r\n\r\n#### [Scenario 6: language (and other) attributes](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#scenario-6-language-and-other-attributes)\r\n\r\nThis one's fine in general, though (like the intro), the references to RDFa and Microdata processing are confusing as those are DOM-exclusive encodings and JSON-LD is \"plain text\" when embedded in HTML.\r\n\r\n#### [Detailed Design Discussion](https://gist.github.com/azaroth42/40fa22c0bb86c1fc92063fee5a7c3d4e#detailed-design-discussion)\r\n\r\nI'd suggest we add a bit more here (and/or the intro) related to the present reality of [data block](https://www.w3.org/TR/html5/semantics-scripting.html#data-block)'s as used currently--i.e. they're \"plain text.\"\r\n\r\nAdditionally, this paragraph muddies the arguments presented:\r\n> A significant counter argument is that an HTML document that contains both RDFA or Microdata and embedded JSON-LD would be required to use different processing rules for extracting the knowledge graph from the different formats, likely resulting in the disconnected system that we aim to avoid in the first place. Google's extraction processor does take the features into account, including javascript execution.\r\n\r\nAs mentioned at the face-to-face at TPAC, providing some *intentional* way to express a single layer of meaningful data across all these encoding is desirable. However, as someone building such a format for scholarly publishing which uses *both* RDFa and JSON-LD it is *not* my expectation that the current environment might suddenly change through redefinition and result in errors throughout the ecosystem. We (@Wiley) *do* want this capability, just not via the current plumbing.\r\n\r\nLastly, the \"Google's extraction processor does take the features into account, including javascript execution\" is not clear about \"the features\" and makes it sound as if content is processed with `base.href` in mind--which is not the case. Perhaps rephrase to \"Google's extraction processor does allow for JavaScript execution, but currently does not take `base.href` into account.\"\r\n\r\n#### Conclusion\r\n\r\nWe should more clearly (re)frame this review around *just* the current behavior vs. the proposed behavior and any ramifications of such a change (valuable and risky) on the wider world of data block usage (i.e. other JSON documents, etc)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434940289> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/90#issuecomment-434940289"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434940289> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434940289> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434940289> <http://schema.org/startDate> "2018-11-01T06:04:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434940289> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434940289> <http://schema.org/description> "Damn, the preview tool does not work:-(" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434965398> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/88#issuecomment-434965398"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434965398> .
<https://api.github.com/users/PaulJeong14> <http://schema.org/accountId> "PaulJeong14" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/22092729?v=4" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/url> "https://github.com/PaulJeong14"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/PaulJeong14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434965398> <http://schema.org/creator> <https://api.github.com/users/PaulJeong14> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434965398> <http://schema.org/startDate> "2018-11-01T08:11:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434965398> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/434965398> <http://schema.org/description> "I'm sorry for the confusion of the issue title.\r\nI meant the previous version is not the previous version (JSON LD 1.0) but the previous version of the WD(JSON 1.1). \r\nI'm OK if you delete self-referencing." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435200701> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/90#issuecomment-435200701"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/90> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435200701> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435200701> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435200701> <http://schema.org/startDate> "2018-11-01T21:55:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435200701> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435200701> <http://schema.org/description> "@iherman I don't know what to say about the lake of the Preview/Diffs. Last time it was because of a problem with spec-gen, but it seems to be running properly now. I agree that it's frustrating when it simply doesn't show up. Same problem in w3c/json-ld-api#49." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435207559> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/88#issuecomment-435207559"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/88> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435207559> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435207559> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435207559> <http://schema.org/startDate> "2018-11-01T22:24:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435207559> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/435207559> <http://schema.org/description> "Ahh, understood. Typically the previous version does point to the previous version in this WG. There should be (and now is) a `prevRecURI` field that was missing, and fixed in 04fe116ec6eb7e8b75499ed6755092a309b57655. This adds a \"Latest Recommendation\" field to the header, referencing the 1.0 spec (syntax and API).\r\n\r\nEventually, ReSpec will fix the self-reference bit." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436355405> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-436355405"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436355405> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436355405> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436355405> <http://schema.org/startDate> "2018-11-06T18:21:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436355405> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436355405> <http://schema.org/description> "> Ivan Herman: we have an example from Publishing WG where the alias would be useful, and round tripping not necessary\r\n\r\nYou'll have to expand on this @iherman. I'm not sure why the JSON-LD in the Publishing WG's current spec should be any less round-trip-able than any other JSON-LD. Wiley's use of JSON-LD is part of a wider internal and external RDF-based ecosystem, so it'd be terrible to have an alias gum up the gears.\r\n\r\nAdditionally, I'm not sure `@datatype` clarifies things any more than `@type`'s usage in specific proximity to `@value` did/does.\r\n\r\nAs in:\r\n```json\r\n{\r\n  \"@value\": \"<strong>markup!</strong>\",\r\n  \"@datatype\": \"rdf:HTML\"\r\n}\r\n```\r\ndoesn't seem any clearer than:\r\n```json\r\n{\r\n  \"@value\": \"<strong>markup!</strong>\",\r\n  \"@type\": \"rdf:HTML\"\r\n}\r\n```\r\nand ultimately means someone somewhere will try to write:\r\n```json\r\n{\r\n  \"@datatype\": \"Organization\",\r\n  \"name\": \"GitHub\"\r\n}\r\n```\r\nwhich, if I understand the proposal (i.e. \"synonym only in those situations\") would fail...but for reasons unclear to the person writing the JSON.\r\n\r\nI'd actually have been 👎 on this had I been on the call. I'm just not sure what value this new bit of syntax is bringing vs. the confusion risk to folks typing JSON. Sorry folks..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436532492> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-436532492"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436532492> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436532492> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436532492> <http://schema.org/startDate> "2018-11-07T07:41:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436532492> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436532492> <http://schema.org/description> "The behaviour of `@type`, when applied on an object, is fundamentally different than when applied on a literal. I believe the fact that two behaviours are conflated in the same keyword is a bug in the specification, and this manifested itself in a number of issues that were raised.\r\n\r\nIt can be disputed whether adding an alias for `@datatype` is the best solution; I believe making it clear to users that, on long term, using `@type` on a literal would not be allowed is important.\r\n\r\nAs for publishers: you may be right. But the feeling I have is that an overwhelming majority of user agents (including schema.org in this sense) do not do round tripping. They just consume the data, convert it into, say, triples, and take it from there. I may be wrong with my assessment." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436679586> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/9#issuecomment-436679586"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/9> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436679586> .
<https://api.github.com/users/joeltg> <http://schema.org/accountId> "joeltg" .
<https://api.github.com/users/joeltg> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/8454646?v=4" .
<https://api.github.com/users/joeltg> <http://schema.org/url> "https://github.com/joeltg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/joeltg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436679586> <http://schema.org/creator> <https://api.github.com/users/joeltg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436679586> <http://schema.org/startDate> "2018-11-07T16:13:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436679586> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436679586> <http://schema.org/description> "FWIW, I wrote a [demo document loader](https://github.com/underlay/jsonld-dweb-loader) for `dweb:/` URIs (IPFS and IPLD for now, as sketched out [here](https://github.com/ipfs/specs/pull/152#issuecomment-284628862)) and it works great (for both contexts and documents).\r\n\r\nI'd argue that things like immutable resource integrity are problems with HTTP, not with JSON-LD's syntax. If it's important for your application, you should be using a different URI scheme that fits your needs." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436776059> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-436776059"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436776059> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436776059> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436776059> <http://schema.org/startDate> "2018-11-07T21:02:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436776059> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/436776059> <http://schema.org/description> "What we're specifically addressing with this issue is the variation between \"node type\" and \"value type\" as described in this note and it's following example: https://w3c.github.io/json-ld-syntax/#h-note-12\r\n\r\nWe should keep in mind that the \"value type\" construction is actually quite rare in *data* \"in the wild\" and frequently abstracted away via the `@context` so that the JSON data document is simpler. Consequently, developers pragmatically only use the `{\"@value\": \"\", \"@type\": \"\"}` construction within data when they know they need to define a datatype on the *string* encoded in `@value`.\r\n\r\nAlso, we've made RDF round tripping the reason for not adding certain requested features, so using it now as something people \"do not do\" seems dangerous--especially since it's something Wiley specifically does with our JSON-LD data.\r\n\r\nRegardless, introducing an alias that causes processing confusion in the hopes that it's somehow clearer than the existing rare contextual use of the `@value`/`@type` combo seems dangerous." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437119144> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437119144"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437119144> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437119144> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437119144> <http://schema.org/startDate> "2018-11-08T19:08:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437119144> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437119144> <http://schema.org/description> "I disagree. Value **nodes** occur in every JSON-LD document. The fact that the {`@value` / `@type` } pattern is not common is due in part to the confusion engendered by overloading `@type`. In IIIF (and in the Annotation work IIRC, though it might not have come up explicitly) we avoided having to deal with value **type** constructions at all costs, even when it would otherwise be useful.  If you ask for expanded form, you'll get the value type construction everywhere, of course.\r\n\r\nI don't follow the round tripping issue. Is it that it would be indeterminate whether the original JSON used `@type` or `@datatype`? That seems very minor to me, given that the compact form does often hide this in the context.\r\n\r\nTo me, we have seen the results of this conflation over and over again with the various issues that have been raised around type coercion for classes rather than datatypes. I don't think there's any \"somehow\" about it -- the proposal that `@type` is an alias for rdf:type, `@datatype` is the expression of the data type of a literal value is very clear.\r\n\r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437433407> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437433407"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437433407> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437433407> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437433407> <http://schema.org/startDate> "2018-11-09T17:27:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437433407> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437433407> <http://schema.org/description> "The origin story as uncovered from history by @gkellogg: https://json-ld.org/minutes/2011-10-18/#topic-2" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437439021> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437439021"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437439021> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437439021> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437439021> <http://schema.org/startDate> "2018-11-09T17:46:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437439021> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437439021> <http://schema.org/description> "Also, see https://json-ld.org/minutes/2011-12-13/#topic-4 and https://github.com/json-ld/json-ld.org/issues/31." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437447577> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437447577"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437447577> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437447577> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437447577> <http://schema.org/startDate> "2018-11-09T18:16:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437447577> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437447577> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-09-json-ld#section3-1).\r\n\r\n- `RESOLVED:  bigbluehat & gkellogg to come up with rewording for 4.2, and new section for 9 for keywords, for review as to whether this will solve confusion without technical change`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n3.1. @type / @datatype<br/>\r\nRob Sanderson: link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/77\">https://github.com/w3c/json-ld-syntax/issues/77</a><br/>\r\nRob Sanderson: two issue that came up as being particularly interesting.<br/>\r\n… we should focus on them and try to come to some consensus<br/>\r\nRob Sanderson: related to issue 31 and the feeling at the time was that the overloading of @type was confusing<br/>\r\n… we proposed to add a new way in 1.1 to distinguish a datatype<br/>\r\n… that would clear up some of the confusion<br/>\r\n… decided to use @datatype but need to discuss more<br/>\r\n… ivan and I are on the pro side of @datatype. Ben is against it.<br/>\r\nGregg Kellogg: I have mixed opinions. If we had thought about this originally it would have made sense but we did not. Now we need to consider backwards compatibility<br/>\r\n… creating an alias of datatype to @datatype might help<br/>\r\n… we would lose the @dataype alias with expansion<br/>\r\n… just keep in mind that it will disappear with any transformation<br/>\r\nRob Sanderson: Example today: {\"@type\": \"foaf:Person\", \"foaf:age\": {\"@value\": \"42\", \"@type\": \"xsd:integer\"}}<br/>\r\nRob Sanderson: Proposed additional synonymous construct: {\"@type\": \"foaf:Person\", \"foaf:age\": {\"@value\": \"42\", \"@datatype\": \"xsd:integer\"}}<br/>\r\nPierre-Antoine Champin: I assumed that @type usage had been talked about in the 1.0 dev. Wanted to hear why the decision was made to not split the hair.<br/>\r\nGregg Kellogg: <a href=\"https://json-ld.org/minutes/2011-10-18/#topic-2\">https://json-ld.org/minutes/2011-10-18/#topic-2</a><br/>\r\nGregg Kellogg: there was an explosion of keywords back in the day and we determined that some were redundant or very similar. we did have an @datatype and decided to merge them back in 2011.<br/>\r\n… this was decided prior to the close alignment to RDF<br/>\r\nGregg Kellogg: <a href=\"https://json-ld.org/minutes/2011-12-13/#resolution-5\">https://json-ld.org/minutes/2011-12-13/#resolution-5</a><br/>\r\nGregg Kellogg: Quote from Manu - “what convinced me most was Markus’ argument that we should make it as simple as possible without losing functionality”<br/>\r\nGregg Kellogg: <a href=\"https://github.com/json-ld/json-ld.org/issues/31\">https://github.com/json-ld/json-ld.org/issues/31</a><br/>\r\nGregg Kellogg: From lanthaler - “I don’t think we can argue that we reduce the amount of invalid data that is created by having two different keywords. I’d argue that we increase the problem because people might put @datatype in the wrong place vs. @type.”<br/>\r\nBenjamin Young: which camps are we making it easier or harder for. it is rare to see this type of thing in the actual data. hearing what Gregg would have to do to make it works seems a bit too much to ask. The type coercion is valid but might be a fringe use case<br/>\r\n… concerned about the ramifications of doing this<br/>\r\nDavid Newbury: when trying to learn JSON-ld and learning that @type means 2 different things. Long time to wrap my head around using the wrong keyword with different meaning.<br/>\r\nRob Sanderson: I had the same experience. In the IIIF world we had 5 editors and we were trying to use type coercion on classes but we found that it did not work<br/>\r\n… also confuses a vendor we are working with<br/>\r\n… no evidence that it is more confusing to separate them<br/>\r\n… you could compact and expand to create valid JSON-ld. round-tripping seems like not an issue.<br/>\r\nBenjamin Young: I agree that @type is confusing. What I am concerned about is if adding @datatype makes it any more clear<br/>\r\n… very robust explanation would help<br/>\r\n… this could create a new set of confusion<br/>\r\nIvan Herman: one thing we need to remind ourselves is that our only requirement is that a valid 1.0 is valid 1.1<br/>\r\n… round tripping in not really an issue<br/>\r\n… what happens in 1.1 with processing the data.<br/>\r\n… pure JSON users will likely have issue in general. Diff between classes and literals are already somewhat confusing.<br/>\r\n… separating @type and @datatype makes it clear that there is a distinction<br/>\r\nPierre-Antoine Champin: could we specify that @type is used for resources, and @datatype is used for literals, but that @type can be used as an alias for @datatype<br/>\r\nGregg Kellogg: we could make the move to use @datatype and allow for @type for backwards compatibility. The issue is the processor, which is currently either 1.0 or 1.1 mode.<br/>\r\n… do we change the default processor to 1.1 and require a way to switch to change to 1.0<br/>\r\nBenjamin Young: +1 to what Gregg was saying. The versioning is a problem outside of the problem of what is better solution. There is a risk whenever you change things.<br/>\r\n… what is the impact on consumers of JSON-ld when the consumers are consuming pure JSON not Graph data<br/>\r\nRob Sanderson: sounds like there are 4 or 5 folks that are in favor and 1 against and 1 neutral (leaning against). The arguments against are significant (the 1.0 vs 1.1 processing issue)<br/>\r\n… If Ben and Gregg come up with a clear/complete definition of @type and a further rewording around type coercion. Then we can read them over, assess the definition and see if the text of the spec is clear enough to explain what the difference is and how to implement it<br/>\r\n… we can then decide if the documentation is sufficient or if we need to further consider splitting them<br/>\r\nGregg Kellogg: <a href=\"https://www.w3.org/TR/json-ld11/#syntax-tokens-and-keywords\">https://www.w3.org/TR/json-ld11/#syntax-tokens-and-keywords</a><br/>\r\nGregg Kellogg: is the current wording not clear enough? what are you looking for?<br/>\r\n… could we raise issue about the current documentation about what is not clear enough<br/>\r\nRob Sanderson: nodes are meaningless to people with RDF hats on.<br/>\r\nGregg Kellogg: are you looking for the current docs to be improved or for something new<br/>\r\nRob Sanderson: 1.7 is fine. 4.2.1 needs more clarity<br/>\r\n… it is not a technical issue it is a learning/implementation issue<br/>\r\n… 4.2 is the problem<br/>\r\n… splitting out @type into how to use for Classes and for Literals<br/>\r\nGregg Kellogg: what about further definition of other keywords<br/>\r\nRob Sanderson: a section in 9 about keywords and gives full definition.<br/>\r\nBenjamin Young: more than happy to help rewording. confusion between Value instead of Literal.<br/>\r\nIvan Herman: we should make is more explicit that there is very clear distinction between classes and literals in JSON-ld<br/>\r\nRob Sanderson: +1 to Ivan<br/>\r\nDavid Newbury: need a JSON person primer<br/>\r\nProposed resolution: bigbluehat &amp; gkellogg to come up with rewording for 4.2, and new section for 9 for keywords, for review as to whether this will solve confusion without technical change (Rob Sanderson)<br/>\r\nRob Sanderson: +1<br/>\r\nJeff Mixter: +1<br/>\r\nIvan Herman: +1<br/>\r\nBenjamin Young: +1 (noting it might include more revising elsewhere)<br/>\r\nGregg Kellogg: +1<br/>\r\nDavid Newbury: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nResolution #2: bigbluehat & gkellogg to come up with rewording for 4.2, and new section for 9 for keywords, for review as to whether this will solve confusion without technical change<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437463497> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437463497"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437463497> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437463497> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437463497> <http://schema.org/startDate> "2018-11-09T19:09:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437463497> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437463497> <http://schema.org/description> "> RESOLVED: bigbluehat & gkellogg to come up with rewording for 4.2, and new section for 9 for keywords, for review as to whether this will solve confusion without technical change\r\n\r\nI'm glad this is where things are now. The whole move to `@datatype` seemed like a solution for a problem that very few people are having. We considered all of this in JSON-LD 1.0 and the conclusion we came to was that adding more `@keywords` was something we should avoid doing because of the cognitive overhead it created for developers. As a general rule, we want less `@keywords` for developers to learn, not more.\r\n\r\nSpecifically, we knew that not having `@datatype` distinct from `@type` would create ambiguity that wouldn't sit well with traditional RDF folks, and that using `@id` instead of `@subject` would also create consternation among the RDF folk... but we erred on the side of general Web developers that don't know, nor care to know, about the details of RDF, and I think that was a good call in hindsight." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437620459> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437620459"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437620459> .
<https://api.github.com/users/ericprud> <http://schema.org/accountId> "ericprud" .
<https://api.github.com/users/ericprud> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/573478?v=4" .
<https://api.github.com/users/ericprud> <http://schema.org/url> "https://github.com/ericprud"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ericprud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437620459> <http://schema.org/creator> <https://api.github.com/users/ericprud> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437620459> <http://schema.org/startDate> "2018-11-10T20:53:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437620459> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437620459> <http://schema.org/description> "> The whole move to @datatype seemed like a solution for a problem that very few people are having.\r\n\r\nI don't know that I'm the target audience but the major confusion for me that pushed JSON-LD from i'll-grok-the-spec to i'll-fiddle-around-until-it-works was the fact that @type had so many different uses. Sure they don't appear in the same place so there's technically no conflict but minification of the vocabulary has real cognitive costs. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437895105> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437895105"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437895105> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437895105> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437895105> <http://schema.org/startDate> "2018-11-12T14:11:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437895105> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437895105> <http://schema.org/description> "> I don't know that I'm the target audience\r\n\r\nYou are definitely not the target audience. You know too much. :)\r\n\r\n> minification of the vocabulary has real cognitive costs.\r\n\r\nIt has real cognitive costs *for people that understand the technology at depth*. There are always going to be far fewer of those people (experts) than there are of people that just want to copy-paste-modify examples (novices). \r\n\r\nJSON-LD, by and large, is designed for novices that don't need to know. In fact, we try really hard to make it such that they don't need to know details for a long time... such as RDF making a distinction between the type of a resource and the type of a literal. The former is `\"type\": \"Foo\"`, which is what most people need. They rarely need to type literals, so we hide that. The later is often taken care of via type coercion for the most part.\r\n\r\nIn any case, if you know that there is a difference between a resource type and a literal type, then you already know too much and you're already probably capable of really grokking how JSON-LD maps to RDF.\r\n\r\nTo put it another way, if JSON-LD expands to expose Web developers to all of RDF's features, then we will have failed." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437917226> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437917226"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437917226> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437917226> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437917226> <http://schema.org/startDate> "2018-11-12T15:14:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437917226> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437917226> <http://schema.org/description> "I originally voted for this change, but I'm realizing that there is more going on here than I understood. Just some general thoughts from listening to the discussion:\r\n\r\nI understand us to have several target audiences (and none of us, I guess, are well representative of any of them :grin: ), but for this issue, one obvious division is between people going RDF->JSON and those going the other way (who, I would think, outnumber the former). Another is between context authors and people who use someone else's context (I would expect _many_ more of the latter, at least for some time to come).\r\n\r\nRDF->JSON folks will start out with the distinction between ` rdf:type` and literal type. They will seek to express it. This feature will be convenient to them for that purpose. But folks going the other way won't necessarily be expecting that kind of distinction, unless they happen to use languages with explicit syntax for value objects (not in the [JSON-LD sense](https://www.w3.org/TR/json-ld/#dfn-value-object), in the [more general computer science sense](https://en.wikipedia.org/wiki/Value_object)), and even then, RDF literal datatypes aren't the equivalent of general value objects. Of the folks going JSON->RDF, only the context-writers face this confusion.\r\n\r\nSome of the debate I'm hearing is about whether we do well for the people writing contexts to make the distinction very obvious via keywords (and thus hopefully avoid the confusions around type coercion which @azaroth42 has noticed and which I have also seen) or whether, for people who don't need this distinction in their own systems, we do ill to make them notice it for this one task. \r\n\r\nJSON, as I understand it, doesn't have a first-class notion like `rdf:type`. But JSON APIs, which are a prime use case for annotation with contexts that are _not_ someone else's, implicitly have a lot of `rdf:type`s. We can't easily offer this new distinction (`@type` vs. `@datatype`) as meeting the distinction between types as JSON alone knows them and types that you invent in your API, because JSON first-class types actually map onto the use of both RDF literal types _and_ JSON-LD machinery like the values for `@container` and so forth. (While I agree with @ericprud that the use of `@type` is confusing, I don't think it beats out the use of `@container` to govern (JSON) types and shapes for raw confusion-generating power.)\r\n\r\nI realize that we are well down the road on this question, but one principle I would offer is that whatever we do should, as much as possible, make the JSON first-class types map _more_ cleanly and simply. Ideally, this would be both in instances and contexts. It would be nice to be able to say that a context author should use features A and B to to map any JSON first-class type (whether it be a string, a number, or an object) and features X and Y to map API-specific types (which we secretly know are much more likely to become `rdf:type`s). I'm not a JSON maven at all, but I suspect that that's the closest thing there is for the JSON->RDF audience to the literal datatype/`rdf:type` distinction in RDF, and I'm sure we all agree that if we are going to get people less confused, it behooves us to try to meet them where most of them are." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437923756> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437923756"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437923756> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437923756> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437923756> <http://schema.org/startDate> "2018-11-12T15:32:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437923756> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437923756> <http://schema.org/description> "> To put it another way, if JSON-LD expands to expose Web developers to all of RDF's features, then we will have failed.\r\n\r\nTo me this seems a bit exaggerated. If JSON-LD _requires_ Web developers to be exposed to all of RDF's features, we have failed. But _allowing them access_ to those features in as comfortable a way as possible, without requiring devs to be aware of them unless/until necessary, seems like a (difficult but) appropriate goal." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437939882> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-437939882"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437939882> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437939882> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437939882> <http://schema.org/startDate> "2018-11-12T16:17:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437939882> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/437939882> <http://schema.org/description> "> To me this seems a bit exaggerated... seems like a (difficult but) appropriate goal.\r\n\r\nHistory is littered with groups of standardization bodies, composed of individuals that are incredibly smart and well meaning, that have ruined entire languages by thinking that they have kept the ergonomics of a language approachable.\r\n\r\nI think that you are underestimating how difficult it is to achieve the goal you stated once the language becomes a swiss army knife. JSON-LD was never intended to become a swiss army knife. :)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438008253> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438008253"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438008253> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438008253> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438008253> <http://schema.org/startDate> "2018-11-12T19:54:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438008253> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438008253> <http://schema.org/description> "Actually...before we merge this work, are we certain that the [4.12.1.3. Restrictions for contents of script elements](https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements) apply to [data blocks](https://www.w3.org/TR/html5/semantics-scripting.html#data-block)?\r\n\r\nThat \"restrictions\" section only seems to pertain to writing `<script>` content intended to be parsed by the browser's JS engine. For example, there's no reference from the \"data block\" examples to this \"restrictions\" section (and vice versa).\r\n\r\nThoughts?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438011082> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438011082"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438011082> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438011082> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438011082> <http://schema.org/startDate> "2018-11-12T20:04:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438011082> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438011082> <http://schema.org/description> "The restriction is on the contents of a script element, data blocks are a subset of all script elements. I don't follow how you infer that the section doesn't apply to data blocks. It would seem self-evident that the contents of data blocks need to have provisions for making sure that the content of the data block could be properly escaped.\r\n\r\nIn any case, these rules are necessary for properly processing JSON-LD scripts." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015329> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015329> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015329> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015329> <http://schema.org/startDate> "2018-11-12T20:19:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015329> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015329> <http://schema.org/description> "@gkellogg apologies...you're right of course... I'd forgotten I'd tested all that earlier.\r\n\r\nToss this into http://jsbin.com/ or similar to see how it breaks:\r\n```html\r\n  <script type=\"application/ld+json\" id=\"stuff\">\r\n  {\r\n    \"@context\": {\"@vocab\": \"http://example.com/\"},\r\n    \"widget\": \"var example = 'Consider this string: <!-- <script>';console.log(example);\"\r\n  }\r\n  </script>\r\n  <script>\r\n    <!-- whatever's below here won't run because what's above here is busted... T_T -->\r\n    console.log(stuff.textContent);\r\n  </script>\r\n```\r\n\r\nEscaping things as you've defined does fix it....sad...but true. 😩 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015626> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015626"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015626> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015626> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015626> <http://schema.org/startDate> "2018-11-12T20:20:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015626> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438015626> <http://schema.org/description> "...hence all the red highlighting added by the Markdown parser... 🤕 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438016944> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438016944"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438016944> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438016944> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438016944> <http://schema.org/startDate> "2018-11-12T20:24:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438016944> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438016944> <http://schema.org/description> "> In any case, these rules are necessary for properly processing JSON-LD scripts.\r\n\r\nThey're actually needed to not break the rest of the HTML and/or DOM tree afaict. So, it's an HTML parsing requirement that's \"infecting\" the JSON(-LD) (or JS or YAML or...) when embedded..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438449489> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438449489"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438449489> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438449489> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438449489> <http://schema.org/startDate> "2018-11-13T21:44:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438449489> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438449489> <http://schema.org/description> "So far we've mostly focused on `<base href=\"...\">` potentially being equivalent to `{\"@context\": {\"@base\": \"...\"}}` in the JSON-LD data document. However, if we *do* determine that `<base href=\"...\">` in the surrounding HTML does have an effect on the embedded JSON-LD's processing, then it's more likely consequence would be changing the processing around relative `@context` references (and possibly `@vocab`'s calculation--see #72).\r\n\r\nIn other words `<base>` isn't equivalent to `@base`. It would effect a lot more plumbing." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438450478> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438450478"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438450478> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438450478> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438450478> <http://schema.org/startDate> "2018-11-13T21:47:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438450478> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438450478> <http://schema.org/description> "I don't see how that follows. The document space is different from the vocabulary space. Base affects the interpretation of the document space, but not the vocabulary space." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438457605> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438457605"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438457605> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438457605> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438457605> <http://schema.org/startDate> "2018-11-13T22:10:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438457605> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438457605> <http://schema.org/description> "In light of #72, the vocabulary space _is_ the document space (at least its relative to it). But, I believe, that in both cases it would be relative to any existing `@base`, which may itself be a relative URL." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438463881> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438463881"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438463881> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438463881> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438463881> <http://schema.org/startDate> "2018-11-13T22:32:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438463881> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438463881> <http://schema.org/description> "\r\nSure, if via @vocab you set the default vocab space to the document space, then @base / <base> will affect the vocabulary. Perhaps I was misreading @BigBlueHat, but I interpreted the comment that it would /always/ affect the vocab space." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438614120> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438614120"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438614120> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438614120> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438614120> <http://schema.org/startDate> "2018-11-14T10:28:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438614120> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438614120> <http://schema.org/description> "I think one of the questions of @BigBlueHat is what would happen with the URL of a context file. Ie, what is the outcome of the following context if the url of the JSON-LD file is `http://ex.com`?\r\n\r\n```\r\n\"@context\" : [\r\n    {\r\n       \"@base\": \"http://www.foo.bar\"\r\n    },\r\n    \"foo.context\"\r\n]\r\n...\r\n```\r\n\r\nWill the linked context file be `http://www.foo.bar/foo.context` or `http://ex.com/foo.context`? Obviously, if it is the former, then a possible `<base>` would influence this, too (which does not shock me, b.t.w.).\r\n\r\n---\r\n\r\nAs an aside: looking through the syntax document I have found only _one_ example that uses an array of contexts like above (ex. 103) and I did not find any statement whether the context can be an absolute URI only or not. Actually, I have not found, through a search on `@context` and example of linking to an external context file. I think such examples should be added... and I am not sure about the formal spec on `@context` which does not seem to define that either...\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438768088> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438768088"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438768088> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438768088> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438768088> <http://schema.org/startDate> "2018-11-14T18:29:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438768088> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438768088> <http://schema.org/description> "@iherman from 3.2.1 of the [Context Processing Algorithm](https://www.w3.org/TR/json-ld11-api/#algorithm):\r\n\r\n> Set _context_ to the result of resolving _value_ against the base IRI which is established as specified in section [5.1 Establishing a Base URI](https://tools.ietf.org/html/rfc3986#section-5.1) of [RFC3986]. ...\r\n\r\nSo, the linked context file would be `http://www.foo.bar/foo.context`.\r\n\r\nThis does have implications for setting base from HTML envelope, but that already exists for setting `@base` from an in-scope context. In such circumstances, authors should be encouraged to use absolute URLs for loading remote context files.\r\n\r\nIf we were to address this, it would require keeping separate notions of \"base\", and passing them into the context processing algorithm." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438808246> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438808246"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438808246> .
<https://api.github.com/users/danbri> <http://schema.org/accountId> "danbri" .
<https://api.github.com/users/danbri> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/170265?v=4" .
<https://api.github.com/users/danbri> <http://schema.org/url> "https://github.com/danbri"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/danbri> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438808246> <http://schema.org/creator> <https://api.github.com/users/danbri> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438808246> <http://schema.org/startDate> "2018-11-14T20:33:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438808246> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438808246> <http://schema.org/description> "Slight aside, but do we all agree that URLs inside HTML inside JSON-LD inside HTML script sections are never going to get expanded with base URIs from the outer HTML?\r\n\r\ni.e. no variations on this will expand 'here/' to a full URI:\r\n\r\n```<script type=\"application/ld+json\">\r\n{\r\n  \"@context\": \"http://schema.org/\",\r\n  \"@type\": \"Person\",\r\n  \"description\": \"Click <a href='here/'>here</a> for bio.\"\r\n}\r\n</script>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438813691> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438813691"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438813691> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438813691> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438813691> <http://schema.org/startDate> "2018-11-14T20:51:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438813691> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438813691> <http://schema.org/description> "@danbri unless that `description` is injected into the same page housing the `<script type=\"application/ld+json\">`...in which case it's been \"moved\" I suppose. As a \"dumb\" value of a key, I'd not expect a JSON(-LD) processor to do anything of that sort." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438824427> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-438824427"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438824427> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438824427> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438824427> <http://schema.org/startDate> "2018-11-14T21:26:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438824427> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438824427> <http://schema.org/description> "@danbri In this case, the content is just a string, and I don't know anywhere that strings are processed as HTML, even if an rdf:HTML literal; the processing happens in RDF/XML or RDFa to perform the exclusive canonicalization when generating the literal; JSON-LD has no such rules.\r\n\r\nAny other use as @BigBlueHat suggests is out of scope. Of course, if someone takes on the task of imbuing more intelligence for embedded JSON-LD (as suggested by @hadleybeeman in the [TAG response](https://github.com/w3ctag/design-reviews/issues/312#issuecomment-434689623)), that might be another issue. In that case, it would likely be similar to any other but of JavaScript injecting HTML, which I presume would case the relative URL to be evaluated against the document base." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438888682> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-438888682"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438888682> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438888682> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438888682> <http://schema.org/startDate> "2018-11-15T02:03:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438888682> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438888682> <http://schema.org/description> "@azaroth42 I didn't see a way to significantly improve 4.2.1; perhaps the other changes do the job." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438923977> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-438923977"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438923977> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438923977> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438923977> <http://schema.org/startDate> "2018-11-15T05:37:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438923977> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/438923977> <http://schema.org/description> "@gkellogg I like what I see, but I have two more proposals\r\n\r\n- I think it may be worth exchanging the order for 3.4 and 3.5. The new 3.5 could then very explicitly refer to the fact that `@type` is used to set a type on value objects and node objects, something that will have been described in the previous section. I would think that 3.5 should then have two subsections: one for node objects (which is the current content, essentially) and one for value objects, describing the usage of datatypes. These two sections together might then settle the original issue.\r\n- You use the term map objects, which is fine, but this may just indicate that the term `@container` to denote all these objects may not be the right term and may be another source of confusion. We should keep the `@container` for lists or sets (and, of course, we should allow the old usage for, eg, language maps) but we should have a separate `@map` to define, well, the map objects. We should discuss that separately, though." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439129578> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-439129578"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439129578> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439129578> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439129578> <http://schema.org/startDate> "2018-11-15T17:47:14Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439129578> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439129578> <http://schema.org/description> "@iherman Your first point is well taken, and I'll make the suggested change.\r\n\r\nRegarding changing `@container` to `@map` for new map objects, I disagree. The mold was cast when we used `@container` for language- and data-maps. Also, it would add additional steps to the context and expansion algorithms, to no great effect. I thought we had already discussed this on a call." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439136778> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-439136778"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439136778> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439136778> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439136778> <http://schema.org/startDate> "2018-11-15T18:09:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439136778> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439136778> <http://schema.org/description> "@iherman I made  your suggested changes to \"Use of JSON Objects\" and \"Specifying the Type\"." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439291362> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439291362"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439291362> .
<https://api.github.com/users/ericprud> <http://schema.org/accountId> "ericprud" .
<https://api.github.com/users/ericprud> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/573478?v=4" .
<https://api.github.com/users/ericprud> <http://schema.org/url> "https://github.com/ericprud"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ericprud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439291362> <http://schema.org/creator> <https://api.github.com/users/ericprud> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439291362> <http://schema.org/startDate> "2018-11-16T06:02:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439291362> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439291362> <http://schema.org/description> "> > To me this seems a bit exaggerated... seems like a (difficult but) appropriate goal.\r\n> \r\n> History is littered with groups of standardization bodies, composed of individuals that are incredibly smart and well meaning, that have ruined entire languages by thinking that they have kept the ergonomics of a language approachable.\r\n\r\nI don't see this as an RDF issue. As a JSON user, I find it confusing that the same keyword is used for structure types and scalar types. Structure type says that an object gets a `{ \"type\": \"schema:Person\" }` property and scalar type says that `\"2018-11-16T05:53:47.015Z\"` must match [`xsd:dateTime`](https://www.w3.org/TR/xmlschema-2/#dateTime). They're distinct in every format and programming language (except partially in Java where native scalar types have structure type homonyms, but that's even more confusing)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439319136> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-439319136"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439319136> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439319136> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439319136> <http://schema.org/startDate> "2018-11-16T08:31:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439319136> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439319136> <http://schema.org/description> "@gkellogg thanks for the changes you made. Two more comments (just for nagging you:-)\r\n\r\n- I think adding an example for ~datatype~, ehem, value object type, would be good as well. Just to have this on an equal footing, so to way, with the node object type; it currently reads as some sort of a side remark.\r\n- the second note in that section repeats information that is now part of the core text, and should be removed.\r\n\r\nThx!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439414212> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/94#issuecomment-439414212"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/94> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439414212> .
<https://api.github.com/users/ticketron> <http://schema.org/accountId> "ticketron" .
<https://api.github.com/users/ticketron> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/45087710?v=4" .
<https://api.github.com/users/ticketron> <http://schema.org/url> "https://github.com/ticketron"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ticketron> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439414212> <http://schema.org/creator> <https://api.github.com/users/ticketron> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439414212> <http://schema.org/startDate> "2018-11-16T14:43:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439414212> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439414212> <http://schema.org/description> "I figured someone from the netherlands would close htis question, as that\nis the country who non stop tries to access our sites.\n\nOn Fri, Nov 16, 2018 at 6:34 AM Ivan Herman <notifications@github.com>\nwrote:\n\n> Closed #94 <https://github.com/w3c/json-ld-syntax/issues/94>.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/w3c/json-ld-syntax/issues/94#event-1971390357>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Aq_73ucmdGTVpJc1dw01-NuZPz6V-dh-ks5uvsz8gaJpZM4YlKeN>\n> .\n>\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439479079> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/23#issuecomment-439479079"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/23> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439479079> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439479079> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439479079> <http://schema.org/startDate> "2018-11-16T18:11:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439479079> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439479079> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-16-json-ld#section3).\r\n\r\n- `RESOLVED:  merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n3. What is ‘base’ for embedded json-ld?<br/>\r\nIvan Herman: link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/23\">https://github.com/w3c/json-ld-syntax/issues/23</a><br/>\r\nIvan Herman: Link of the PR: <a href=\"https://github.com/w3c/json-ld-syntax/pull/93\">https://github.com/w3c/json-ld-syntax/pull/93</a><br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/pull/68\">https://github.com/w3c/json-ld-syntax/pull/68</a><br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-api/pull/50\">https://github.com/w3c/json-ld-api/pull/50</a><br/>\r\nBenjamin Young: we discussed that one at tpac<br/>\r\n… we sent it in for TAG review, and they basically widened the scope<br/>\r\nGregg Kellogg: there are 2 open PRs<br/>\r\n… 1) basic support for json-ld in html<br/>\r\n… 2) PR-93 adds text to specifically add text to add html as base<br/>\r\n… in the API spec, it’s PR-50<br/>\r\nAdam Soroka: quick question, what are we expected to do with their comments?<br/>\r\n… shall we respond?<br/>\r\nIvan Herman: what they propose is interesting but beyond our charter<br/>\r\n… this would elevate json-ld<br/>\r\n… but yeah beyond our charter<br/>\r\n… I would say this is something the CG has to pick up<br/>\r\n… and we can cross the bridge at some time, but if this is realistic from a manpower perspective I dont know<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329\">https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329</a><br/>\r\nIvan Herman: regarding the PR-93, there is some stuff about having XML<br/>\r\nBenjamin Young: the thing I just linked shows how script tags affect html parsing<br/>\r\n… it’s syntactically correct json-ld<br/>\r\nGregg Kellogg: what I did in the PR-68 I call out specifics on how to handle those blocks if the media type is application/json<br/>\r\n… I think I’ve taken in the specifics on how content of script tags has to be handled and adjusted in for our needs<br/>\r\n… we asked specific questions to TAG, got an answer but they kinda got a bit over enthusiastic<br/>\r\n… out of this needs to come something that improves web platform<br/>\r\nBenjamin Young: the HTML comments stuff as really bothered me since I’ve read it<br/>\r\n… but it seems to primarily affect only HTML parsing<br/>\r\n… question is how much of this we need to have in the spec<br/>\r\n… json-ld in script tags vs “raw” json-ld<br/>\r\n… both have totally different escaping rules and what not.. and none of that has something to do with html base<br/>\r\nIvan Herman: for the comment storing, the whole section is a normative thing<br/>\r\n… I have the impression this is an HTML problem<br/>\r\n… which we should certainly mention, but maybe not as part of a normative section<br/>\r\nBenjamin Young: HTML5 spec level text about parsing &lt;script> tags <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements\">https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements</a><br/>\r\nIvan Herman: we should officially answer to the TAG and will officially add to the standard what they said about base<br/>\r\n… and that we try to get the CG involved<br/>\r\nAdam Soroka: +1<br/>\r\nGregg Kellogg: comments in html and escaping.. it depends on the encoding<br/>\r\n… we don’t need to give guidance on how to handle this<br/>\r\nIvan Herman: <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html#ex-103-embedding-json-ld-in-html-with-comments\">https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html#ex-103-embedding-json-ld-in-html-with-comments</a><br/>\r\nIvan Herman: it has to be valid json-ld<br/>\r\n… that’s invalid json<br/>\r\nGregg Kellogg: that’s something you see quite often<br/>\r\nBenjamin Young: ivan: because <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements\">https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements</a><br/>\r\nGregg Kellogg: comments are often used just to make sure there are no other issues embedded in the script elements that would cause any issues<br/>\r\nBenjamin Young: I did quite some digging on that issue<br/>\r\n… the DOM parsing is only concerned with what’s inside the tags<br/>\r\n… it’s just treated as raw string<br/>\r\n… if there’s something inside the json-ld an html parser would choke on<br/>\r\n… the json-ld would need to be treated in such a way such that an html parser wouldn’t choke on it<br/>\r\nPierre-Antoine Champin: one crazy idea by looking at the json-ld embedded in html comments: you could add a js comment in front of the html comment, making it valid javascript<br/>\r\n… it could become technically correct<br/>\r\nBenjamin Young: sadly it wouldn’t<br/>\r\n… it would continue being parsed<br/>\r\n… we could make it our own parsing space<br/>\r\n… the question is how far the parser gets before it finds the ending script tag<br/>\r\nGregg Kellogg: the json-ld would not be allowed to contain anything that could be interpreted as html and/or html comments<br/>\r\n… not really feasible and also not helping our mission<br/>\r\n… I’ve outlined multiple approaches to tackle this<br/>\r\n… there are only a few cases where json-ld would contain things that resemble comments<br/>\r\nHarold Solbrig: why is this an json-ld issue but not a javascript issue?<br/>\r\nGregg Kellogg: [explains why it isn’t]<br/>\r\nGregg Kellogg: it did some test cases for this, exploring corner cases we know of<br/>\r\n… I don’t know how to move forward unless addressing at least some of the stuff from the PR<br/>\r\nGregg Kellogg: it describes script tags and data blocks are a subset<br/>\r\nBenjamin Young: what’s breaking it, is the potential of one to too early close the script tag<br/>\r\n… so this would need somehow being taken care of<br/>\r\n… the risk is, the json-ld could contain content that jacks up the html it’s contained in<br/>\r\nIvan Herman: is it so horrible to say, if I put json-ld in a script tag I’m supposed to escape anything that html would need to have escaped<br/>\r\n… thus a json-ld parser would have to do the unescaping<br/>\r\n… but you are in HTML regardless.. so<br/>\r\nGregg Kellogg: for someone who’s actually looking at the source, those entities become rather annoying<br/>\r\nIvan Herman: realistically, I don’t know how often this would happen<br/>\r\nBenjamin Young: the escaping issue is very similar of putting json-ld inside a text env.<br/>\r\nIvan Herman: I think it’s perfectly reasonable to accept both PRs, close the issue<br/>\r\n… and open a new issue on the specific problem<br/>\r\nGregg Kellogg: it’s a editor’s draft not a working draft<br/>\r\nIvan Herman: we would open a issue right away<br/>\r\nBenjamin Young: I would only +1 this, if we add a big red AT RISK disclaimer<br/>\r\nIvan Herman: a lot of very important things are pending for now<br/>\r\n… I think it’s an edge case<br/>\r\nAdam Soroka: I don’t think we should use a phrase like “AT RISK” but more something along the lines of “will be part of the final spec but might undergo some changes”<br/>\r\nIvan Herman: we cannot commit ourselves to having always consistent editor’s drafts<br/>\r\nBenjamin Young: I’m not sure we have reached consensus on all the things contained<br/>\r\nGregg Kellogg: I cannot work on other open issues<br/>\r\nPierre-Antoine Champin: what about a parameter on the media type hinting at having to do unescaping? (like application/ld+json;escaped=html)<br/>\r\nProposed resolution: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized (Benjamin Young)<br/>\r\nBenjamin Young: +1<br/>\r\nAdam Soroka: +1<br/>\r\nIvan Herman: what does “that” mean?<br/>\r\nGregg Kellogg: +1<br/>\r\nBenjamin Young: I don’t want to have stuff merged without reaching consensus<br/>\r\n… but I could live with having it marked as being “at risk” or similar<br/>\r\nIvan Herman: putting things that are already done “at risk” would be going backwards<br/>\r\n… opening a new issue that highlights things that are still being discussed would be ok<br/>\r\n… having the feeling that ~90% are done<br/>\r\nAdam Soroka: I have to generally agree with ivan<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: it seems for me very unlikely that we would stop talking about it<br/>\r\nDavid Newbury: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nBenjamin Young: I’m fine with merging those<br/>\r\nSimon Steyskal: +1<br/>\r\nResolution #2: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized<br/>\r\nPierre-Antoine Champin: +1<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493362> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-439493362"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/68> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493362> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493362> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493362> <http://schema.org/startDate> "2018-11-16T19:01:27Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493362> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493362> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-16-json-ld#section3).\r\n\r\n- `Resolution #2: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized `\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nWhat is ‘base’ for embedded json-ld?<br/>\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/23\">https://github.com/w3c/json-ld-syntax/issues/23</a></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> Link of the PR: <a href=\"https://github.com/w3c/json-ld-syntax/pull/93\">https://github.com/w3c/json-ld-syntax/pull/93</a></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> <a href=\"https://github.com/w3c/json-ld-syntax/pull/68\">https://github.com/w3c/json-ld-syntax/pull/68</a></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Gregg Kellogg:</em> <a href=\"https://github.com/w3c/json-ld-api/pull/50\">https://github.com/w3c/json-ld-api/pull/50</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Benjamin Young:</strong> we discussed that one at tpac<br />\r\n… we sent it in for TAG review, and they basically widened the scope</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> there are 2 open PRs<br />\r\n… 1) basic support for json-ld in html<br />\r\n… 2) PR-93 adds text to specifically add text to add html as base<br />\r\n… in the API spec, it’s PR-50</p>\r\n\r\n<p><strong>Adam Soroka:</strong> quick question, what are we expected to do with their comments?<br />\r\n… shall we respond?</p>\r\n\r\n<p><strong>Ivan Herman:</strong> what they propose is interesting but beyond our charter<br />\r\n… this would elevate json-ld<br />\r\n… but yeah beyond our charter<br />\r\n… I would say this is something the CG has to pick up<br />\r\n… and we can cross the bridge at some time, but if this is realistic from a manpower perspective I dont know</p>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> <a href=\"https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329\">https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> regarding the PR-93, there is some stuff about having XML</p>\r\n\r\n<p><strong>Benjamin Young:</strong> the thing I just linked shows how script tags affect html parsing<br />\r\n… it’s syntactically correct json-ld</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> what I did in the PR-68 I call out specifics on how to handle those blocks if the media type is application/json<br />\r\n… I think I’ve taken in the specifics on how content of script tags has to be handled and adjusted in for our needs<br />\r\n… we asked specific questions to TAG, got an answer but they kinda got a bit over enthusiastic<br />\r\n… out of this needs to come something that improves web platform</p>\r\n\r\n<p><strong>Benjamin Young:</strong> the HTML comments stuff as really bothered me since I’ve read it<br />\r\n… but it seems to primarily affect only HTML parsing<br />\r\n… question is how much of this we need to have in the spec<br />\r\n… json-ld in script tags vs “raw” json-ld<br />\r\n… both have totally different escaping rules and what not.. and none of that has something to do with html base</p>\r\n\r\n<p><strong>Ivan Herman:</strong> for the comment storing, the whole section is a normative thing<br />\r\n… I have the impression this is an HTML problem<br />\r\n… which we should certainly mention, but maybe not as part of a normative section</p>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> HTML5 spec level text about parsing <code class=\"highlighter-rouge\">&lt;script&gt;</code> tags <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements\">https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> we should officially answer to the TAG and will officially add to the standard what they said about base<br />\r\n… and that we try to get the CG involved</p>\r\n\r\n<blockquote>\r\n  <p><em>Adam Soroka:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Gregg Kellogg:</strong> comments in html and escaping.. it depends on the encoding<br />\r\n… we don’t need to give guidance on how to handle this</p>\r\n\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html#ex-103-embedding-json-ld-in-html-with-comments\">https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html#ex-103-embedding-json-ld-in-html-with-comments</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> it has to be valid json-ld<br />\r\n… that’s invalid json</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> that’s something you see quite often</p>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> ivan: because <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements\">https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Gregg Kellogg:</strong> comments are often used just to make sure there are no other issues embedded in the script elements that would cause any issues</p>\r\n\r\n<p><strong>Benjamin Young:</strong> I did quite some digging on that issue<br />\r\n… the DOM parsing is only concerned with what’s inside the tags<br />\r\n… it’s just treated as raw string<br />\r\n… if there’s something inside the json-ld an html parser would choke on<br />\r\n… the json-ld would need to be treated in such a way such that an html parser wouldn’t choke on it</p>\r\n\r\n<p><strong>Pierre-Antoine Champin:</strong> one crazy idea by looking at the json-ld embedded in html comments: you could add a js comment in front of the html comment, making it valid javascript<br />\r\n… it could become technically correct</p>\r\n\r\n<p><strong>Benjamin Young:</strong> sadly it wouldn’t<br />\r\n… it would continue being parsed<br />\r\n… we could make it our own parsing space<br />\r\n… the question is how far the parser gets before it finds the ending script tag</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> the json-ld would not be allowed to contain anything that could be interpreted as html and/or html comments<br />\r\n… not really feasible and also not helping our mission<br />\r\n… I’ve outlined multiple approaches to tackle this<br />\r\n… there are only a few cases where json-ld would contain things that resemble comments</p>\r\n\r\n<p><strong>Harold Solbrig:</strong> why is this an json-ld issue but not a javascript issue?</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> [explains why it isn’t]</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> it did some test cases for this, exploring corner cases we know of<br />\r\n… I don’t know how to move forward unless addressing at least some of the stuff from the PR</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> it describes script tags and data blocks are a subset</p>\r\n\r\n<p><strong>Benjamin Young:</strong> what’s breaking it, is the potential of one to too early close the script tag<br />\r\n… so this would need somehow being taken care of<br />\r\n… the risk is, the json-ld could contain content that jacks up the html it’s contained in</p>\r\n\r\n<p><strong>Ivan Herman:</strong> is it so horrible to say, if I put json-ld in a script tag I’m supposed to escape anything that html would need to have escaped<br />\r\n… thus a json-ld parser would have to do the unescaping<br />\r\n… but you are in HTML regardless.. so</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> for someone who’s actually looking at the source, those entities become rather annoying</p>\r\n\r\n<p><strong>Ivan Herman:</strong> realistically, I don’t know how often this would happen</p>\r\n\r\n<p><strong>Benjamin Young:</strong> the escaping issue is very similar of putting json-ld inside a text env.</p>\r\n\r\n<p><strong>Ivan Herman:</strong> I think it’s perfectly reasonable to accept both PRs, close the issue<br />\r\n… and open a new issue on the specific problem</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> it’s a editor’s draft not a working draft</p>\r\n\r\n<p><strong>Ivan Herman:</strong> we would open a issue right away</p>\r\n\r\n<p><strong>Benjamin Young:</strong> I would only +1 this, if we add a big red AT RISK disclaimer</p>\r\n\r\n<p><strong>Ivan Herman:</strong> a lot of very important things are pending for now<br />\r\n… I think it’s an edge case</p>\r\n\r\n<p><strong>Adam Soroka:</strong> I don’t think we should use a phrase like “AT RISK” but more something along the lines of “will be part of the final spec but might undergo some changes”</p>\r\n\r\n<p><strong>Ivan Herman:</strong> we cannot commit ourselves to having always consistent editor’s drafts</p>\r\n\r\n<p><strong>Benjamin Young:</strong> I’m not sure we have reached consensus on all the things contained</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> I cannot work on other open issues</p>\r\n\r\n<p><strong>Pierre-Antoine Champin:</strong> what about a parameter on the media type hinting at having to do unescaping? (like <code class=\"highlighter-rouge\">application/ld+json;escaped=html</code>)</p>\r\n\r\n<blockquote class=\"proposed_resolution\">\r\n  <p><strong>Proposed resolution: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized</strong> <em>(Benjamin Young)</em></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> +1</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Adam Soroka:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> what does “that” mean?</p>\r\n\r\n<blockquote>\r\n  <p><em>Gregg Kellogg:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Benjamin Young:</strong> I don’t want to have stuff merged without reaching consensus<br />\r\n… but I could live with having it marked as being “at risk” or similar</p>\r\n\r\n<p><strong>Ivan Herman:</strong> putting things that are already done “at risk” would be going backwards<br />\r\n… opening a new issue that highlights things that are still being discussed would be ok<br />\r\n… having the feeling that ~90% are done</p>\r\n\r\n<p><strong>Adam Soroka:</strong> I have to generally agree with ivan</p>\r\n\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Adam Soroka:</strong> it seems for me very unlikely that we would stop talking about it</p>\r\n\r\n<blockquote>\r\n  <p><em>David Newbury:</em> +1</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Harold Solbrig:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Benjamin Young:</strong> I’m fine with merging those</p>\r\n\r\n<blockquote>\r\n  <p><em>Simon Steyskal:</em> +1</p>\r\n</blockquote>\r\n\r\n<blockquote id=\"resolution2\" class=\"resolution\">\r\n  <p><strong><em>Resolution #2: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized</em></strong></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Pierre-Antoine Champin:</em> +1</p>\r\n</blockquote>\r\n\r\n\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493486> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/93#issuecomment-439493486"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/93> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493486> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493486> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493486> <http://schema.org/startDate> "2018-11-16T19:01:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493486> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439493486> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-16-json-ld#section3).\r\n\r\n- `Resolution #2: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized `\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nWhat is ‘base’ for embedded json-ld?<br/>\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/23\">https://github.com/w3c/json-ld-syntax/issues/23</a></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> Link of the PR: <a href=\"https://github.com/w3c/json-ld-syntax/pull/93\">https://github.com/w3c/json-ld-syntax/pull/93</a></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> <a href=\"https://github.com/w3c/json-ld-syntax/pull/68\">https://github.com/w3c/json-ld-syntax/pull/68</a></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Gregg Kellogg:</em> <a href=\"https://github.com/w3c/json-ld-api/pull/50\">https://github.com/w3c/json-ld-api/pull/50</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Benjamin Young:</strong> we discussed that one at tpac<br />\r\n… we sent it in for TAG review, and they basically widened the scope</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> there are 2 open PRs<br />\r\n… 1) basic support for json-ld in html<br />\r\n… 2) PR-93 adds text to specifically add text to add html as base<br />\r\n… in the API spec, it’s PR-50</p>\r\n\r\n<p><strong>Adam Soroka:</strong> quick question, what are we expected to do with their comments?<br />\r\n… shall we respond?</p>\r\n\r\n<p><strong>Ivan Herman:</strong> what they propose is interesting but beyond our charter<br />\r\n… this would elevate json-ld<br />\r\n… but yeah beyond our charter<br />\r\n… I would say this is something the CG has to pick up<br />\r\n… and we can cross the bridge at some time, but if this is realistic from a manpower perspective I dont know</p>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> <a href=\"https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329\">https://github.com/w3c/json-ld-syntax/pull/68#issuecomment-438015329</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> regarding the PR-93, there is some stuff about having XML</p>\r\n\r\n<p><strong>Benjamin Young:</strong> the thing I just linked shows how script tags affect html parsing<br />\r\n… it’s syntactically correct json-ld</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> what I did in the PR-68 I call out specifics on how to handle those blocks if the media type is application/json<br />\r\n… I think I’ve taken in the specifics on how content of script tags has to be handled and adjusted in for our needs<br />\r\n… we asked specific questions to TAG, got an answer but they kinda got a bit over enthusiastic<br />\r\n… out of this needs to come something that improves web platform</p>\r\n\r\n<p><strong>Benjamin Young:</strong> the HTML comments stuff as really bothered me since I’ve read it<br />\r\n… but it seems to primarily affect only HTML parsing<br />\r\n… question is how much of this we need to have in the spec<br />\r\n… json-ld in script tags vs “raw” json-ld<br />\r\n… both have totally different escaping rules and what not.. and none of that has something to do with html base</p>\r\n\r\n<p><strong>Ivan Herman:</strong> for the comment storing, the whole section is a normative thing<br />\r\n… I have the impression this is an HTML problem<br />\r\n… which we should certainly mention, but maybe not as part of a normative section</p>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> HTML5 spec level text about parsing <code class=\"highlighter-rouge\">&lt;script&gt;</code> tags <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements\">https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> we should officially answer to the TAG and will officially add to the standard what they said about base<br />\r\n… and that we try to get the CG involved</p>\r\n\r\n<blockquote>\r\n  <p><em>Adam Soroka:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Gregg Kellogg:</strong> comments in html and escaping.. it depends on the encoding<br />\r\n… we don’t need to give guidance on how to handle this</p>\r\n\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html#ex-103-embedding-json-ld-in-html-with-comments\">https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/68.html#ex-103-embedding-json-ld-in-html-with-comments</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> it has to be valid json-ld<br />\r\n… that’s invalid json</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> that’s something you see quite often</p>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> ivan: because <a href=\"https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements\">https://www.w3.org/TR/html5/semantics-scripting.html#restrictions-for-contents-of-script-elements</a></p>\r\n</blockquote>\r\n\r\n<p><strong>Gregg Kellogg:</strong> comments are often used just to make sure there are no other issues embedded in the script elements that would cause any issues</p>\r\n\r\n<p><strong>Benjamin Young:</strong> I did quite some digging on that issue<br />\r\n… the DOM parsing is only concerned with what’s inside the tags<br />\r\n… it’s just treated as raw string<br />\r\n… if there’s something inside the json-ld an html parser would choke on<br />\r\n… the json-ld would need to be treated in such a way such that an html parser wouldn’t choke on it</p>\r\n\r\n<p><strong>Pierre-Antoine Champin:</strong> one crazy idea by looking at the json-ld embedded in html comments: you could add a js comment in front of the html comment, making it valid javascript<br />\r\n… it could become technically correct</p>\r\n\r\n<p><strong>Benjamin Young:</strong> sadly it wouldn’t<br />\r\n… it would continue being parsed<br />\r\n… we could make it our own parsing space<br />\r\n… the question is how far the parser gets before it finds the ending script tag</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> the json-ld would not be allowed to contain anything that could be interpreted as html and/or html comments<br />\r\n… not really feasible and also not helping our mission<br />\r\n… I’ve outlined multiple approaches to tackle this<br />\r\n… there are only a few cases where json-ld would contain things that resemble comments</p>\r\n\r\n<p><strong>Harold Solbrig:</strong> why is this an json-ld issue but not a javascript issue?</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> [explains why it isn’t]</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> it did some test cases for this, exploring corner cases we know of<br />\r\n… I don’t know how to move forward unless addressing at least some of the stuff from the PR</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> it describes script tags and data blocks are a subset</p>\r\n\r\n<p><strong>Benjamin Young:</strong> what’s breaking it, is the potential of one to too early close the script tag<br />\r\n… so this would need somehow being taken care of<br />\r\n… the risk is, the json-ld could contain content that jacks up the html it’s contained in</p>\r\n\r\n<p><strong>Ivan Herman:</strong> is it so horrible to say, if I put json-ld in a script tag I’m supposed to escape anything that html would need to have escaped<br />\r\n… thus a json-ld parser would have to do the unescaping<br />\r\n… but you are in HTML regardless.. so</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> for someone who’s actually looking at the source, those entities become rather annoying</p>\r\n\r\n<p><strong>Ivan Herman:</strong> realistically, I don’t know how often this would happen</p>\r\n\r\n<p><strong>Benjamin Young:</strong> the escaping issue is very similar of putting json-ld inside a text env.</p>\r\n\r\n<p><strong>Ivan Herman:</strong> I think it’s perfectly reasonable to accept both PRs, close the issue<br />\r\n… and open a new issue on the specific problem</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> it’s a editor’s draft not a working draft</p>\r\n\r\n<p><strong>Ivan Herman:</strong> we would open a issue right away</p>\r\n\r\n<p><strong>Benjamin Young:</strong> I would only +1 this, if we add a big red AT RISK disclaimer</p>\r\n\r\n<p><strong>Ivan Herman:</strong> a lot of very important things are pending for now<br />\r\n… I think it’s an edge case</p>\r\n\r\n<p><strong>Adam Soroka:</strong> I don’t think we should use a phrase like “AT RISK” but more something along the lines of “will be part of the final spec but might undergo some changes”</p>\r\n\r\n<p><strong>Ivan Herman:</strong> we cannot commit ourselves to having always consistent editor’s drafts</p>\r\n\r\n<p><strong>Benjamin Young:</strong> I’m not sure we have reached consensus on all the things contained</p>\r\n\r\n<p><strong>Gregg Kellogg:</strong> I cannot work on other open issues</p>\r\n\r\n<p><strong>Pierre-Antoine Champin:</strong> what about a parameter on the media type hinting at having to do unescaping? (like <code class=\"highlighter-rouge\">application/ld+json;escaped=html</code>)</p>\r\n\r\n<blockquote class=\"proposed_resolution\">\r\n  <p><strong>Proposed resolution: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized</strong> <em>(Benjamin Young)</em></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Benjamin Young:</em> +1</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Adam Soroka:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Ivan Herman:</strong> what does “that” mean?</p>\r\n\r\n<blockquote>\r\n  <p><em>Gregg Kellogg:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Benjamin Young:</strong> I don’t want to have stuff merged without reaching consensus<br />\r\n… but I could live with having it marked as being “at risk” or similar</p>\r\n\r\n<p><strong>Ivan Herman:</strong> putting things that are already done “at risk” would be going backwards<br />\r\n… opening a new issue that highlights things that are still being discussed would be ok<br />\r\n… having the feeling that ~90% are done</p>\r\n\r\n<p><strong>Adam Soroka:</strong> I have to generally agree with ivan</p>\r\n\r\n<blockquote>\r\n  <p><em>Ivan Herman:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Adam Soroka:</strong> it seems for me very unlikely that we would stop talking about it</p>\r\n\r\n<blockquote>\r\n  <p><em>David Newbury:</em> +1</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Harold Solbrig:</em> +1</p>\r\n</blockquote>\r\n\r\n<p><strong>Benjamin Young:</strong> I’m fine with merging those</p>\r\n\r\n<blockquote>\r\n  <p><em>Simon Steyskal:</em> +1</p>\r\n</blockquote>\r\n\r\n<blockquote id=\"resolution2\" class=\"resolution\">\r\n  <p><strong><em>Resolution #2: merge open HTML related PRs #93 and #68 and #50 after adding “At Risk” (or similar terminology) to present that things are not finalized</em></strong></p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n  <p><em>Pierre-Antoine Champin:</em> +1</p>\r\n</blockquote>\r\n\r\n\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439579147> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-439579147"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439579147> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439579147> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439579147> <http://schema.org/startDate> "2018-11-17T02:07:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439579147> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439579147> <http://schema.org/description> "> I think adding an example for datatype, ehem, value object type, would be good as well. Just to have this on an equal footing, so to way, with the node object type; it currently reads as some sort of a side remark.\r\n\r\nThere are examples in the referenced sections, I don't see a point in repeating them, particularly as the section is mostly about typed objects. The \"Specifying the Type\" section is really about typing node objects, to make it clear, I discuss typing value objects and reference \"Typed Values\" and \"Type Coercion\". Do you really think we need to repeat that detail here?\r\n\r\nThe reason \"Specifying the Type\" is in the \"Basic Concepts\" section, as this is considered a basic concept, while typed values are considered advanced. Otherwise, we'd need a separate section \"Describing Nodes\". But, there's really not enough there do do that, IMHO.\r\n\r\n> the second note in that section repeats information that is now part of the core text, and should be removed.\r\n\r\nI'll pare out some of the repeated detail, but the original purpose of the note is that this describes basic features. Instead, I'll reference the \"Advanced Concepts\" section." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439583637> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439583637"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439583637> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439583637> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439583637> <http://schema.org/startDate> "2018-11-17T03:18:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439583637> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439583637> <http://schema.org/description> "@ericprud wrote:\r\n> structure types and scalar types .... must match xsd:dateTime ... except partially in Java where native scalar types have structure type homonyms\r\n\r\nYeah, man... this proves my point. You're way more knowledgeable than 99.99% of the people out there that use JSON. I mean, let's be honest, you're easily like top 25 on the planet when it comes to understanding all of this stuff. :)\r\n\r\nI don't expect 99.99% of JSON developers to need to use `@value` and `@type` together. In fact, if there WAS a `@datatype`, I'd expect them to accidentally use it when trying to set a structure type way more often than correctly use it by pairing it with `@value`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439596062> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/92#issuecomment-439596062"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/92> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439596062> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439596062> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439596062> <http://schema.org/startDate> "2018-11-17T07:31:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439596062> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439596062> <http://schema.org/description> "@gkellogg first of all, I do not want to micromanage. As far as I am concerned this PR can be merged right away and it may be indeed enough to answer to #77. You are free to take or drop any of my comments.\r\n\r\nThat being said, I guess the main reason of my comment is this remark:\r\n\r\n> The reason \"Specifying the Type\" is in the \"Basic Concepts\" section, as this is considered a basic concept, while typed values are considered advanced. Otherwise, we'd need a separate section \"Describing Nodes\". \r\n\r\nI do not feel that typing a node is a basic concept whereas typing a value is an advanced. To be more precise, I do not see why these two should be different. You are right that section 4.2 is already there, in particular 4.2.1, and I understand that you do not want to repeat things. My feeling is, however, that 4.2 and 3.5 should be on equal footing; I do not have a strong feeling whether 3.5 should be moved into the 'advanced' category, or 4.2. (or possibly 4.2.1. only) should be put into the basic section, but I would think these two should be somehow kept together.\r\n\r\nAgain, regardless from this, 👍 from me to merge at your discretion. \r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439619543> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439619543"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439619543> .
<https://api.github.com/users/ericprud> <http://schema.org/accountId> "ericprud" .
<https://api.github.com/users/ericprud> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/573478?v=4" .
<https://api.github.com/users/ericprud> <http://schema.org/url> "https://github.com/ericprud"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ericprud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439619543> <http://schema.org/creator> <https://api.github.com/users/ericprud> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439619543> <http://schema.org/startDate> "2018-11-17T14:06:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439619543> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439619543> <http://schema.org/description> "Flatterer!\r\n\r\nEvery JSON user knows the difference between an object `{ \"year\": 2018, \"month\": 11, \"day\": 16 }` and and a scalar `\"2018-11-16\"`. At issue is whether they find it more or less confusing if we conflate the keywords describing them." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439623659> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439623659"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439623659> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439623659> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439623659> <http://schema.org/startDate> "2018-11-17T15:05:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439623659> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439623659> <http://schema.org/description> "I'm a little troubled by how much comment on this ticket aims to speak for \"JSON users\" or \"JSON developers\". That seems a bit \"low-res\" to me. There are many different overlapping categories of JSON users. Someone trying to stick a stanza of SEO metadata in their home-hosted blog isn't the same as someone trying to consume a semantically-enabled JSON API isn't the same as @danbri's folks isn't the same as someone trying to write a context for their long-established API, and none of these activities look all that much like [WoT](https://www.w3.org/WoT/WG/). \r\n\r\nIt may be that I worry too much about this sort of \"representational\" issue, but I'd appreciate it if, for this issue, we could all be as precise as possible when we discuss user needs or knowledge and specify as much as possible beyond \"JSON users\" or \"JSON devs\"..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439626058> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439626058"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439626058> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439626058> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439626058> <http://schema.org/startDate> "2018-11-17T15:40:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439626058> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439626058> <http://schema.org/description> "> be as precise as possible when we discuss user needs or knowledge and specify as much as possible beyond \"JSON users\" or \"JSON devs\"\r\n\r\nMy perspective is one of lowest common denominator and the biggest user community that we have right now, and that's schema.org. I always think about how a feature is going to impact them, and if there is a non-trivial possibility that it will be negative, then it's a strike against the feature in my mind. Everyone else is secondary because they usually have the motivation and background to dig in and try to really understand at depth. I'm not worried about the people at the \"expert\" level of the spectrum, because they will be able to figure it out. I do worry about the folks in the middle, who know just enough to really get them into trouble... especially if there is a large selection of footguns to pick from that are just barely under the surface of JSON-LD.\r\n\r\n... but all this is going to be vague and theoretical until we have a specific feature to talk about." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439633348> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439633348"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439633348> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439633348> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439633348> <http://schema.org/startDate> "2018-11-17T17:29:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439633348> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439633348> <http://schema.org/description> "I understood us to be talking about the feature discussed in this ticket (`@datatype`) and I admit I don't see how it affects many people using schema.org. Most of them are using a provided context, not writing their own. The (many fewer) who are incorporating schema.org vocab into some other context certainly fall out of your \"lowest common denominator\" category, do they not?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635118> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439635118"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635118> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635118> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635118> <http://schema.org/startDate> "2018-11-17T17:52:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635118> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635118> <http://schema.org/description> "> The (many fewer) who are incorporating schema.org vocab into some other context certainly fall out of your \"lowest common denominator\" category, do they not?\r\n\r\nYes, which means we're debating a feature that the vast majority of people using JSON-LD (that I think the language is primarily designed for) will never see or touch. It's solving a problem that they don't have... and introducing it may have the unintended consequence that @BigBlueHat raised above -- higher cognitive load when learning the language AND misuse of `@datatype`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635487> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439635487"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635487> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635487> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635487> <http://schema.org/startDate> "2018-11-17T17:57:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635487> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439635487> <http://schema.org/description> "The vast majority of people using JSON-LD will never write their own context, but I'm sure you agree that we don't want to put _any feature that is useful mostly for context-authors_ out of scope for discussion.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439637365> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439637365"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439637365> .
<https://api.github.com/users/msporny> <http://schema.org/accountId> "msporny" .
<https://api.github.com/users/msporny> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/108611?v=4" .
<https://api.github.com/users/msporny> <http://schema.org/url> "https://github.com/msporny"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/msporny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439637365> <http://schema.org/creator> <https://api.github.com/users/msporny> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439637365> <http://schema.org/startDate> "2018-11-17T18:24:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439637365> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439637365> <http://schema.org/description> "> I'm sure you agree that we don't want to put any feature that is useful mostly for context-authors out of scope for discussion.\r\n\r\nYes, agreed... especially if that feature helps make things simpler for the vast majority of people authoring JSON-LD content (even if they don't really know that that's what they're doing)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439639969> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439639969"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439639969> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439639969> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439639969> <http://schema.org/startDate> "2018-11-17T19:04:41Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439639969> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439639969> <http://schema.org/description> "I think further discussion is somewhat muted by my interpretation of the recent WG discussion and the content of PR #92. Although the [original discussion](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-09-json-ld#section3-1) was about introducing `@datatype` (something which is steeped with many issues of backwards compatibility), the [direction of the group](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-09-json-ld#resolution2) was to improve the discussion on uses of `@type` to help clarify when it can be used, and that it does have different uses:\r\n\r\n<blockquote>\r\n<p><strong>Rob Sanderson:</strong> 1.7 is fine. 4.2.1 needs more clarity<br>\r\n… it is not a technical issue it is a learning/implementation issue<br>\r\n… 4.2 is the problem<br>\r\n… splitting out @type into how to use for Classes and for Literals</p><p><strong>Gregg Kellogg:</strong> what about further definition of other keywords</p><p><strong>Rob Sanderson:</strong> a section in 9 about keywords and gives full definition.</p><p><strong>Benjamin Young:</strong> more than happy to help rewording. confusion between Value instead of Literal.</p><p><strong>Ivan Herman:</strong> we should make is more explicit that there is very clear distinction between classes and literals in JSON-ld</p><blockquote class=\"proposed_resolution\">\r\n  <p><strong>Proposed resolution: bigbluehat &amp; gkellogg to come up with rewording for 4.2, and new section for 9 for keywords, for review as to whether this will solve confusion without technical change</strong> <em>(Rob Sanderson)</em></p>\r\n</blockquote>\r\n</blockquote>\r\n\r\nAfter a couple of small changes, I intend to merge that PR without closing the issue, and we'll see where we are after that.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439640478> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439640478"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439640478> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439640478> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439640478> <http://schema.org/startDate> "2018-11-17T19:13:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439640478> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439640478> <http://schema.org/description> "Regarding what constituency JSON-LD serves, in my opinion, the landscape has changed markedly since the original recommendation was made: JSON-LD is a fundamental part of the web, and we need to consider the experience of those communities. JSON-LD is also seeing substantial new deployment opportunities, where the appeal is definitely that it is JSON, but there is a stronger need to use rich semantic expressiveness (@ajs6f noted WoT, but also Publishing, and Verifiable Claims).\r\n\r\nI believe that it's necessary to express pretty most all of RDF in JSON-LD, and the specs need to make this clear. In fact, since adding support for lists of lists, we can pretty much do that. I don't think that the Syntax document should be weighed down with these bits, but they do require introduction, examples, and the normative grammar to describe them.\r\n\r\nJSON-LD has been an enormous success, and we don't want to screw that up, but we also have a somewhat different value-proposition now, and groups formerly foreign to the idea have, in fact, become more educated (witness the SEO community's work in adopting JSON-LD and semantics). Of course there remain JSON constituents that are not (yet) on board with JSON-LD, but [recent discussions at the TAG](https://github.com/w3ctag/design-reviews/issues/312#issuecomment-434689623) indicate a broad appreciation for what JSON-LD may be able to do for the web platform." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439643348> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-439643348"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439643348> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439643348> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439643348> <http://schema.org/startDate> "2018-11-17T19:56:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439643348> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/439643348> <http://schema.org/description> "Pulled #92 which addresses this issue. Requires WG action to close the issue." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442635442> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/96#issuecomment-442635442"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442635442> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442635442> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442635442> <http://schema.org/startDate> "2018-11-28T22:49:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442635442> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442635442> <http://schema.org/description> "I can support this, but we need to have some rule for dealing with comment inside of strings that could cause DOM problems, specifically `<!--`, `-->`, `<script` and `</script`. Using either or both of the current escape sequences and character references will keep the content legal JSON, but it will not be interpreted properly unless unescaping or resolving character references is performed.\r\n\r\nSurrounding script contents with XML comments is a common practice, but may be obsolete now with HTML5, along with CDATA." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442637315> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97#issuecomment-442637315"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442637315> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442637315> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442637315> <http://schema.org/startDate> "2018-11-28T22:56:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442637315> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442637315> <http://schema.org/description> "This will require a corresponding change in the API doc." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442752424> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97#issuecomment-442752424"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442752424> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442752424> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442752424> <http://schema.org/startDate> "2018-11-29T08:46:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442752424> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442752424> <http://schema.org/description> "I am fine with this. Thanks to @BigBlueHat and @gkellogg!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442896360> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-442896360"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442896360> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442896360> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442896360> <http://schema.org/startDate> "2018-11-29T16:22:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442896360> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442896360> <http://schema.org/description> "Hello!\r\n\r\nAn idea was proposed at the meeting at TPAC that this issue could be addressed by simply ordering \"extension\" contexts first and \"core\" contexts last in an `@context` array. We've considered it and it doesn't work for a number of reasons.\r\n\r\nFirst, there's the aesthetics of it (people would prefer a \"core\" `@context` to come first in the array) but there are also more serious technical problems. Here's one example:\r\n\r\nhttp://tinyurl.com/ycrgkeyy\r\n\r\nHere a `SpecificCredential` with a scoped context for the `issuer` property overrides the base definition for `issuer` with the extension -- causing evil/confusion. The `issuer` property MUST NOT be overridden, yet it is.\r\n\r\nI think it would probably be best to create a \"sealed\"/\"frozen\" `@context` feature and, while we're at it, make it use the more \"expected\" order of precedence (for this feature). I think this feature is really essential for JSON-LD adoption as \"the way\" to do extensions in specs for open world data models." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442901010> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442901010"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442901010> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442901010> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442901010> <http://schema.org/startDate> "2018-11-29T16:33:07Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442901010> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442901010> <http://schema.org/description> "By the way, the exact example given above does not work in the playground, the term `someTermToClear` is still defined in the embedded `record`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442902185> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442902185"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442902185> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442902185> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442902185> <http://schema.org/startDate> "2018-11-29T16:35:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442902185> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442902185> <http://schema.org/description> "I'm probably missing the point, but can you not unset `someTermToClear` in the inner context? The author of the data there needn't know about that, just the context author..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903332> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442903332"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903332> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903332> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903332> <http://schema.org/startDate> "2018-11-29T16:38:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903332> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903332> <http://schema.org/description> "@ajs6f,\r\n\r\nThe `@context` author doesn't know anything about the \"enveloping\" structure. The point is to be able to reuse contexts when embedding data -- without breaking abstractions (having to rewrite/change those contexts such that JSON-LD processing becomes required)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903941> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442903941"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903941> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903941> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903941> <http://schema.org/startDate> "2018-11-29T16:40:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903941> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442903941> <http://schema.org/description> "@dlongley Ok, makes sense. How would this play with \"sealed\" contexts? " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442904581> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442904581"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442904581> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442904581> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442904581> <http://schema.org/startDate> "2018-11-29T16:41:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442904581> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442904581> <http://schema.org/description> "@ajs6f,\r\n\r\nYes, this is related to \"sealed\" contexts. I think one of the properties of sealed contexts should be to enable term overrides using embedded contexts. It may be that an embedded `@context` can simply override sealed terms (because it's explicitly in the data) but it may be better if this is only permitted if the sealed context explicitly uses a scoped term that clears term definitions in order to enable it. Does that make sense?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906009> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442906009"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906009> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906009> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906009> <http://schema.org/startDate> "2018-11-29T16:45:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906009> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906009> <http://schema.org/description> "The first part does, IIUC: contexts in the instance would override contexts from elsewhere, even if they don't \"want\" to be overridden, because the instance author is the ultimate authority.\r\nI'm not quite sure I follow the second point. \"a scoped term that clears term definitions\"-- that means a new keyword that would drop the definitions? That keyword would appear in the (outer) sealed context?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906473> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442906473"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906473> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906473> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906473> <http://schema.org/startDate> "2018-11-29T16:46:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906473> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442906473> <http://schema.org/description> "For \"sealed\" contexts, suppose a context array like this:\r\n\r\n`[<sealed context 1>, <sealed context 2>, <maybe sealed context 3>]`\r\n\r\nIn this case, a JSON-LD processor should ignore any \"overriding\" term definitions provided in context 2 and 3, *always* keeping the definition from context 1. This much is clear. But what happens in the case of an embedded context?\r\n\r\n```\r\n{\r\n  \"@context\": \"[<sealed context 1>, <sealed context 2>, <maybe sealed context 3>]\",\r\n  \"record\": {\r\n    \"@context\": {\r\n      \"i_am_embedded\": \"ex:foo\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHere, I would expect us to need additional/different behavior. And it may turn out that it would be nice to have this different behavior whether a context is sealed or not. Essentially, being able to say \"treat this document as an embedded one that knows nothing about its parent information\" is valuable. It may be, that for sealed contexts, we will need to \"enable\" this to happen ... or it could happen automatically, but that seems more dangerous." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442911710> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442911710"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442911710> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442911710> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442911710> <http://schema.org/startDate> "2018-11-29T17:00:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442911710> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442911710> <http://schema.org/description> "@ajs6f,\r\n\r\nI can imagine core W3C data model specs defining some kind of JSON tree that looks like this:\r\n\r\n```js\r\n{\r\n  \"@context\": \"some_sealed_context\",\r\n  \"service\": {\r\n    \"id\": \"ex:fooService\",\r\n    \"endpoint\": \"https://example.com\"\r\n  }\r\n}\r\n```\r\n\r\nNow, if an instance author does this:\r\n\r\n```js\r\n{\r\n  \"@context\": \"some_sealed_context\",\r\n  \"service\": {\r\n    \"@context\": {\r\n      \"endpoint\": \"ex:haha_tricked_you\",\r\n      \"realEndpoint\": \"ex:endpoint\"\r\n    },\r\n    \"id\": \"ex:fooService\",\r\n    \"endpoint\": \"https://junk.example.com\",\r\n    \"realEndpoint\": \"https://example.com\"\r\n  }\r\n}\r\n```\r\n\r\nAll the software that performs JSON-LD processing will use a different endpoint from the software that does not. I don't think we can assume that an embedded context can always override terms. I think we may want to be able to say \"here's where you can override terms/here's where terms *must* be overridden\". It's a more clean way of calling out where extensions are expected to be or where \"embedded documents\" can more freely override (anything)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442912482> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442912482"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442912482> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442912482> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442912482> <http://schema.org/startDate> "2018-11-29T17:02:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442912482> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442912482> <http://schema.org/description> "@ajs6f,\r\n\r\n> I'm not quite sure I follow the second point. \"a scoped term that clears term definitions\"-- that means a new keyword that would drop the definitions? That keyword would appear in the (outer) sealed context?\r\n\r\nYes, it would look something like this:\r\n\r\n```js\r\n{\r\n  \"@context\": {\r\n    \"extensionsGoHere\": {\"@id\": \"ex:extension\", \"@context\": null}\r\n  }\r\n  \"extensionsGoHere\": {\r\n    \"@context\": \"whatever\"\r\n  }\r\n}\r\n```\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442980376> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442980376"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442980376> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442980376> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442980376> <http://schema.org/startDate> "2018-11-29T20:24:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442980376> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442980376> <http://schema.org/description> "It seems like we might be talking about a few things here:\r\n\r\n1. the relationship between sealed and unsealed contexts,\r\n2. the relationship between retrieved and instance-embedded contexts,\r\n3. and the relationship between inner and outer contexts, whatever their source.\r\n\r\nSo there's a lot of ways those things could interact (I kind of want to write down a combinatorial table here, but I'm not sure what I would be computing!)\r\n\r\nI'd like to try and simplify the discussion (just for a bit). Perhaps we can leave aside sealing (I realize that we can only do that for a little while) and think about unsealed contexts only and the latter two relationships. In a world without sealed contexts (just for now! :) ) what would this feature look like? Would it enable instance contexts to easily blank out the computed context and \"start afresh\"? I'm just trying to get my head around a small piece of this before we reintroduce sealing, because sealing is also hypothetical for the moment and I'd like to minimize the hypotheticals in my brain. It's not much larger than Pooh's.  :dizzy_face:\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442982388> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-442982388"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442982388> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442982388> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442982388> <http://schema.org/startDate> "2018-11-29T20:31:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442982388> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/442982388> <http://schema.org/description> "@ajs6f,\r\n\r\nI agree that we're talking about a number of different things and how they interact. :)\r\n\r\n> Perhaps we can leave aside sealing (I realize that we can only do that for a little while) and think about unsealed contexts only and the latter two relationships. In a world without sealed contexts (just for now! :) ) what would this feature look like? Would it enable instance contexts to easily blank out the computed context and \"start afresh\"?\r\n\r\nYes, it would enable instance contexts to blank out the computed context and \"start afresh\". In particular, it would do so for certain terms (i.e. any objects under the term \"x\" would have a \"fresh start\"). The use case for this would be to ensure that nothing \"leaks in\" from the original instance context into whatever is embedded within a certain term, without undefining the term itself. It enables encapsulation and, because of that, I would expect it to often be used in conjunction with `\"@container\": \"@graph\"`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443010265> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-443010265"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443010265> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443010265> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443010265> <http://schema.org/startDate> "2018-11-29T22:02:56Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443010265> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443010265> <http://schema.org/description> "@dlongley thanks for that example! Scoped contexts do introduce a whole new layer of complication/confusion/unexpectedness... That said, I'm not sure the current array ordering is that unintuitive/unexpected.\r\n\r\nDevelopers (especially general Web developers) are very familiar with \"cascading\" thanks to CSS. Things currently work this way with JSON-LD `@context` values.\r\n\r\nIt's also the way [JavaScript (ECMAScript)'s `Object.assign()`](https://www.ecma-international.org/ecma-262/6.0/#sec-object.assign) works--last one wins:\r\n```js\r\na = {'test': 'ing'};\r\nb = {'test': 'er'};\r\nconsole.log(Object.assign({}, a, b));\r\n// Object { test: \"er\" }\r\n```\r\n\r\nAnd, it's also the way ES6's [Object Rest/Spread Properties](https://github.com/tc39/proposal-object-rest-spread#object-restspread-properties-for-ecmascript) work:\r\n```js\r\na = {'test': 'ing'};\r\nb = {'test': 'er'};\r\nconsole.log({...a, ...b});\r\n```\r\n\r\nConsequently, I'd find flipping the order more confusing and intuitive--and out of keeping with the surrounding code one would write to create the local context. So, I'd be 👎 on flipping that order--especially between JSON-LD minor point releases. Sorry.\r\n\r\nI'll leave the continued discussion around sealed contexts--especially as it relates to the scoped context example you gave for another time. 😃 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443015995> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/99#issuecomment-443015995"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443015995> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443015995> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443015995> <http://schema.org/startDate> "2018-11-29T22:22:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443015995> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443015995> <http://schema.org/description> "Discovered this while discussing #20. It also relates to #85 and #33." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016663> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/99#issuecomment-443016663"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016663> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016663> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016663> <http://schema.org/startDate> "2018-11-29T22:24:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016663> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016663> <http://schema.org/description> "So...that same example above works fine in @gkellogg's distiller (per https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431095137), and I also found a note about there being editorial changes needed/forth coming: https://github.com/w3c/json-ld-syntax/issues/85#issuecomment-431179849\r\n\r\nPerhaps the ones I've just described were already in @gkellogg's brain--or something better more like. 😁 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016777> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/99#issuecomment-443016777"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016777> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016777> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016777> <http://schema.org/startDate> "2018-11-29T22:25:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016777> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443016777> <http://schema.org/description> "The playground is out of date, we changed the text so that any use of `@version` set's it (it can only be 1.1). Formerly, if you set `@version`, it needed to be in the first context encountered, but that led to numerous issues. Your proposed rewording would be consistent with the previous definition. The wording is correct, but the playground (and presumably jsonld.js) needs to be updated." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443021634> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/99#issuecomment-443021634"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/99> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443021634> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443021634> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443021634> <http://schema.org/startDate> "2018-11-29T22:42:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443021634> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443021634> <http://schema.org/description> "jsonld.js needs to be fixed." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022265> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-443022265"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022265> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022265> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022265> <http://schema.org/startDate> "2018-11-29T22:45:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022265> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022265> <http://schema.org/description> "> So, I'd be -1 on flipping that order--especially between JSON-LD minor point releases. Sorry.\r\n\r\nTo be clear, I wasn't suggesting we flip the order for term definitions, just that sealed contexts should apply left to right (\"first sealed context wins\"). I think it would be odd for them to apply right to left (\"last sealed context wins\")." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022527> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443022527"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022527> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022527> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022527> <http://schema.org/startDate> "2018-11-29T22:46:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022527> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443022527> <http://schema.org/description> "Setting aside the sealed/frozen nature, setting either `@context` or a given term to `null` clears it out. What should happen for frozen contexts or terms defined in a frozen context?\r\n\r\nArguably, setting `@context` to `null` should clear out any frozen contexts, as it's not modifying them and is a rather specific directive.\r\n\r\nHow to clear a sealed/frozen term definition? This needs discussion, if we want to allow it at all." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023348> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443023348"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023348> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023348> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023348> <http://schema.org/startDate> "2018-11-29T22:49:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023348> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023348> <http://schema.org/description> "@gkellogg,\r\n\r\n> setting either @context or a given term to null clears it out.\r\n\r\nThe example given in the OP does not clear out all the terms on the playground. Are you suggesting that it should and it's a problem with the playground (and that this is already spec'd)?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023468> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443023468"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023468> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023468> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023468> <http://schema.org/startDate> "2018-11-29T22:50:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023468> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443023468> <http://schema.org/description> "@ajs6f said:\r\n\r\n>  I think one of the properties of sealed contexts should be to enable term overrides using embedded contexts.\r\n\r\nSounds like adding a fair bit of complication. Is this a real-world concern?\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443024043> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443024043"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443024043> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443024043> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443024043> <http://schema.org/startDate> "2018-11-29T22:52:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443024043> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443024043> <http://schema.org/description> "Step 3.1 of the [Context Processing Algorithm](https://www.w3.org/TR/json-ld11-api/#algorithm) indicates that `null` starts everything afresh:\r\n\r\n> If _context_ is `null`, set result to a newly-initialized _active context_ and continue with the next _context_.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443025192> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443025192"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443025192> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443025192> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443025192> <http://schema.org/startDate> "2018-11-29T22:57:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443025192> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443025192> <http://schema.org/description> "@gkellogg,\r\n\r\n> Step 3.1 of the Context Processing Algorithm indicates that null starts everything afresh:\r\n\r\nYes, that's true, but what of scoped contexts?\r\n\r\n> @ajs6f said: \r\n>> I think one of the properties of sealed contexts should be to enable term overrides using embedded contexts.\r\n\r\n> Sounds like adding a fair bit of complication. Is this a real-world concern?\r\n\r\nI have a real world use case of embedding sub documents (which are treated as sub graphs) that should not have to concern themselves at all with the sealed context of the container:\r\n\r\n```js\r\n{\r\n  \"@context\": \"some outer sealed stuff\",\r\n  \"type\": \"SomeOperationToAddARecordToABlockchain\",\r\n  ...,\r\n  \"record\": {\r\n    \"@context\": \"some inner stuff that doesn't care/know about outer stuff\",\r\n    ...\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443030776> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443030776"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443030776> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443030776> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443030776> <http://schema.org/startDate> "2018-11-29T23:20:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443030776> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443030776> <http://schema.org/description> "> Yes, that's true, but what of scoped contexts?\r\n\r\nThe processing should be the same, as it's treated as if the `\"@context\": null` appears inline. Certainly worth a test case.\r\n\r\n> I have a real world use case of embedding sub documents (which are treated as sub graphs) that should not have to concern themselves at all with the sealed context of the container\r\n\r\nPerhaps it should do the following:\r\n\r\n```js\r\n{\r\n  \"@context\": \"some outer sealed stuff\",\r\n  \"type\": \"SomeOperationToAddARecordToABlockchain\",\r\n  ...,\r\n  \"record\": {\r\n    \"@context\": [null, \"some inner stuff that doesn't care/know about outer stuff\"],\r\n    ...\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443031589> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/95#issuecomment-443031589"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/95> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443031589> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443031589> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443031589> <http://schema.org/startDate> "2018-11-29T23:23:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443031589> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443031589> <http://schema.org/description> "Build is broken, as it depends on changes in PR #97. Rerunning it after that is merged and doing a rebase should fix this build." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443032712> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443032712"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443032712> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443032712> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443032712> <http://schema.org/startDate> "2018-11-29T23:28:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443032712> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443032712> <http://schema.org/description> ">    @ajs6f said:\r\n>     I think one of the properties of sealed contexts should be to enable\r\n>     term overrides using embedded contexts.\r\n\r\nJust for the record, I did _not_ say this, @dlongley did.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443059211> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443059211"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443059211> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443059211> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443059211> <http://schema.org/startDate> "2018-11-30T01:37:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443059211> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443059211> <http://schema.org/description> "@dlongley I think part of the difficulty for me here is that the gesture of blanking out a term or the whole context is something sealing is supposed to disallow, right?\r\n\r\nSo we've got at least three categories: the original sealed context, contexts that are not allowed to alter it, and contexts that can. Is it possible to partition the last two on a scope boundary, or on the boundary between retrieved and embedded contexts? Or must we think about a new and fresh way to signify a \"able to defeat sealing\" context? (Also, we might want a name for that category, if only for discussion.)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443074976> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443074976"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443074976> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443074976> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443074976> <http://schema.org/startDate> "2018-11-30T03:04:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443074976> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443074976> <http://schema.org/description> "@gkellogg,\r\n\r\n> Perhaps it should do the following:\r\n\r\nSee below -- I think this needs to be done from within the sealed context.\r\n\r\n@ajs6f,\r\n\r\n> I think part of the difficulty for me here is that the gesture of blanking out a term or the whole context is something sealing is supposed to disallow, right?\r\n\r\nYes. I think it should only be permitted if the sealing context allows for it by clearing the context.\r\n\r\n> So we've got at least three categories: the original sealed context, contexts that are not allowed to alter it, and contexts that can. Is it possible to partition the last two on a scope boundary, or on the boundary between retrieved and embedded contexts? Or must we think about a new and fresh way to signify a \"able to defeat sealing\" context? (Also, we might want a name for that category, if only for discussion.)\r\n\r\nI think the sealing context has to enable \"defeat\" in targeted areas by clearing the context for those terms via scoped contexts (or using some kind of `@container`, but I think simply clearing the context in a scoped way would be better)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443125624> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/20#issuecomment-443125624"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/20> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443125624> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443125624> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443125624> <http://schema.org/startDate> "2018-11-30T08:14:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443125624> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443125624> <http://schema.org/description> "Yep, I guess where we did make a mistake at TPAC is to think only the way context works in 1.0. I am a bit neutral about the problem of whether one type of ordering is more natural than the other; I can see the points of @BigBlueHat. However, as the example of @dlongley shows, the problem of scoped contexts shows the limits of this approach anyway, and makes the problem about right order possibly irrelevant... :-( \r\n\r\nI.e., we may be back to the drawing board on that one." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443182908> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443182908"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443182908> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443182908> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443182908> <http://schema.org/startDate> "2018-11-30T11:59:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443182908> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443182908> <http://schema.org/description> "I may not understand the whole issue... but it looks to me as if we wanted to have some `@sealed` flag with a boolean value, and which can be used for the context as a whole as well as for a specific terms: This means that: \r\n\r\n\r\n| \"@context\" | \"term\" | Can \"term\" be redefined? |\r\n|---------|------|-------------------------|\r\n|  `\"@sealed\": true` | `\"@sealed\": true` | no |\r\n| `\"@sealed\": true` | `\"@sealed\": false` | yes |\r\n| `\"@sealed\": false` | `\"@sealed\": true` | no |\r\n| `\"@sealed\": false` | `\"@sealed\": false` | yes |\r\n\r\nObviously, there are defaults: if the context is sealed then, by default, all terms are sealed and if context is not sealed then, by default, non of the terms are sealed.\r\n\r\nCan this solve the use cases, @dlongley? " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443241467> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443241467"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443241467> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443241467> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443241467> <http://schema.org/startDate> "2018-11-30T15:36:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443241467> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443241467> <http://schema.org/description> "@iherman,\r\n\r\n> Can this solve the use cases, @dlongley?\r\n\r\nI think the table is good and makes sense and would solve some use cases. I think it would also at least partially solve the use case here, but perhaps not entirely. Let me work through it below.\r\n\r\nSo, a use case that we have is that we want a sealed context to be able to say that the term `foo` can be redefined, but only for its own scope (i.e. its own values and any more deeply nested in its tree). More specifically, we'd like to wipe out all term definitions within the scope of `foo`, but let's stick with the redefinition first.\r\n\r\nSo, this would be insufficient:\r\n\r\n```js\r\n{\r\n  \"@context\": [\r\n    {\r\n      \"@sealed\": true,\r\n      \"bar\": \"ex:bar\",\r\n      \"foo\": {\"@id\": \"ex:foo\", \"@sealed\": false}\r\n    },\r\n    {\r\n      \"foo\": \"ex:not_foo\"\r\n    }\r\n  }],\r\n  \"foo\": \"this should be 'ex:foo' for this use case, but it is not\"\r\n}\r\n```\r\n\r\nBecause it allows `foo` to be redefined globally (not scoped). Obviously, the above could be fine for some other use case. But here, to be clear, we only want `foo` to change like this:\r\n\r\n```js\r\n{\r\n  \"@context\": \"...\",\r\n  \"foo\": { /* `foo` should always be 'ex:foo' here */\r\n    \"foo\": \"this can be 'ex:not_foo', no problem\"\r\n  }\r\n}\r\n```\r\n\r\nSo, you can see that we'd need something more than just saying `\"@sealed\": false` in the term definition in order to create the proper restriction. We'd need to scope it. So perhaps this could be achieved like this:\r\n\r\n```js\r\n{\r\n  \"@context\": [\r\n    {\r\n      \"@sealed\": true,\r\n      \"bar\": \"ex:bar\",\r\n      \"foo\": {\r\n        \"@id\": \"ex:foo\",\r\n        \"@context\": {\r\n          \"ex:foo\": {\"@id\": \"ex:foo\", \"@sealed\": false}\r\n        }\r\n      }\r\n    }],\r\n  \"foo\": { /* yay, this would still be `ex:foo` */\r\n    \"@context\": {\r\n      \"foo\": \"ex:not_foo\"\r\n    },\r\n    \"foo\": \"this can be 'ex:not_foo', no problem\"\r\n  }\r\n}\r\n```\r\n\r\nBut that could get quite verbose for many terms. Of course, this could be possibility avoided like this:\r\n\r\n```js\r\n{\r\n  \"@context\": [\r\n    {\r\n      \"@sealed\": true,\r\n      \"bar\": \"ex:bar\",\r\n      \"foo\": {\r\n        \"@id\": \"ex:foo\",\r\n        \"@context\": {\"@sealed\": false}\r\n      }\r\n    }],\r\n  \"foo\": { /* yay, this is still 'ex:foo' */\r\n    \"@context\": {\r\n      \"foo\": \"ex:not_foo\"\r\n    },\r\n    \"foo\": \"this can be 'ex:not_foo', no problem\"\r\n  }\r\n}\r\n```\r\n\r\nThis would not achieve the goals of this particular issue, which is to automatically clear all term definitions within the \"scope\" of \"foo\", but it would \"unseal\" all term definitions to allow for them to be redefined. I believe this also enables us to say that an \"embedded\" context does NOT automatically unseal anything, rather, the sealed context MUST explicitly use scoped contexts to say where any terms can be unsealed. So a big +1 to this for dealing with the sealing/unsealing issue on its own. \r\n\r\nNow, regarding this particular issue, per @gkellogg's [comment](https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443030776) it seems to me that clearing all term definitions should actually work per the spec today, but does not in the implementations. So we may just have a bug. We may need further spec clarification (not sure?). But fixing the bug would ensure that this works too:\r\n\r\n```js\r\n{\r\n  \"@context\": [\r\n    {\r\n      \"@sealed\": true,\r\n      \"bar\": \"ex:bar\",\r\n      \"foo\": {\"@id\": \"ex:foo\", \"@context\": null}\r\n    }\r\n  ],\r\n  \"foo\": { /* yay, this is \"ex:foo\" */\r\n    \"@context\": {\r\n      \"foo\": \"ex:not_foo\"\r\n    },\r\n    \"foo\": \"this can be 'ex:not_foo', no problem\"\r\n  }\r\n}\r\n```\r\n\r\nI think the above with `\"@context\": null` would need to unseal everything automatically ... unless we required this in order to do that:\r\n\r\n```js\r\n{\r\n  \"@context\": [\r\n    {\r\n      \"@sealed\": true,\r\n      \"bar\": \"ex:bar\",\r\n      \"foo\": {\"@id\": \"ex:foo\", \"@context\": [null, {\"@sealed\": false}]}\r\n    }\r\n  ],\r\n  \"foo\": { /* yay, this is \"ex:foo\" */\r\n    \"@context\": {\r\n      \"foo\": \"ex:not_foo\"\r\n    },\r\n    \"foo\": \"this can be 'ex:not_foo', no problem\"\r\n  }\r\n}\r\n```\r\n\r\nWhat do you think?\r\n\r\nI think if we can support some variant of the above we'll cover all the cases." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443300369> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97#issuecomment-443300369"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443300369> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443300369> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443300369> <http://schema.org/startDate> "2018-11-30T18:45:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443300369> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443300369> <http://schema.org/description> "@BigBlueHat can we pull this separate from w3c/json-ld-api#51? We need to resolve the dataset description, but handling entity escapes in script tags seems to be a bigger knot that I'd rather not hole the rest of this PR request up for, and maybe should be handled differently in w3c/json-ld-api#51 as a separate issue as well." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408005> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/96#issuecomment-443408005"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408005> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408005> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408005> <http://schema.org/startDate> "2018-12-01T07:54:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408005> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408005> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-30-json-ld#section7-2).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nJSON-LD script elements (data blocks) MUST only contain valid JSON<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/96\">https://github.com/w3c/json-ld-syntax/issues/96</a><br/>\r\nBenjamin Young: issue related to <a href=\"https://github.com/w3c/json-ld-syntax/pull/97\">https://github.com/w3c/json-ld-syntax/pull/97</a><br/>\r\nGregg Kellogg: what I pushed up there addresses the different aspects of the HTML script content.<br/>\r\n… HTML provides 2 mechanisms: specific backslash escapes in HTML comments, or HTML entities<br/>\r\n… Benjamin proposed to remove the comments, to keep it valid JSON, consistently with the declared content-type.<br/>\r\nBenjamin Young: it’s similar to injecting HTML tags in a &lt;textarea>, without breaking the textarea.<br/>\r\nRob Sanderson: to be sure i understand, the issue is if you have: <script>{\"label\": \"<!--\"}</script> ?<br/>\r\n… No, thankfully, but I see the point<br/>\r\n… And then the pain of double and quadruple escaping … Thanks for the explanation. Result = :(<br/>\r\nGregg Kellogg: I want to be able to copy-paste the content of the script tag into, e.g., the JSON-LD playground.<br/>\r\nIvan Herman: the schema.org pages is full of examples, but none of them has “pathological” examples re. content tags<br/>\r\n… we could try to test their tools and see if they break.<br/>\r\n… We could decide this is an author’s problem. JSON-LD in HTML is optional.<br/>\r\n… If authors want to do that, they should know they are not on neutral ground,<br/>\r\nRob Sanderson: Related to what ivan said, and I agree with his opinion … Can we ask DanBri to find out what about this in current schema.org usage? There’s doubtless instances of this sort of thing (<!-- etc) in the wild, that they might be able to find (or not) with relative ease?<br/>\r\n… and take precautions.<br/>\r\n… Someone must have tried to put <script> in a json-ld block in some attempt to mess with Google :)<br/>\r\nGregg Kellogg: my tool will handle the comments; I don’t think they will render the entity escaping correctly<br/>\r\n… We has to check with the structured data tools, and talk with danbri about it.<br/>\r\nBenjamin Young: we need to be sure that the authors understand what happens<br/>\r\n… and why JSON-LD from an HTML script tag does not behave differently from JSON-LD from a file<br/>\r\nPierre-Antoine Champin: I’m not sure about a detail: what if I put an entity in a script tag?<br/>\r\n… from JS code, do I get the entity? or is it unescaped?<br/>\r\nIvan Herman: \"name\" : [\"my name is <in this>\", \"&amp;lt;lll&gt;\"] works in the structural testing tool<br/>\r\nIvan Herman: both these thinks work as expected<br/>\r\n… both the “<” and the “<” appear as “<”<br/>\r\nBenjamin Young: that’s what you see, but the raw result may be different<br/>\r\nGregg Kellogg: A better test might be ”name”: [“</script>”]<br/>\r\nIvan Herman: exploring how <a href=\"https://search.google.com/structured-data/testing-tool\">https://search.google.com/structured-data/testing-tool</a> handles things<br/>\r\nGregg Kellogg: I think you’re right that they’re unescaping them<br/>\r\n… but these are such rare cases<br/>\r\nRob Sanderson: +1 to “It hurts when I do this” … “Don’t do that then”<br/>\r\nGregg Kellogg: maybe we get rid of this whole notation, by saying you MUST only embed text which can be extracted via the HTML DOM<br/>\r\nBenjamin Young: doesn’t that place the constraint on all of JSON-LD that it could never contain </script><br/>\r\nGregg Kellogg: yes. that<br/>\r\nDavid I. Lehn: i’d like to note you are furthering the difficulty in writing obfuscated json-ld.<br/>\r\nRob Sanderson: Potentially also removing an attack vector, security wise<br/>\r\n… But not HTML in JSON(-LD or not) in HTML<br/>\r\n… +1 to it being addressed<br/>\r\nRob Sanderson: Bye!<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408017> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97#issuecomment-443408017"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408017> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408017> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408017> <http://schema.org/startDate> "2018-12-01T07:54:55Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408017> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443408017> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-11-30-json-ld#section7-2).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nJSON-LD script elements (data blocks) MUST only contain valid JSON<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/96\">https://github.com/w3c/json-ld-syntax/issues/96</a><br/>\r\nBenjamin Young: issue related to <a href=\"https://github.com/w3c/json-ld-syntax/pull/97\">https://github.com/w3c/json-ld-syntax/pull/97</a><br/>\r\nGregg Kellogg: what I pushed up there addresses the different aspects of the HTML script content.<br/>\r\n… HTML provides 2 mechanisms: specific backslash escapes in HTML comments, or HTML entities<br/>\r\n… Benjamin proposed to remove the comments, to keep it valid JSON, consistently with the declared content-type.<br/>\r\nBenjamin Young: it’s similar to injecting HTML tags in a &lt;textarea>, without breaking the textarea.<br/>\r\nRob Sanderson: to be sure i understand, the issue is if you have: <script>{\"label\": \"<!--\"}</script> ?<br/>\r\n… No, thankfully, but I see the point<br/>\r\n… And then the pain of double and quadruple escaping … Thanks for the explanation. Result = :(<br/>\r\nGregg Kellogg: I want to be able to copy-paste the content of the script tag into, e.g., the JSON-LD playground.<br/>\r\nIvan Herman: the schema.org pages is full of examples, but none of them has “pathological” examples re. content tags<br/>\r\n… we could try to test their tools and see if they break.<br/>\r\n… We could decide this is an author’s problem. JSON-LD in HTML is optional.<br/>\r\n… If authors want to do that, they should know they are not on neutral ground,<br/>\r\nRob Sanderson: Related to what ivan said, and I agree with his opinion … Can we ask DanBri to find out what about this in current schema.org usage? There’s doubtless instances of this sort of thing (<!-- etc) in the wild, that they might be able to find (or not) with relative ease?<br/>\r\n… and take precautions.<br/>\r\n… Someone must have tried to put <script> in a json-ld block in some attempt to mess with Google :)<br/>\r\nGregg Kellogg: my tool will handle the comments; I don’t think they will render the entity escaping correctly<br/>\r\n… We has to check with the structured data tools, and talk with danbri about it.<br/>\r\nBenjamin Young: we need to be sure that the authors understand what happens<br/>\r\n… and why JSON-LD from an HTML script tag does not behave differently from JSON-LD from a file<br/>\r\nPierre-Antoine Champin: I’m not sure about a detail: what if I put an entity in a script tag?<br/>\r\n… from JS code, do I get the entity? or is it unescaped?<br/>\r\nIvan Herman: \"name\" : [\"my name is <in this>\", \"&amp;lt;lll&gt;\"] works in the structural testing tool<br/>\r\nIvan Herman: both these thinks work as expected<br/>\r\n… both the “<” and the “<” appear as “<”<br/>\r\nBenjamin Young: that’s what you see, but the raw result may be different<br/>\r\nGregg Kellogg: A better test might be ”name”: [“</script>”]<br/>\r\nIvan Herman: exploring how <a href=\"https://search.google.com/structured-data/testing-tool\">https://search.google.com/structured-data/testing-tool</a> handles things<br/>\r\nGregg Kellogg: I think you’re right that they’re unescaping them<br/>\r\n… but these are such rare cases<br/>\r\nRob Sanderson: +1 to “It hurts when I do this” … “Don’t do that then”<br/>\r\nGregg Kellogg: maybe we get rid of this whole notation, by saying you MUST only embed text which can be extracted via the HTML DOM<br/>\r\nBenjamin Young: doesn’t that place the constraint on all of JSON-LD that it could never contain </script><br/>\r\nGregg Kellogg: yes. that<br/>\r\nDavid I. Lehn: i’d like to note you are furthering the difficulty in writing obfuscated json-ld.<br/>\r\nRob Sanderson: Potentially also removing an attack vector, security wise<br/>\r\n… But not HTML in JSON(-LD or not) in HTML<br/>\r\n… +1 to it being addressed<br/>\r\nRob Sanderson: Bye!<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443410242> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-443410242"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443410242> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443410242> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443410242> <http://schema.org/startDate> "2018-12-01T08:35:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443410242> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443410242> <http://schema.org/description> "> I think the above with \"@context\": null would need to unseal everything automatically ... \r\n\r\nI am trying to find a clear way of explaining all this that does not sound to be too complicated. What I had in mind was:\r\n\r\n1. `\"@context\":null` wipes out the previous `@context`-s altogether, as if they were not there at all. Ie, yes, it would also unseal everything automatically.\r\n2. A term level `\"@sealed\"` value overwrites the global or \"inherited\" seal status for a term, where \"inheritance\" may be either due to a previous `@context` in an array, or a \"parent\" `@context` in case of an embedded one.\r\n\r\nIf I understand your examples, it does solve the various issues, albeit a bit verbose here and there. But a bit of verbosity is, I believe, acceptable if the processing rules are clear..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443464087> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97#issuecomment-443464087"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443464087> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443464087> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443464087> <http://schema.org/startDate> "2018-12-01T22:37:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443464087> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443464087> <http://schema.org/description> "Merging, as the remaining issue is separated to #100." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443470386> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/100#issuecomment-443470386"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443470386> .
<https://api.github.com/users/danbri> <http://schema.org/accountId> "danbri" .
<https://api.github.com/users/danbri> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/170265?v=4" .
<https://api.github.com/users/danbri> <http://schema.org/url> "https://github.com/danbri"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/danbri> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443470386> <http://schema.org/creator> <https://api.github.com/users/danbri> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443470386> <http://schema.org/startDate> "2018-12-02T00:30:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443470386> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443470386> <http://schema.org/description> "re Google SDTT, can you point me (well, danbri@google.com) at a testcase\nand its expected vs actual outcome?\n\nOn Sat, 1 Dec 2018 at 14:36, Gregg Kellogg <notifications@github.com> wrote:\n\n> PR #97 <https://github.com/w3c/json-ld-syntax/pull/97> and\n> w3c/json-ld-api#51 <https://github.com/w3c/json-ld-api/pull/51> resolved\n> embedding JSON-LD in provide for HTML character references (entities) to be\n> encoded within a data block so that critical elements are not mishandled by\n> HTML parsers. As written this requires authors to encode sequences such as\n> <script></script> which may occur in JSON-LD strings, and for these to be\n> decoded when being extracted by the API.\n>\n> It seems that the structured-data testing tool does not do this, and it's\n> not clear what provisions are made for potentially problematic content.\n>\n> One way to resolve this would be to provide direction to content authors\n> to avoid any JSON-LD content embedded in HTML which could cause such a\n> problem, which seems to be current practice. If character references are\n> encoded, decoding is required at some layer.\n>\n> cc/ @danbri <https://github.com/danbri> @BigBlueHat\n> <https://github.com/BigBlueHat>\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/w3c/json-ld-syntax/issues/100>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAKZGawg7FSWrf8xI7_eh03WUsT7toWKks5u0wR4gaJpZM4Y9Ian>\n> .\n>\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443533830> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/100#issuecomment-443533830"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443533830> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443533830> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443533830> <http://schema.org/startDate> "2018-12-02T19:14:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443533830> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443533830> <http://schema.org/description> "For example, consider the following JSON-LD:\r\n\r\n```json\r\n{\r\n  \"http://schema.org/description\": \"You can't embed a <script></script> snippet in JSON-LD embedded in HTML\"\r\n}\r\n```\r\n\r\nEmbedding this in HTML creates errors due to illegal data-block content:\r\n\r\n```html\r\n<script type=\"application/ld+json\">\r\n{\r\n  \"http://schema.org/description\": \"You can't embed a <script></script> snippet in JSON-LD embedded in HTML\"\r\n}\r\n</script>\r\n```\r\n\r\nAs noted in [Restrictions for contents of JSON-LD `script` elements](https://w3c.github.io/json-ld-syntax/#restrictions-for-contents-of-json-ld-script-elements), such data must have HTML Character references encoded, such as the following:\r\n\r\n```html\r\n<script type=\"application/ld+json\">\r\n{\r\n  \"http://schema.org/description\": \"You can't embed a &lt;script&gt;&lt;/script&gt; snippet in JSON-LD embedded in HTML\"\r\n}\r\n</script>\r\n```\r\n\r\nThis feature is at risk, as it generates different results after encoding, unless the algorithm also decodes. It's apparent that the SDTT does not do such decoding." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443546041> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/101#issuecomment-443546041"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443546041> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443546041> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443546041> <http://schema.org/startDate> "2018-12-02T21:57:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443546041> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443546041> <http://schema.org/description> "Values of type `@id` are document relative, not vocabulary relative. Using `rs:ph9...` works in either case, but to have `phq9...` considered from the vocabulary, use `\"@type\": \"@vocab\"`.\r\n\r\nSee [this playground link](https://json-ld.org/playground-dev/#startTab=tab-expanded&json-ld=%7B%22%40context%22%3A%7B%22%40version%22%3A1.1%2C%22ui_order%22%3A%7B%22%40id%22%3A%22https%3A%2F%2Fschema.repronim.org%2Fui_order%22%2C%22%40container%22%3A%22%40list%22%2C%22%40type%22%3A%22%40vocab%22%7D%2C%22phq9_1%22%3A%7B%22%40id%22%3A%22https%3A%2F%2Fschema.repronim.org%2Fphq9_1.jsonld%22%2C%22%40type%22%3A%22%40id%22%7D%2C%22phq9_2%22%3A%7B%22%40id%22%3A%22https%3A%2F%2Fschema.repronim.org%2Fphq9_2.jsonld%22%2C%22%40type%22%3A%22%40id%22%7D%7D%2C%22ui_order%22%3A%5B%22phq9_1%22%2C%22phq9_2%22%5D%7D)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443549587> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/101#issuecomment-443549587"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443549587> .
<https://api.github.com/users/satra> <http://schema.org/accountId> "satra" .
<https://api.github.com/users/satra> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/184063?v=4" .
<https://api.github.com/users/satra> <http://schema.org/url> "https://github.com/satra"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/satra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443549587> <http://schema.org/creator> <https://api.github.com/users/satra> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443549587> <http://schema.org/startDate> "2018-12-02T22:45:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443549587> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443549587> <http://schema.org/description> "thank you @gkellogg " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443555904> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/101#issuecomment-443555904"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/101> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443555904> .
<https://api.github.com/users/sanuann> <http://schema.org/accountId> "sanuann" .
<https://api.github.com/users/sanuann> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/5114945?v=4" .
<https://api.github.com/users/sanuann> <http://schema.org/url> "https://github.com/sanuann"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/sanuann> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443555904> <http://schema.org/creator> <https://api.github.com/users/sanuann> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443555904> <http://schema.org/startDate> "2018-12-03T00:14:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443555904> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/443555904> <http://schema.org/description> "Thank you @gkellogg " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444634487> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/102#issuecomment-444634487"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444634487> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444634487> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444634487> <http://schema.org/startDate> "2018-12-05T20:27:52Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444634487> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444634487> <http://schema.org/description> "Yes, it should be \"for indexing strings with out an associated language\", or similar. In RDF, it would be string with datatype `xsd:string`. Although it may make sense to talk about strings with _might_ have a language, the data model doesn't have any way to represent this." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444800978> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-444800978"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444800978> .
<https://api.github.com/users/danielweck> <http://schema.org/accountId> "danielweck" .
<https://api.github.com/users/danielweck> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/625201?v=4" .
<https://api.github.com/users/danielweck> <http://schema.org/url> "https://github.com/danielweck"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/danielweck> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444800978> <http://schema.org/creator> <https://api.github.com/users/danielweck> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444800978> <http://schema.org/startDate> "2018-12-06T09:08:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444800978> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444800978> <http://schema.org/description> "In the JSON-LD processing model, what happens when a relative \"path\" cannot be resolved to an absolute URL due to unsuitable baseURI (e.g. null, or `data:` URL)?\r\n\r\n1) complete failure (i.e. abort the processing algorithm)\r\nor:\r\n2) skip the unresolved URL (i.e. ignore the referenced resource), and continue processing.\r\n\r\nhttps://github.com/w3c/wpub/issues/374#issuecomment-444798500" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444978883> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-444978883"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444978883> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444978883> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444978883> <http://schema.org/startDate> "2018-12-06T18:31:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444978883> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444978883> <http://schema.org/description> "I believe that a `null` base URI [is explicitly allowed](https://w3c.github.io/json-ld-api/#dom-jsonlderrorcode-invalid-base-iri), at least in our editor's draft." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444979503> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-444979503"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444979503> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444979503> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444979503> <http://schema.org/startDate> "2018-12-06T18:32:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444979503> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/444979503> <http://schema.org/description> "My reading of what I believe to be the [relevant piece of RFC](https://tools.ietf.org/html/rfc3986#section-5.2) makes a `null` base URI have all components undefined except an empty path." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445056737> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445056737"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445056737> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445056737> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445056737> <http://schema.org/startDate> "2018-12-06T22:41:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445056737> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445056737> <http://schema.org/description> "This is quite similar to what would happen to another RDF serialization, such as RDFa or Turtle, if there were no base IRI established. In those cases, processors will not generate absolute IRIs, which is invalid, but potentially useful. (My own processors allow this, unless set to a `validate` mode). Typically, as these are web specs, documents are considered to have a location which is the fallback for the base IRI. But, in some cases they don't.\r\n\r\nThe [IRI Expansion Algorithm](https://w3c.github.io/json-ld-api/#iri-expansion) has two cases: if we are doing _document relative_ expansion, or not. As @ajs6f points out, in the _document relative_ case, RFC3986 applies, but the result will end up being a still relative IRI (provided that the input is not already an absolute IRI). The fall-through case is the same if there is  no _vocabulary mapping_, and the relative IRI is returned.\r\n\r\nNote that the [Deserialize JSON-LD to RDF Algorithm](Deserialize JSON-LD to RDF Algorithm) will not emit invalid triples, which would include any that have relative IRIs, as they are not considered valid RDF. However, implementations may have leeway in what they actually do if not in strict validation more. Otherwise, we're restricted by the RDF data model, which requires that IRIs be absolute (see [RDF 1.1 Concepts](https://www.w3.org/TR/rdf11-concepts/#resources-and-statements):\r\n\r\n>An RDF triple consists of three components:\r\n> * the subject, which is an IRI or a blank node\r\n> * the predicate, which is an IRI\r\n> * the object, which is an IRI, a literal or a blank node\r\n\r\n> An IRI (Internationalized Resource Identifier) within an RDF graph is a Unicode string [UNICODE] that conforms to the syntax defined in RFC 3987 [RFC3987].\r\n\r\n> IRIs in the RDF abstract syntax must be absolute, and may contain a fragment identifier.\r\n\r\nI'm not clear that we should say anything more about it in the spec.\r\n\r\n@ajs6f assertion that it is explicitly allowed, is not generally true, as the cited error message is specifically for values of `@base`, and setting `@base` to `null` unassigns the value, reverting to the document location." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445130556> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445130556"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445130556> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445130556> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445130556> <http://schema.org/startDate> "2018-12-07T05:52:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445130556> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445130556> <http://schema.org/description> "@gkellogg what is not clear to me (sorry, I am not familiar with all the details of the API spec) is whether an implementation is supposed to raise the error and exactly under what circumstances.\r\n\r\nThe issue came up in the WPUB work (and raised by @danielweck) on what a processor handling a Web Publication Manifest should do if an embedded manifest does not have a valid base value. My approach is that this behavior should be in line with what a JSON-LD processor would do in general..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445136390> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445136390"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445136390> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445136390> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445136390> <http://schema.org/startDate> "2018-12-07T06:28:08Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445136390> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445136390> <http://schema.org/description> "No, the API doesn’t define such an error, neither do we test for it. It would currently create relative IRIs in expansion, and would drop triples in toRdf.\r\n\r\nWhat behavior would be preferred?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445152873> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445152873"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445152873> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445152873> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445152873> <http://schema.org/startDate> "2018-12-07T07:59:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445152873> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445152873> <http://schema.org/description> "I must admit I do not have a very clear idea either.\r\n\r\nLooking at the alternatives by @danielweck (https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-444800978), I guess both of them go one step further. I think aborting the full processing is probably to drastic; I am not sure what \"skipping the unresolved URL\" would mean for the different API-s. For an RDF generation I guess this would mean skipping all relevant triples, I am not sure about expansion and compaction.\r\n\r\nI think that, at the minimum, a warning should be issued, fwiw. As you said, the generation of a relative URL in RDF indeed leads to a non-conformant (ie, possibly erroneous) RDF data.\r\n\r\nObviously, this is a very small corner case.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445264898> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445264898"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445264898> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445264898> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445264898> <http://schema.org/startDate> "2018-12-07T15:20:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445264898> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445264898> <http://schema.org/description> "It is useful behavior to be able to expand/compact without modifying URLs. My understanding is that when the base URL is explicitly set to `null`, a processor will skip URL processing and leave the values untouched during expansion/compaction. A base URL must be specified to convert to RDF (for conformance reasons). So I think what we've spec'd and what (I believe) the processors currently do is the right behavior." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445284813> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445284813"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445284813> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445284813> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445284813> <http://schema.org/startDate> "2018-12-07T16:22:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445284813> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445284813> <http://schema.org/description> "@dlongley is there any warning/error raised by the processor?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445303414> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445303414"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445303414> .
<https://api.github.com/users/dlongley> <http://schema.org/accountId> "dlongley" .
<https://api.github.com/users/dlongley> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/168137?v=4" .
<https://api.github.com/users/dlongley> <http://schema.org/url> "https://github.com/dlongley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dlongley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445303414> <http://schema.org/creator> <https://api.github.com/users/dlongley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445303414> <http://schema.org/startDate> "2018-12-07T17:22:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445303414> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445303414> <http://schema.org/description> "@iherman, no warning or error raised." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445313785> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/91#issuecomment-445313785"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445313785> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445313785> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445313785> <http://schema.org/startDate> "2018-12-07T17:57:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445313785> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445313785> <http://schema.org/description> "This could be achieved by aliasing the occupation property\r\n```\r\n{\r\n  \"@context\": {\r\n    \"occupation\": { \"@id\": \"ex:occupation\", \"@container\": \"@language\" },\r\n    \"occupationHTML\": { \"@id\": \"ex:occupation\", \"@type\": \"rdf:HTML\" },\r\n    \"description\": \"ex:description\"\r\n  },\r\n  \"name\": \"Yagyū Muneyoshi\",\r\n  \"occupation\": {\r\n    \"ja\": \"忍者\",\r\n    \"en\": \"Ninja\",\r\n    \"cs\": \"Nindža\"\r\n  },\r\n  \"occupationHTML\": \"<span lang=en>Ninja in japanese: <span lang=jp>忍者</span>\"\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433618> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/103#issuecomment-445433618"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/103> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433618> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433618> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433618> <http://schema.org/startDate> "2018-12-08T05:47:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433618> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433618> <http://schema.org/description> "I believe there should be a warning at least. At the minimum when RDF is generated." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433776> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/96#issuecomment-445433776"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433776> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433776> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433776> <http://schema.org/startDate> "2018-12-08T05:50:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433776> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433776> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section4-1).\r\n\r\n- `RESOLVED:  close #97 as fixed with recent merges; other issues raised in #100`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n4.1. Remove the need for wrapping comment-open/comment-close text in data blocks<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/pull/97\">https://github.com/w3c/json-ld-syntax/pull/97</a><br/>\r\nGregg Kellogg: most of these are related to PRs just discussed, but not all<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-syntax/issues/96\">https://github.com/w3c/json-ld-syntax/issues/96</a><br/>\r\nBenjamin Young: current draft talks now about html entities for escaping<br/>\r\nGregg Kellogg: given that it has to be valid json-ld, how do we deal with escaped entities<br/>\r\n… leaves us with problem of how to represent &lt;script> tags and comments in json?<br/>\r\n… so we could close 97 and leave 100 for further discussion<br/>\r\nBenjamin Young: one option is to mark propose closing and discuss more later<br/>\r\nGregg Kellogg: DanBri involved and noted in discussion (of this or another related issue 100)<br/>\r\nProposed resolution: close #97 as fixed with recent merges; other issues raised in #100 (Benjamin Young)<br/>\r\nGregg Kellogg: +1<br/>\r\nDavid Newbury: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: +1<br/>\r\nResolution #2: close #97 as fixed with recent merges; other issues raised in #100<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433883> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-445433883"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433883> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433883> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433883> <http://schema.org/startDate> "2018-12-08T05:52:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433883> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433883> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section4).\r\n\r\n- `RESOLVED:  close issues 56, 77, and 102 as having been addressed by recent merges`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nGregg Kellogg: issue 56 - this was looking for examples to indicate unexpected behavior when type is a vocab<br/>\r\n… i think ball was in Ivan’s court whether the examples were sufficient<br/>\r\n… we are not closing the issue until after the PR, so question is whether we are ready to close<br/>\r\n… we added 2 examples<br/>\r\n… next issue is 77, disambiguate uses of @type<br/>\r\n… Webex seems to have some problems with this meeting, especially if changing focus on my computer<br/>\r\n… we discussed adding @datatype, instead decided to add text around different uses of @type<br/>\r\n… are people satisfied with wording?<br/>\r\nGregg Kellogg: use of @none regarding language<br/>\r\n… in seeming conflict with requirement that language has to be string, @none didn’t specify<br/>\r\n… fixed that wording making clear that @none has to be a string<br/>\r\nBenjamin Young: these are tagged proposed closing<br/>\r\n… we need to decide if ready to close<br/>\r\nAdam Soroka: I wanted to mention the @datatype issue - I’m okay with this, but we may need a gitHub tag for whenever issues about @type comes up<br/>\r\n… this will be a way to verify that spec wording update is enough to minimize confusion<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-wg/issues/24\">https://github.com/w3c/json-ld-wg/issues/24</a><br/>\r\nGregg Kellogg: I did raise issue 24 about surfacing the minutes on this topic like we did in Community Group<br/>\r\n… could we do this?<br/>\r\n… was useful in community group<br/>\r\nIvan Herman: minutes cleanup is done by me, and summarizing each meeting may not be a good idea<br/>\r\nGregg Kellogg: there is a scribe tool that builds summaries and indexes automatically<br/>\r\nBenjamin Young: it works on issues and action lists at top/bottom of each meeting minutes<br/>\r\nGregg Kellogg: the good thing is it aggregates all minutes on each issue<br/>\r\nBenjamin Young: I will take an action to investigate to see if we can build index of minutes by issue<br/>\r\n… I think this is a good idea<br/>\r\nGregg Kellogg: will work with bigbluehat on this since I worked on CG<br/>\r\nBenjamin Young: can we close these 3 issues<br/>\r\n… 56, 77 and 102 ?<br/>\r\nIvan Herman: can we do a resolution to close these 3 issues?<br/>\r\nProposed resolution: close issues 56, 77, and 102 as having been addressed by recent merges (Benjamin Young)<br/>\r\nIvan Herman: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nDavid Newbury: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nResolution #1: close issues 56, 77, and 102 as having been addressed by recent merges<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433908> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/77#issuecomment-445433908"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/77> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433908> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433908> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433908> <http://schema.org/startDate> "2018-12-08T05:53:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433908> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433908> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section4).\r\n\r\n- `RESOLVED:  close issues 56, 77, and 102 as having been addressed by recent merges`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nGregg Kellogg: issue 56 - this was looking for examples to indicate unexpected behavior when type is a vocab<br/>\r\n… i think ball was in Ivan’s court whether the examples were sufficient<br/>\r\n… we are not closing the issue until after the PR, so question is whether we are ready to close<br/>\r\n… we added 2 examples<br/>\r\n… next issue is 77, disambiguate uses of @type<br/>\r\n… Webex seems to have some problems with this meeting, especially if changing focus on my computer<br/>\r\n… we discussed adding @datatype, instead decided to add text around different uses of @type<br/>\r\n… are people satisfied with wording?<br/>\r\nGregg Kellogg: use of @none regarding language<br/>\r\n… in seeming conflict with requirement that language has to be string, @none didn’t specify<br/>\r\n… fixed that wording making clear that @none has to be a string<br/>\r\nBenjamin Young: these are tagged proposed closing<br/>\r\n… we need to decide if ready to close<br/>\r\nAdam Soroka: I wanted to mention the @datatype issue - I’m okay with this, but we may need a gitHub tag for whenever issues about @type comes up<br/>\r\n… this will be a way to verify that spec wording update is enough to minimize confusion<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-wg/issues/24\">https://github.com/w3c/json-ld-wg/issues/24</a><br/>\r\nGregg Kellogg: I did raise issue 24 about surfacing the minutes on this topic like we did in Community Group<br/>\r\n… could we do this?<br/>\r\n… was useful in community group<br/>\r\nIvan Herman: minutes cleanup is done by me, and summarizing each meeting may not be a good idea<br/>\r\nGregg Kellogg: there is a scribe tool that builds summaries and indexes automatically<br/>\r\nBenjamin Young: it works on issues and action lists at top/bottom of each meeting minutes<br/>\r\nGregg Kellogg: the good thing is it aggregates all minutes on each issue<br/>\r\nBenjamin Young: I will take an action to investigate to see if we can build index of minutes by issue<br/>\r\n… I think this is a good idea<br/>\r\nGregg Kellogg: will work with bigbluehat on this since I worked on CG<br/>\r\nBenjamin Young: can we close these 3 issues<br/>\r\n… 56, 77 and 102 ?<br/>\r\nIvan Herman: can we do a resolution to close these 3 issues?<br/>\r\nProposed resolution: close issues 56, 77, and 102 as having been addressed by recent merges (Benjamin Young)<br/>\r\nIvan Herman: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nDavid Newbury: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nResolution #1: close issues 56, 77, and 102 as having been addressed by recent merges<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433938> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/102#issuecomment-445433938"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433938> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433938> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433938> <http://schema.org/startDate> "2018-12-08T05:54:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433938> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445433938> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section4).\r\n\r\n- `RESOLVED:  close issues 56, 77, and 102 as having been addressed by recent merges`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nGregg Kellogg: issue 56 - this was looking for examples to indicate unexpected behavior when type is a vocab<br/>\r\n… i think ball was in Ivan’s court whether the examples were sufficient<br/>\r\n… we are not closing the issue until after the PR, so question is whether we are ready to close<br/>\r\n… we added 2 examples<br/>\r\n… next issue is 77, disambiguate uses of @type<br/>\r\n… Webex seems to have some problems with this meeting, especially if changing focus on my computer<br/>\r\n… we discussed adding @datatype, instead decided to add text around different uses of @type<br/>\r\n… are people satisfied with wording?<br/>\r\nGregg Kellogg: use of @none regarding language<br/>\r\n… in seeming conflict with requirement that language has to be string, @none didn’t specify<br/>\r\n… fixed that wording making clear that @none has to be a string<br/>\r\nBenjamin Young: these are tagged proposed closing<br/>\r\n… we need to decide if ready to close<br/>\r\nAdam Soroka: I wanted to mention the @datatype issue - I’m okay with this, but we may need a gitHub tag for whenever issues about @type comes up<br/>\r\n… this will be a way to verify that spec wording update is enough to minimize confusion<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-wg/issues/24\">https://github.com/w3c/json-ld-wg/issues/24</a><br/>\r\nGregg Kellogg: I did raise issue 24 about surfacing the minutes on this topic like we did in Community Group<br/>\r\n… could we do this?<br/>\r\n… was useful in community group<br/>\r\nIvan Herman: minutes cleanup is done by me, and summarizing each meeting may not be a good idea<br/>\r\nGregg Kellogg: there is a scribe tool that builds summaries and indexes automatically<br/>\r\nBenjamin Young: it works on issues and action lists at top/bottom of each meeting minutes<br/>\r\nGregg Kellogg: the good thing is it aggregates all minutes on each issue<br/>\r\nBenjamin Young: I will take an action to investigate to see if we can build index of minutes by issue<br/>\r\n… I think this is a good idea<br/>\r\nGregg Kellogg: will work with bigbluehat on this since I worked on CG<br/>\r\nBenjamin Young: can we close these 3 issues<br/>\r\n… 56, 77 and 102 ?<br/>\r\nIvan Herman: can we do a resolution to close these 3 issues?<br/>\r\nProposed resolution: close issues 56, 77, and 102 as having been addressed by recent merges (Benjamin Young)<br/>\r\nIvan Herman: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nDavid Newbury: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nResolution #1: close issues 56, 77, and 102 as having been addressed by recent merges<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434068> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/97#issuecomment-445434068"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/97> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434068> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434068> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434068> <http://schema.org/startDate> "2018-12-08T05:56:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434068> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434068> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section4-1).\r\n\r\n- `RESOLVED:  close #97 as fixed with recent merges; other issues raised in #100`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n4.1. Remove the need for wrapping comment-open/comment-close text in data blocks<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/pull/97\">https://github.com/w3c/json-ld-syntax/pull/97</a><br/>\r\nGregg Kellogg: most of these are related to PRs just discussed, but not all<br/>\r\nGregg Kellogg: <a href=\"https://github.com/w3c/json-ld-syntax/issues/96\">https://github.com/w3c/json-ld-syntax/issues/96</a><br/>\r\nBenjamin Young: current draft talks now about html entities for escaping<br/>\r\nGregg Kellogg: given that it has to be valid json-ld, how do we deal with escaped entities<br/>\r\n… leaves us with problem of how to represent &lt;script> tags and comments in json?<br/>\r\n… so we could close 97 and leave 100 for further discussion<br/>\r\nBenjamin Young: one option is to mark propose closing and discuss more later<br/>\r\nGregg Kellogg: DanBri involved and noted in discussion (of this or another related issue 100)<br/>\r\nProposed resolution: close #97 as fixed with recent merges; other issues raised in #100 (Benjamin Young)<br/>\r\nGregg Kellogg: +1<br/>\r\nDavid Newbury: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: +1<br/>\r\nResolution #2: close #97 as fixed with recent merges; other issues raised in #100<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434151> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/100#issuecomment-445434151"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434151> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434151> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434151> <http://schema.org/startDate> "2018-12-08T05:58:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434151> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434151> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section6-1).\r\n\r\n- `RESOLVED:  close #100 with note about authoring concern related to HTML characters and </script> and remove existing text on JSON-LD processors handling character encodings`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n6.1. Handling HTML character references in embedded JSON-LD<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/100\">https://github.com/w3c/json-ld-syntax/issues/100</a><br/>\r\nBenjamin Young: so far most of work has been Greg and Dan<br/>\r\nGregg Kellogg: this is a relatively narrow issue - we should solve by not resolving html entities in the API<br/>\r\n… the narrow use case is script tags and comments<br/>\r\n… so we should document by clarifying in spec language but not resolving the html entities<br/>\r\n… if an html embedded in json (which is inside a script tag) closes the script tag, then rest of json will be treated as body<br/>\r\n… in theory you can end up embedding javascript<br/>\r\n… I suggest we document and say don’t do this<br/>\r\n… and leave browser to defend against this<br/>\r\nBenjamin Young: agree this seems not our problem<br/>\r\n… people who put end script tag in their json-ld will find that they’ve broken their html<br/>\r\n… if people need to escape character entities, they’ll do, but it will become an html issue not our problem<br/>\r\n… while we don’t want to avoid edge cases, this still doesn’t seem to be our issue<br/>\r\n… but would love to her back from Dan on this<br/>\r\n… just add note that you could disrupt html parsing by doing this and leave it at that<br/>\r\nAdam Soroka: I don’t want to minimize the security concern, but since this is coming from server side, it seems not as threatening<br/>\r\n… not as bad from accepting user input<br/>\r\nGregg Kellogg: I would propose that we close this issue and remove all except a non-normative caution note<br/>\r\n… that data block should remain valid<br/>\r\n… I don’t anticipate anything different on this from schema.org<br/>\r\n… this removes some text from API doc and maybe some changes in syntax document where we currently talk about how to escape<br/>\r\nProposed resolution: close #100 with note about authoring concern related to HTML characters and &lt;/script> and remove existingtext on JSON-LD processors handling character encodings (Benjamin Young)<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: +1<br/>\r\nDavid Newbury: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nResolution #3: close #100 with note about authoring concern related to HTML characters and </script> and remove existing text on JSON-LD processors handling character encodings<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434240> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/91#issuecomment-445434240"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/91> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434240> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434240> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434240> <http://schema.org/startDate> "2018-12-08T05:59:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434240> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445434240> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section6-3).\r\n\r\n- `RESOLVED:  close #91 as wrong solution for the right problem`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/91\">https://github.com/w3c/json-ld-syntax/issues/91</a><br/>\r\nBenjamin Young: Idea with 91 is that there is no way to fall back to HTML, which international has suggested is best way to deal with language issues<br/>\r\nGregg Kellogg: issue is to allow non-string values, for which a value object without type might be one option, and opening that door allows almost anything<br/>\r\n… that ruins the normality, and not sure it helps the use case<br/>\r\n… seems you’d be more likely to use either all language tags or all html literals<br/>\r\nIvan Herman: i think you should either close or defer - this issue did come up in pub wg<br/>\r\n… their concern is a bit convoluted to talk about<br/>\r\n… when I wrote it down, I got a private message that they didn’t really like this solution (right after TPAC)<br/>\r\n… pinged them 2 days ago.<br/>\r\n… the result may be that in JSON and JSON-LD this issue can not be done perfectly, and we should be cognizant of perfect is the enemy of the good<br/>\r\n… title element seems one place where this could come up, but title doesn’t allow html text<br/>\r\n… we should avoid being more catholic than the pope<br/>\r\nAdam Soroka: mostly agreeing with what’s been said<br/>\r\n… a pattern of string, string, string, complex stuff, string, string is not good<br/>\r\nAdam Soroka: +1<br/>\r\nDavid Newbury: +1<br/>\r\nAdam Soroka: goes against trying to keep json-ld in line with expectations<br/>\r\nPierre-Antoine Champin: I agree that this is a strange use case, but regardless i posted a solution that works in dev playground<br/>\r\n… having 2 distinct properties, one accept a string, one a language map<br/>\r\nBenjamin Young: similar to Annotation and Social WG for some of their specs<br/>\r\nPierre-Antoine Champin: a little more cumbersome<br/>\r\nProposed resolution: close #91 as wrong solution for the right problem (Benjamin Young)<br/>\r\nAdam Soroka: the kind of thing pchampin is offering seems a good option, can we open an issue to generate examples<br/>\r\nIvan Herman: +1<br/>\r\nBenjamin Young: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nAdam Soroka: this is a pattern that could be confusing, we should offer best practices<br/>\r\nTim Cole: +1<br/>\r\nDavid Newbury: +1<br/>\r\nAdam Soroka: +1<br/>\r\nResolution #4: close #91 as wrong solution for the right problem<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445481282> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/100#issuecomment-445481282"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445481282> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445481282> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445481282> <http://schema.org/startDate> "2018-12-08T18:51:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445481282> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445481282> <http://schema.org/description> "Reopening until edits are done." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445491610> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/106#issuecomment-445491610"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/106> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445491610> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445491610> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445491610> <http://schema.org/startDate> "2018-12-08T21:33:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445491610> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445491610> <http://schema.org/description> "@danbri We resolved to remove decoding of HTML character references, which is consistent with how the SDTT handles it." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445506089> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/56#issuecomment-445506089"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/56> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445506089> .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/accountId> "pjohnston-wiley" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/11592786?v=4" .
<https://api.github.com/users/pjohnston-wiley> <http://schema.org/url> "https://github.com/pjohnston-wiley"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pjohnston-wiley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445506089> <http://schema.org/creator> <https://api.github.com/users/pjohnston-wiley> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445506089> <http://schema.org/startDate> "2018-12-09T02:44:19Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445506089> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/445506089> <http://schema.org/description> "Belatedly, thank you all for the time you spent on this. Closing. chz p" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447093296> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/96#issuecomment-447093296"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/96> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447093296> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447093296> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447093296> <http://schema.org/startDate> "2018-12-13T19:36:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447093296> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447093296> <http://schema.org/description> "Think I missed referencing this issue in the resolution we used last week. I believe the current text in https://w3c.github.io/json-ld-syntax/#restrictions-for-contents-of-json-ld-script-elements settles this nicely, fwiw, so closing as I believe it's both fixed and we had consensus to match. 😄 " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447095328> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/102#issuecomment-447095328"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/102> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447095328> .
<https://api.github.com/users/BigBlueHat> <http://schema.org/accountId> "BigBlueHat" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/43209?v=4" .
<https://api.github.com/users/BigBlueHat> <http://schema.org/url> "https://github.com/BigBlueHat"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/BigBlueHat> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447095328> <http://schema.org/creator> <https://api.github.com/users/BigBlueHat> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447095328> <http://schema.org/startDate> "2018-12-13T19:42:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447095328> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447095328> <http://schema.org/description> "By way of connecting dots, this clarification also makes the closing of #91 more obvious." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447163447> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-447163447"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447163447> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447163447> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447163447> <http://schema.org/startDate> "2018-12-13T23:52:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447163447> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447163447> <http://schema.org/description> "Something to resolve:\r\n\r\nIf the ACCEPT header includes a json-ld media type with a context or frame profile that the server won't support (e.g., black/white list) I presume it would skip that request and go to the next highest-priority media type it supports (possibly application/ld+json without a profile or without a specific context/frame) returning [status 415](https://httpstatuses.com/415) if none found.\r\n\r\nThis could mean not returning any JSON-LD if profile cannot be satisfied.\r\n\r\nAlternatively, the server should satisfy the request as best it can without consideration of the profile parameter.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447190714> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-447190714"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447190714> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447190714> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447190714> <http://schema.org/startDate> "2018-12-14T02:22:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447190714> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447190714> <http://schema.org/description> "I'm not sure if I'm getting at your point, @gkellogg, but my understanding of HTTP (based on the old RFC and possibly out of date) is that the mediatype alone is what `Accept` selects on-- the profile can't change that choice. So once `application/ld+json` is the choice, whatever happens with the profile can't change that, and therefore we can select from various options, but tossing to the next mediatype should be the last. But I welcome correction!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447307084> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-447307084"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447307084> .
<https://api.github.com/users/Conal-Tuohy> <http://schema.org/accountId> "Conal-Tuohy" .
<https://api.github.com/users/Conal-Tuohy> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1264711?v=4" .
<https://api.github.com/users/Conal-Tuohy> <http://schema.org/url> "https://github.com/Conal-Tuohy"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Conal-Tuohy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447307084> <http://schema.org/creator> <https://api.github.com/users/Conal-Tuohy> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447307084> <http://schema.org/startDate> "2018-12-14T12:11:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447307084> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447307084> <http://schema.org/description> "I think it's correct that the server is supposed to consider the entire value of the `Accept` header, including any media type parameters  (profiles, etc) in deciding which is the best representation of the resource. RFC7231 gives an analogous example of selecting among various kinds of plain text:\r\n\r\nhttps://tools.ietf.org/html/rfc7231#page-39\r\n\r\nI think it would be good practice for clients to specify both a profile and also \"unprofiled\" JSON-LD (if they can actually accept that), e.g. `application/ld+json, application/ld+json;profile=foo`. It' should not be necessary for a client to specify a lower `q` value for generic `application/ld+json` than for `application/ld+json;profile=foo`, because the server ought to prefer the \"more specific\" value anyway.\r\n\r\nIf a client sends `Accept: application/ld+json;profile=foo` without also `application/ld+json`, the server could either return a 406, or could return a 200 with its own \"best guess\" content type (as it would be entitled to do if the client had not sent an `Accept` header at all). In such a case, it would make sense, to me, to return JSON-LD rather than some other RDF media type." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447335529> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-447335529"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447335529> .
<https://api.github.com/users/ajs6f> <http://schema.org/accountId> "ajs6f" .
<https://api.github.com/users/ajs6f> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/110994?v=4" .
<https://api.github.com/users/ajs6f> <http://schema.org/url> "https://github.com/ajs6f"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/ajs6f> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447335529> <http://schema.org/creator> <https://api.github.com/users/ajs6f> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447335529> <http://schema.org/startDate> "2018-12-14T14:07:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447335529> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447335529> <http://schema.org/description> "Wow, I got that completely backwards! Thanks for the correction, @Conal-Tuohy. \r\n\r\nGiven that many clients will be expecting to use compacted JSON-LD as JSON, I think a 4xx is by far the best answer here. Non-compacted forms are going to be more surprising and troublesome than helpful to such clients." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447397266> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/87#issuecomment-447397266"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/87> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447397266> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447397266> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447397266> <http://schema.org/startDate> "2018-12-14T17:37:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447397266> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447397266> <http://schema.org/description> "From call - Allow scoped contexts on graph containers in some form?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447496444> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-447496444"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447496444> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447496444> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447496444> <http://schema.org/startDate> "2018-12-14T22:21:12Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447496444> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447496444> <http://schema.org/description> "On the WG call of 2018-12-14, we discussed the feature in the abstract and two separate implementation patterns.\r\n\r\nThe feature is, in JSON-LD terms, to have a way to not embed nodes in the compacted JSON tree where they're encountered, but instead have the nodes serialized in a separate part of the tree and referenced from where they're encountered.  In essence, it is a desire to exclude some nodes from being embedded in the tree and instead treat them like \"striped\" RDF/XML, or as if they were disconnected nodes but without requiring `@graph: []` at the root of the document.\r\n\r\n1. The reference could be completely internal. Just a way to create a pointer within the document, that could be arbitrarily generated like a blank node. \r\n2. The reference could be the URI of the resource, making the references object function very similarly to an identifier map, just without the predicate.\r\n\r\nMy original issue assumed option 2, but the use case could be solved with option 1 as well. I think option 1 would require more machinery than option 2, as the references would need to be understood in the context.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447520700> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108#issuecomment-447520700"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447520700> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447520700> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447520700> <http://schema.org/startDate> "2018-12-15T00:49:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447520700> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447520700> <http://schema.org/description> "I came to a similar conclusion about how to do this, but the question remains: what use case is this solving. I don't see how it allows, say, a WoT system to avoid loading `https://example.com/context-with-metadata` in the first place and only really allows you to say that the retrieved context should have the associated hash and fail otherwise." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629312> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108#issuecomment-447629312"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629312> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629312> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629312> <http://schema.org/startDate> "2018-12-16T09:41:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629312> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629312> <http://schema.org/description> "I agree with @gkellogg that we will have to evaluate whether we wanted a structure of such an \"annotated\" context link. Buy let us try to put that aside for a moment to see whether we can agree in a syntax.\r\n\r\nWhat I had in mind is slightly different; my goal was _not_ to overload again the same keyword with different possible semantics. What I had in mind was rather:\r\n\r\n```\r\n{\r\n    \"@context\" : [\r\n        \"https://...\",\r\n        {\r\n            \"@version\": 1.1,\r\n            \"@contextref\" : {\r\n                \"@url\" : [\"schema\", \"https://cdn1.../schema.org\", \"https://schema.org\"],\r\n                \"@sri\" : \"sha256-abcd\",\r\n                \"@sealed\" : true\r\n            },\r\n            \"id\" : \"@id\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nIt is a bit more verbose but, I believe, a bit clearer (and mimics a bit the `<link>` element:-).\r\n\r\nThe array of links is also to bring back the issue we had at TPAC, namely to see if some sort of a local cache reference can be used. So that array is based on the idea used in CSS for font access: the processor takes the first URL that works in returning a context file. It is not yet clear in my mind how exactly we would identify a local cache, the array would be used for something like that.\r\n\r\nI guess, returning to @azaroth42's question, I tend to say that we would have to define the possible attributes, instead of an open end. \r\n\r\n\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629484> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/100#issuecomment-447629484"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/100> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629484> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629484> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629484> <http://schema.org/startDate> "2018-12-16T09:44:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629484> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447629484> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-07-json-ld#section6-1).\r\n\r\n- `RESOLVED:  close #100 with note about authoring concern related to HTML characters and </script> and remove existing text on JSON-LD processors handling character encodings`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nBenjamin Young: so far most of work has been Greg and Dan<br/>\r\nGregg Kellogg: this is a relatively narrow issue - we should solve by not resolving html entities in the API<br/>\r\n… the narrow use case is script tags and comments<br/>\r\n… so we should document by clarifying in spec language but not resolving the html entities<br/>\r\n… if an html embedded in json (which is inside a script tag) closes the script tag, then rest of json will be treated as body<br/>\r\n… in theory you can end up embedding javascript<br/>\r\n… I suggest we document and say don’t do this<br/>\r\n… and leave browser to defend against this<br/>\r\nBenjamin Young: agree this seems not our problem<br/>\r\n… people who put end script tag in their json-ld will find that they’ve broken their html<br/>\r\n… if people need to escape character entities, they’ll do, but it will become an html issue not our problem<br/>\r\n… while we don’t want to avoid edge cases, this still doesn’t seem to be our issue<br/>\r\n… but would love to her back from Dan on this<br/>\r\n… just add note that you could disrupt html parsing by doing this and leave it at that<br/>\r\nAdam Soroka: I don’t want to minimize the security concern, but since this is coming from server side, it seems not as threatening<br/>\r\n… not as bad from accepting user input<br/>\r\nGregg Kellogg: I would propose that we close this issue and remove all except a non-normative caution note<br/>\r\n… that data block should remain valid<br/>\r\n… I don’t anticipate anything different on this from schema.org<br/>\r\n… this removes some text from API doc and maybe some changes in syntax document where we currently talk about how to escape<br/>\r\nProposed resolution: close #100 with note about authoring concern related to HTML characters and &lt;/script> and remove existingtext on JSON-LD processors handling character encodings (Benjamin Young)<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: +1<br/>\r\nAdam Soroka: +1<br/>\r\nDavid Newbury: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nResolution #3: close #100 with note about authoring concern related to HTML characters and </script> and remove existing text on JSON-LD processors handling character encodings<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630339> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/86#issuecomment-447630339"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/86> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630339> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630339> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630339> <http://schema.org/startDate> "2018-12-16T10:00:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630339> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630339> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-14-json-ld#section5-1).\r\n\r\n- `RESOLVED:  azaroth to open an issue about annotating context URLs potentially with validity/integrity, etc. metadata`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nCan SRI be used in JSON-LD for which use cases?<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/86\">https://github.com/w3c/json-ld-syntax/issues/86</a><br/>\r\nBenjamin Young: <a href=\"https://w3c.github.io/webappsec-subresource-integrity/\">https://w3c.github.io/webappsec-subresource-integrity/</a><br/>\r\nBenjamin Young: if anyone understands this first issue, we can discuss it<br/>\r\nBenjamin Young: … SRI = Sub-Resource Integrity<br/>\r\nBenjamin Young: SRI is something HTML implementors use to state the integrity of things<br/>\r\n… I believe adam wanted to introduce something like SRI for e.g., validating contexts<br/>\r\nGregg Kellogg: it’s an intriguing idea, esp. in the context of referencing external contexts<br/>\r\n… it does come with a cost though..<br/>\r\n… I think the motivation behind this was to provide means for side-loading stuff<br/>\r\nBenjamin Young: <a href=\"https://w3c.github.io/webappsec-subresource-integrity/#integrity-metadata\">https://w3c.github.io/webappsec-subresource-integrity/#integrity-metadata</a><br/>\r\nRob Sanderson: is it about whether we can use the abstract definition of integrity stuff SRI defines<br/>\r\nIvan Herman: there have been 2 diff. issues that came up during TPAC<br/>\r\n… one of them was about using a local version of the context<br/>\r\n… all go in the direction of annotating a link<br/>\r\n… maybe we should postpone this specific issue until we investigated the general picture more thoroughly<br/>\r\nBenjamin Young: yeah, people want to be able to state “more” things about a context than they currently can<br/>\r\nBenjamin Young: related to <a href=\"https://github.com/w3c/json-ld-syntax/issues/9\">https://github.com/w3c/json-ld-syntax/issues/9</a><br/>\r\nBenjamin Young: i.e., that it is sealed<br/>\r\n… I don’t think we have any specific actions to take<br/>\r\nRob Sanderson: I think there’s some meta discussion going on<br/>\r\nProposed resolution: someone should open an issue about annotating context URLs potentially with validity/integrity, etc. metadata (Benjamin Young)<br/>\r\nRob Sanderson: we may need to introduce new keywords that identify “new metadata” about a context<br/>\r\n… distinction between inline context and reference to metadata of external context<br/>\r\nProposed resolution: azaroth to open an issue about annotating context URLs potentially with validity/integrity, etc. metadata (Benjamin Young)<br/>\r\nDavid I. Lehn: if such metadata feature exists, people may see that as a way to add comments and docs and such as in previous closed issues<br/>\r\nRob Sanderson: +1<br/>\r\nBenjamin Young: +1<br/>\r\nRob Sanderson: we should not have the same discussion again in January<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nSimon Steyskal: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nDavid I. Lehn: +1<br/>\r\nIvan Herman: +1<br/>\r\nJeff Mixter: +1<br/>\r\nResolution #3: azaroth to open an issue about annotating context URLs potentially with validity/integrity, etc. metadata<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630418> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/98#issuecomment-447630418"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/98> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630418> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630418> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630418> <http://schema.org/startDate> "2018-12-16T10:02:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630418> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630418> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-14-json-ld#section5-3).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n5.3. Is there a scope context mechanism for clearing context definitions?<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/98\">https://github.com/w3c/json-ld-syntax/issues/98</a><br/>\r\nRob Sanderson: we should give it a deadline, e.g., F2F in feb<br/>\r\nBenjamin Young: this issue is also related to scoped contexts<br/>\r\n… most of the hard issues are related to how this relates to sealed contexts<br/>\r\n… maybe @context is an array and the first value of that array is null<br/>\r\n… and the 2nd value is actually a reference to an external context<br/>\r\n… the issue with regard to sealed context, is the fact that because it is sealed it cannot be cleared<br/>\r\n… maybe it needs some special language to do so<br/>\r\nRob Sanderson: seems like it fits to the sealed context discussion, so we should discuss them together<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630505> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/19#issuecomment-447630505"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/19> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630505> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630505> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630505> <http://schema.org/startDate> "2018-12-16T10:03:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630505> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447630505> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2018/2018-12-14-json-ld#section5-5).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n5.5. Indexing without a predicate<br/>\r\nBenjamin Young: <a href=\"https://github.com/w3c/json-ld-syntax/issues/19\">https://github.com/w3c/json-ld-syntax/issues/19</a><br/>\r\nRob Sanderson: I opened issue 19 initially in the CG<br/>\r\n… based on an observation by 2 communities<br/>\r\nRob Sanderson: last time we discussed this we thought it might be a good fit for framing<br/>\r\n… for creating it; and the context definition for understanding what the particular … is<br/>\r\n… you could have an “included block” that contains hundreds of items, you only have to reference but don’t have to add all everytime you use them<br/>\r\nGregg Kellogg: looks very much like “itemref” of microdata<br/>\r\n… unwinding this in compaction might be challenging to say at least<br/>\r\nBenjamin Young: the current container options don’t work because they force you to have a name or these?<br/>\r\nRob Sanderson: no, the issue we like to solve -> if you don’t have the entire graph in memory, you don’t necessarily find the reference for everything<br/>\r\n… i.e. optimizing search<br/>\r\nGregg Kellogg: just noting that there’s a CG started on updating N3<br/>\r\n… one of the things they tackle first is adding formula/pattern<br/>\r\n… in RDFa we did something similar by adding some reasoning<br/>\r\nIvan Herman: I’m looking at the example and I’m not sure I understand what the graph is you want to generate out of that?<br/>\r\nRob Sanderson: a very connected one<br/>\r\n… that allows to avoid having to define a specific node every time it is encountered<br/>\r\nIvan Herman: relative URIs within JSON-LD?<br/>\r\n… couldn’t we use an internal URL, like one would use in turtle<br/>\r\nPierre-Antoine Champin: I’m a bit confused by Ivan’s last example<br/>\r\nIvan Herman: the original problem is “we don’t want to repeat things”<br/>\r\n… one way to do this in turtle is to use internal URIs<br/>\r\nPierre-Antoine Champin: could I extend this by having only the included key in the top-level object and a set of ids in the corresponding object?<br/>\r\n… basically what we discussed during TPAC<br/>\r\nRob Sanderson: we can already do that, so you can have the pattern RDF XML kinda uses<br/>\r\n… but it’s a very good point<br/>\r\n… some things we want to have nested, some enumerated<br/>\r\n… potentially a framing algo could say “put these refs separate, but those others nested”<br/>\r\nRob Sanderson: in JSON schema there’s a definitions block one can reference<br/>\r\nBenjamin Young: <a href=\"https://json-schema.org/latest/relative-json-pointer.html\">https://json-schema.org/latest/relative-json-pointer.html</a><br/>\r\nRob Sanderson: $ref something something magic<br/>\r\n… I was thinking more about arbitrary ids, or something along those lines<br/>\r\nBenjamin Young: $ref is actually here <a href=\"https://json-schema.org/latest/json-schema-core.html#rfc.section.8.3.2.p.1\">https://json-schema.org/latest/json-schema-core.html#rfc.section.8.3.2.p.1</a><br/>\r\nGregg Kellogg: it kinda looks like nesting?<br/>\r\nGregg Kellogg: [gives example]<br/>\r\nRob Sanderson: I don’t think it’s a graph container, as there’s only one graph. It could be either an identifier container or a nesting container, without a mapped predicate<br/>\r\nPierre-Antoine Champin: [thinks about possible hacks to do that]<br/>\r\nIvan Herman: not sure which way we want to go<br/>\r\nBenjamin Young: no more calls for the rest of the year<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447922091> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/8#issuecomment-447922091"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/8> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447922091> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447922091> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447922091> <http://schema.org/startDate> "2018-12-17T17:09:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447922091> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/447922091> <http://schema.org/description> "Better than status 415 is [status 406 \"Not Acceptable\"](https://httpstatuses.com/406):\r\n\r\n> The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request, and the server is unwilling to supply a default representation." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448169452> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/109#issuecomment-448169452"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448169452> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448169452> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448169452> <http://schema.org/startDate> "2018-12-18T10:17:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448169452> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448169452> <http://schema.org/description> "I agree that an informative reference is required. However, I think SPARQL Overview (https://www.w3.org/TR/sparql11-overview/) would be a better entry point." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448212329> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/109#issuecomment-448212329"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448212329> .
<https://api.github.com/users/akuckartz> <http://schema.org/accountId> "akuckartz" .
<https://api.github.com/users/akuckartz> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/327651?v=4" .
<https://api.github.com/users/akuckartz> <http://schema.org/url> "https://github.com/akuckartz"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/akuckartz> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448212329> <http://schema.org/creator> <https://api.github.com/users/akuckartz> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448212329> <http://schema.org/startDate> "2018-12-18T12:59:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448212329> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448212329> <http://schema.org/description> "Both ;-)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448217739> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/109#issuecomment-448217739"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/109> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448217739> .
<https://api.github.com/users/PaulJeong14> <http://schema.org/accountId> "PaulJeong14" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/22092729?v=4" .
<https://api.github.com/users/PaulJeong14> <http://schema.org/url> "https://github.com/PaulJeong14"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/PaulJeong14> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448217739> <http://schema.org/creator> <https://api.github.com/users/PaulJeong14> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448217739> <http://schema.org/startDate> "2018-12-18T13:18:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448217739> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448217739> <http://schema.org/description> "Ok. anything will be fine with me." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448225534> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/110#issuecomment-448225534"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448225534> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448225534> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448225534> <http://schema.org/startDate> "2018-12-18T13:45:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448225534> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448225534> <http://schema.org/description> "@iherman will need to figure out the IPR issues.\r\n\r\nRegarding normative/informative references, ReSpec recently added some magic to figure this out, based on if it’s in a normative or informative section. It can be overridden, but the details of this are on the ReSpec wiki." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448237330> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/110#issuecomment-448237330"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448237330> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448237330> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448237330> <http://schema.org/startDate> "2018-12-18T14:23:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448237330> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448237330> <http://schema.org/description> "@gkellogg @pchampin: there is an automatic mechanism to check the possible IPR issues with PRs. @pchampin, you should associate your W3C account with your github account on https://www.w3.org/users/myprofile/connectedaccounts. Once this association is done, the system knows you are part of the WG and things happen (and you will not be asked again).\r\n\r\nI can give a green light for one specific contribution (I believe...) but it is better to do this association once and for all." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448260085> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/110#issuecomment-448260085"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448260085> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448260085> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448260085> <http://schema.org/startDate> "2018-12-18T15:29:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448260085> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448260085> <http://schema.org/description> "Once IPR is figured out, please go ahead and pull the PR." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448340641> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/110#issuecomment-448340641"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/110> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448340641> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448340641> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448340641> <http://schema.org/startDate> "2018-12-18T19:28:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448340641> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/448340641> <http://schema.org/description> "Sorry about the IPR issue. I just associated by github account to my W3C account." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/450210848> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/112#issuecomment-450210848"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/112> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/450210848> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/450210848> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/450210848> <http://schema.org/startDate> "2018-12-27T19:01:09Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/450210848> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/450210848> <http://schema.org/description> "Fixed in f6ea3eb." .

